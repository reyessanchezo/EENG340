ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS_1_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_1_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_1_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_1_EP_1_ISR, %function
  25              	USBFS_1_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS_1_episr.c"
   1:Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_1_episr.c **** * \file USBFS_1_episr.c
   3:Generated_Source\PSoC5/USBFS_1_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS_1_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_1_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_1_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_1_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_1_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_1_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_1_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_1_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_1_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_1_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_pvt.h"
  17:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "USBFS_1_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_1_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_1_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_1_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_1_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_1_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_1_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 2


  31:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_1_ISR
  32:Generated_Source\PSoC5/USBFS_1_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_1_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_1_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP1_INTR);
  38              		.loc 1 55 0
  39 0004 0D4B     		ldr	r3, .L3
  40 0006 0122     		movs	r2, #1
  41 0008 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_1_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP1].addr & USBFS_1_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP1].epCr0;
  42              		.loc 1 66 0
  43 000a 0D4B     		ldr	r3, .L3+4
  44 000c 9B7C     		ldrb	r3, [r3, #18]
  67:Generated_Source\PSoC5/USBFS_1_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP1) != USBFS_1_EP_TYPE_ISOC)
  45              		.loc 1 69 0
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 3


  46 000e 0D4B     		ldr	r3, .L3+8
  47 0010 1B7B     		ldrb	r3, [r3, #12]
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 03F00303 		and	r3, r3, #3
  50 0018 012B     		cmp	r3, #1
  51 001a 08D0     		beq	.L2
  70:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  71:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP1].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
  52              		.loc 1 71 0
  53 001c 094B     		ldr	r3, .L3+8
  54 001e DB7B     		ldrb	r3, [r3, #15]
  55 0020 DBB2     		uxtb	r3, r3
  56 0022 83F07F03 		eor	r3, r3, #127
  57 0026 DB43     		mvns	r3, r3
  58 0028 DAB2     		uxtb	r2, r3
  59 002a 064B     		ldr	r3, .L3+8
  60 002c DA73     		strb	r2, [r3, #15]
  61              	.L2:
  72:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP1].apiEpState = USBFS_1_EVENT_PENDING;
  62              		.loc 1 80 0
  63 002e 054B     		ldr	r3, .L3+8
  64 0030 0122     		movs	r2, #1
  65 0032 5A73     		strb	r2, [r3, #13]
  81:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP1)
  87:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_1_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_1_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 4


 107:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
  66              		.loc 1 107 0
  67 0034 00BF     		nop
  68 0036 BD46     		mov	sp, r7
  69              		.cfi_def_cfa_register 13
  70              		@ sp needed
  71 0038 80BC     		pop	{r7}
  72              		.cfi_restore 7
  73              		.cfi_def_cfa_offset 0
  74 003a 7047     		bx	lr
  75              	.L4:
  76              		.align	2
  77              	.L3:
  78 003c 0B600040 		.word	1073766411
  79 0040 FC5F0040 		.word	1073766396
  80 0044 00000000 		.word	USBFS_1_EP
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBFS_1_EP_1_ISR, .-USBFS_1_EP_1_ISR
  84              		.section	.text.USBFS_1_SOF_ISR,"ax",%progbits
  85              		.align	2
  86              		.global	USBFS_1_SOF_ISR
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBFS_1_SOF_ISR, %function
  90              	USBFS_1_SOF_ISR:
  91              	.LFB1:
 108:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 122:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP2_INTR);
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 5


 138:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP2].addr & USBFS_1_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP2].epCr0;
 149:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP2) != USBFS_1_EP_TYPE_ISOC)
 152:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP2].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 154:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP2].apiEpState = USBFS_1_EVENT_PENDING;
 163:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP2)
 169:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 6


 195:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 203:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP3].addr & USBFS_1_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP3].epCr0;
 230:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP3) != USBFS_1_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP3].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP3].apiEpState = USBFS_1_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP3)
 250:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 7


 252:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 271:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 284:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP4].addr & USBFS_1_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 8


 309:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP4].epCr0;
 311:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP4) != USBFS_1_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP4].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP4].apiEpState = USBFS_1_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP4)
 331:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 9


 366:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_1_episr.c ****                  USBFS_1_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP5].addr & USBFS_1_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_1_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP5) != USBFS_1_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP5].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP5].apiEpState = USBFS_1_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP5)
 413:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_1_episr.c **** 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 10


 423:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 448:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP6].addr & USBFS_1_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP6) != USBFS_1_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP6].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 11


 480:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP6].apiEpState = USBFS_1_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP6)
 495:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 516:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 12


 537:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_1_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP7].addr & USBFS_1_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_1_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP7].epCr0;
 557:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP7) != USBFS_1_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP7].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_1_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP7].apiEpState = USBFS_1_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_1_episr.c ****             if(USBFS_1_midi_out_ep == USBFS_1_EP7)
 578:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 13


 594:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_1_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_1_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieEpInterruptSource(USBFS_1_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_1_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_1_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_1_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_1_episr.c ****         if (0u != (USBFS_1_EP[USBFS_1_EP8].addr & USBFS_1_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_1_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_1_episr.c ****             (void) USBFS_1_SIE_EP_BASE.sieEp[USBFS_1_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_GET_EP_TYPE(USBFS_1_EP8) != USBFS_1_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_EP[USBFS_1_EP8].epToggle ^= USBFS_1_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_1_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_1_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_1_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 14


 651:Generated_Source\PSoC5/USBFS_1_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_1_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_1_episr.c ****             USBFS_1_EP[USBFS_1_EP8].apiEpState = USBFS_1_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_1_episr.c ****         #if (defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_1_episr.c ****             !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_1_episr.c ****             if (USBFS_1_midi_out_ep == USBFS_1_EP8)
 660:Generated_Source\PSoC5/USBFS_1_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_1_episr.c ****                 USBFS_1_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_1_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_1_episr.c ****         #endif /* (USBFS_1_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_1_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_1_episr.c ****     #if (CY_PSOC3 && defined(USBFS_1_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_1_episr.c ****         !defined(USBFS_1_MAIN_SERVICE_MIDI_OUT) && USBFS_1_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_1_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_1_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_1_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (CY_PSOC3 && USBFS_1_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_1_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_1_episr.c ****     * Function Name: USBFS_1_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_1_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_1_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_1_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_1_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_1_episr.c ****     CY_ISR(USBFS_1_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_1_episr.c ****     {
  92              		.loc 1 694 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 695:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 15


 698:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_1_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_1_episr.c ****     #ifdef USBFS_1_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_1_episr.c ****         USBFS_1_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_1_episr.c ****     #endif /* (USBFS_1_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_1_episr.c ****     }
 102              		.loc 1 708 0
 103 0004 00BF     		nop
 104 0006 BD46     		mov	sp, r7
 105              		.cfi_def_cfa_register 13
 106              		@ sp needed
 107 0008 80BC     		pop	{r7}
 108              		.cfi_restore 7
 109              		.cfi_def_cfa_offset 0
 110 000a 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1:
 113              		.size	USBFS_1_SOF_ISR, .-USBFS_1_SOF_ISR
 114              		.section	.text.USBFS_1_BUS_RESET_ISR,"ax",%progbits
 115              		.align	2
 116              		.global	USBFS_1_BUS_RESET_ISR
 117              		.thumb
 118              		.thumb_func
 119              		.type	USBFS_1_BUS_RESET_ISR, %function
 120              	USBFS_1_BUS_RESET_ISR:
 121              	.LFB2:
 709:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_1_episr.c **** #if (USBFS_1_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_1_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_1_episr.c **** * Function Name: USBFS_1_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_1_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_1_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_1_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_1_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_1_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_1_episr.c **** CY_ISR(USBFS_1_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_1_episr.c **** {
 122              		.loc 1 723 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 724:Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 16


 725:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_1_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ClearSieInterruptSource(USBFS_1_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_ReInitComponent();
 132              		.loc 1 734 0
 133 0004 FFF7FEFF 		bl	USBFS_1_ReInitComponent
 735:Generated_Source\PSoC5/USBFS_1_episr.c **** 
 736:Generated_Source\PSoC5/USBFS_1_episr.c **** #ifdef USBFS_1_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBFS_1_episr.c ****     USBFS_1_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBFS_1_episr.c **** #endif /* (USBFS_1_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBFS_1_episr.c **** }
 134              		.loc 1 739 0
 135 0008 00BF     		nop
 136 000a 80BD     		pop	{r7, pc}
 137              		.cfi_endproc
 138              	.LFE2:
 139              		.size	USBFS_1_BUS_RESET_ISR, .-USBFS_1_BUS_RESET_ISR
 140              		.text
 141              	.Letext0:
 142              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 143              		.file 3 "Generated_Source\\PSoC5\\USBFS_1.h"
 144              		.file 4 "Generated_Source\\PSoC5\\USBFS_1_pvt.h"
 145              		.section	.debug_info,"",%progbits
 146              	.Ldebug_info0:
 147 0000 15020000 		.4byte	0x215
 148 0004 0400     		.2byte	0x4
 149 0006 00000000 		.4byte	.Ldebug_abbrev0
 150 000a 04       		.byte	0x4
 151 000b 01       		.uleb128 0x1
 152 000c 0B000000 		.4byte	.LASF36
 153 0010 0C       		.byte	0xc
 154 0011 B8000000 		.4byte	.LASF37
 155 0015 C8010000 		.4byte	.LASF38
 156 0019 00000000 		.4byte	.Ldebug_ranges0+0
 157 001d 00000000 		.4byte	0
 158 0021 00000000 		.4byte	.Ldebug_line0
 159 0025 02       		.uleb128 0x2
 160 0026 01       		.byte	0x1
 161 0027 06       		.byte	0x6
 162 0028 CF020000 		.4byte	.LASF0
 163 002c 02       		.uleb128 0x2
 164 002d 01       		.byte	0x1
 165 002e 08       		.byte	0x8
 166 002f 0C010000 		.4byte	.LASF1
 167 0033 02       		.uleb128 0x2
 168 0034 02       		.byte	0x2
 169 0035 05       		.byte	0x5
 170 0036 95020000 		.4byte	.LASF2
 171 003a 02       		.uleb128 0x2
 172 003b 02       		.byte	0x2
 173 003c 07       		.byte	0x7
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 17


 174 003d A5000000 		.4byte	.LASF3
 175 0041 02       		.uleb128 0x2
 176 0042 04       		.byte	0x4
 177 0043 05       		.byte	0x5
 178 0044 AF020000 		.4byte	.LASF4
 179 0048 02       		.uleb128 0x2
 180 0049 04       		.byte	0x4
 181 004a 07       		.byte	0x7
 182 004b 1F010000 		.4byte	.LASF5
 183 004f 02       		.uleb128 0x2
 184 0050 08       		.byte	0x8
 185 0051 05       		.byte	0x5
 186 0052 77020000 		.4byte	.LASF6
 187 0056 02       		.uleb128 0x2
 188 0057 08       		.byte	0x8
 189 0058 07       		.byte	0x7
 190 0059 A7010000 		.4byte	.LASF7
 191 005d 03       		.uleb128 0x3
 192 005e 04       		.byte	0x4
 193 005f 05       		.byte	0x5
 194 0060 696E7400 		.ascii	"int\000"
 195 0064 02       		.uleb128 0x2
 196 0065 04       		.byte	0x4
 197 0066 07       		.byte	0x7
 198 0067 89010000 		.4byte	.LASF8
 199 006b 04       		.uleb128 0x4
 200 006c 9F020000 		.4byte	.LASF9
 201 0070 02       		.byte	0x2
 202 0071 E401     		.2byte	0x1e4
 203 0073 2C000000 		.4byte	0x2c
 204 0077 04       		.uleb128 0x4
 205 0078 77010000 		.4byte	.LASF10
 206 007c 02       		.byte	0x2
 207 007d E501     		.2byte	0x1e5
 208 007f 3A000000 		.4byte	0x3a
 209 0083 02       		.uleb128 0x2
 210 0084 04       		.byte	0x4
 211 0085 04       		.byte	0x4
 212 0086 9F000000 		.4byte	.LASF11
 213 008a 02       		.uleb128 0x2
 214 008b 08       		.byte	0x8
 215 008c 04       		.byte	0x4
 216 008d 53010000 		.4byte	.LASF12
 217 0091 02       		.uleb128 0x2
 218 0092 01       		.byte	0x1
 219 0093 08       		.byte	0x8
 220 0094 85020000 		.4byte	.LASF13
 221 0098 04       		.uleb128 0x4
 222 0099 1A010000 		.4byte	.LASF14
 223 009d 02       		.byte	0x2
 224 009e 8E02     		.2byte	0x28e
 225 00a0 A4000000 		.4byte	0xa4
 226 00a4 05       		.uleb128 0x5
 227 00a5 6B000000 		.4byte	0x6b
 228 00a9 02       		.uleb128 0x2
 229 00aa 08       		.byte	0x8
 230 00ab 04       		.byte	0x4
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 18


 231 00ac C3020000 		.4byte	.LASF15
 232 00b0 02       		.uleb128 0x2
 233 00b1 04       		.byte	0x4
 234 00b2 07       		.byte	0x7
 235 00b3 67020000 		.4byte	.LASF16
 236 00b7 06       		.uleb128 0x6
 237 00b8 0C       		.byte	0xc
 238 00b9 03       		.byte	0x3
 239 00ba 90       		.byte	0x90
 240 00bb 2C010000 		.4byte	0x12c
 241 00bf 07       		.uleb128 0x7
 242 00c0 5A010000 		.4byte	.LASF17
 243 00c4 03       		.byte	0x3
 244 00c5 92       		.byte	0x92
 245 00c6 6B000000 		.4byte	0x6b
 246 00ca 00       		.byte	0
 247 00cb 07       		.uleb128 0x7
 248 00cc 7E010000 		.4byte	.LASF18
 249 00d0 03       		.byte	0x3
 250 00d1 93       		.byte	0x93
 251 00d2 6B000000 		.4byte	0x6b
 252 00d6 01       		.byte	0x1
 253 00d7 07       		.uleb128 0x7
 254 00d8 BE010000 		.4byte	.LASF19
 255 00dc 03       		.byte	0x3
 256 00dd 94       		.byte	0x94
 257 00de 6B000000 		.4byte	0x6b
 258 00e2 02       		.byte	0x2
 259 00e3 07       		.uleb128 0x7
 260 00e4 03010000 		.4byte	.LASF20
 261 00e8 03       		.byte	0x3
 262 00e9 95       		.byte	0x95
 263 00ea 6B000000 		.4byte	0x6b
 264 00ee 03       		.byte	0x3
 265 00ef 07       		.uleb128 0x7
 266 00f0 31010000 		.4byte	.LASF21
 267 00f4 03       		.byte	0x3
 268 00f5 96       		.byte	0x96
 269 00f6 6B000000 		.4byte	0x6b
 270 00fa 04       		.byte	0x4
 271 00fb 07       		.uleb128 0x7
 272 00fc 70020000 		.4byte	.LASF22
 273 0100 03       		.byte	0x3
 274 0101 97       		.byte	0x97
 275 0102 6B000000 		.4byte	0x6b
 276 0106 05       		.byte	0x5
 277 0107 07       		.uleb128 0x7
 278 0108 B8020000 		.4byte	.LASF23
 279 010c 03       		.byte	0x3
 280 010d 98       		.byte	0x98
 281 010e 77000000 		.4byte	0x77
 282 0112 06       		.byte	0x6
 283 0113 07       		.uleb128 0x7
 284 0114 8A020000 		.4byte	.LASF24
 285 0118 03       		.byte	0x3
 286 0119 99       		.byte	0x99
 287 011a 77000000 		.4byte	0x77
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 19


 288 011e 08       		.byte	0x8
 289 011f 07       		.uleb128 0x7
 290 0120 A5020000 		.4byte	.LASF25
 291 0124 03       		.byte	0x3
 292 0125 9A       		.byte	0x9a
 293 0126 6B000000 		.4byte	0x6b
 294 012a 0A       		.byte	0xa
 295 012b 00       		.byte	0
 296 012c 08       		.uleb128 0x8
 297 012d 3C010000 		.4byte	.LASF26
 298 0131 03       		.byte	0x3
 299 0132 9B       		.byte	0x9b
 300 0133 B7000000 		.4byte	0xb7
 301 0137 06       		.uleb128 0x6
 302 0138 10       		.byte	0x10
 303 0139 03       		.byte	0x3
 304 013a D7       		.byte	0xd7
 305 013b 70010000 		.4byte	0x170
 306 013f 07       		.uleb128 0x7
 307 0140 F5000000 		.4byte	.LASF27
 308 0144 03       		.byte	0x3
 309 0145 D9       		.byte	0xd9
 310 0146 6B000000 		.4byte	0x6b
 311 014a 00       		.byte	0
 312 014b 07       		.uleb128 0x7
 313 014c FC000000 		.4byte	.LASF28
 314 0150 03       		.byte	0x3
 315 0151 DA       		.byte	0xda
 316 0152 6B000000 		.4byte	0x6b
 317 0156 01       		.byte	0x1
 318 0157 07       		.uleb128 0x7
 319 0158 99000000 		.4byte	.LASF29
 320 015c 03       		.byte	0x3
 321 015d DB       		.byte	0xdb
 322 015e 6B000000 		.4byte	0x6b
 323 0162 02       		.byte	0x2
 324 0163 09       		.uleb128 0x9
 325 0164 67617000 		.ascii	"gap\000"
 326 0168 03       		.byte	0x3
 327 0169 DC       		.byte	0xdc
 328 016a 70010000 		.4byte	0x170
 329 016e 03       		.byte	0x3
 330 016f 00       		.byte	0
 331 0170 0A       		.uleb128 0xa
 332 0171 6B000000 		.4byte	0x6b
 333 0175 80010000 		.4byte	0x180
 334 0179 0B       		.uleb128 0xb
 335 017a B0000000 		.4byte	0xb0
 336 017e 0C       		.byte	0xc
 337 017f 00       		.byte	0
 338 0180 08       		.uleb128 0x8
 339 0181 61010000 		.4byte	.LASF30
 340 0185 03       		.byte	0x3
 341 0186 DD       		.byte	0xdd
 342 0187 37010000 		.4byte	0x137
 343 018b 0C       		.uleb128 0xc
 344 018c 90       		.byte	0x90
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 20


 345 018d 03       		.byte	0x3
 346 018e 1101     		.2byte	0x111
 347 0190 A2010000 		.4byte	0x1a2
 348 0194 0D       		.uleb128 0xd
 349 0195 36010000 		.4byte	.LASF31
 350 0199 03       		.byte	0x3
 351 019a 1301     		.2byte	0x113
 352 019c A2010000 		.4byte	0x1a2
 353 01a0 00       		.byte	0
 354 01a1 00       		.byte	0
 355 01a2 0A       		.uleb128 0xa
 356 01a3 80010000 		.4byte	0x180
 357 01a7 B2010000 		.4byte	0x1b2
 358 01ab 0B       		.uleb128 0xb
 359 01ac B0000000 		.4byte	0xb0
 360 01b0 08       		.byte	0x8
 361 01b1 00       		.byte	0
 362 01b2 04       		.uleb128 0x4
 363 01b3 DB020000 		.4byte	.LASF32
 364 01b7 03       		.byte	0x3
 365 01b8 1401     		.2byte	0x114
 366 01ba 8B010000 		.4byte	0x18b
 367 01be 0E       		.uleb128 0xe
 368 01bf 96010000 		.4byte	.LASF33
 369 01c3 01       		.byte	0x1
 370 01c4 25       		.byte	0x25
 371 01c5 00000000 		.4byte	.LFB0
 372 01c9 48000000 		.4byte	.LFE0-.LFB0
 373 01cd 01       		.uleb128 0x1
 374 01ce 9C       		.byte	0x9c
 375 01cf 0F       		.uleb128 0xf
 376 01d0 57020000 		.4byte	.LASF34
 377 01d4 01       		.byte	0x1
 378 01d5 B502     		.2byte	0x2b5
 379 01d7 00000000 		.4byte	.LFB1
 380 01db 0C000000 		.4byte	.LFE1-.LFB1
 381 01df 01       		.uleb128 0x1
 382 01e0 9C       		.byte	0x9c
 383 01e1 10       		.uleb128 0x10
 384 01e2 DF000000 		.4byte	.LASF35
 385 01e6 01       		.byte	0x1
 386 01e7 D202     		.2byte	0x2d2
 387 01e9 00000000 		.4byte	.LFB2
 388 01ed 0C000000 		.4byte	.LFE2-.LFB2
 389 01f1 01       		.uleb128 0x1
 390 01f2 9C       		.byte	0x9c
 391 01f3 0A       		.uleb128 0xa
 392 01f4 03020000 		.4byte	0x203
 393 01f8 03020000 		.4byte	0x203
 394 01fc 0B       		.uleb128 0xb
 395 01fd B0000000 		.4byte	0xb0
 396 0201 08       		.byte	0x8
 397 0202 00       		.byte	0
 398 0203 05       		.uleb128 0x5
 399 0204 2C010000 		.4byte	0x12c
 400 0208 11       		.uleb128 0x11
 401 0209 00000000 		.4byte	.LASF39
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 21


 402 020d 04       		.byte	0x4
 403 020e 7F       		.byte	0x7f
 404 020f 13020000 		.4byte	0x213
 405 0213 05       		.uleb128 0x5
 406 0214 F3010000 		.4byte	0x1f3
 407 0218 00       		.byte	0
 408              		.section	.debug_abbrev,"",%progbits
 409              	.Ldebug_abbrev0:
 410 0000 01       		.uleb128 0x1
 411 0001 11       		.uleb128 0x11
 412 0002 01       		.byte	0x1
 413 0003 25       		.uleb128 0x25
 414 0004 0E       		.uleb128 0xe
 415 0005 13       		.uleb128 0x13
 416 0006 0B       		.uleb128 0xb
 417 0007 03       		.uleb128 0x3
 418 0008 0E       		.uleb128 0xe
 419 0009 1B       		.uleb128 0x1b
 420 000a 0E       		.uleb128 0xe
 421 000b 55       		.uleb128 0x55
 422 000c 17       		.uleb128 0x17
 423 000d 11       		.uleb128 0x11
 424 000e 01       		.uleb128 0x1
 425 000f 10       		.uleb128 0x10
 426 0010 17       		.uleb128 0x17
 427 0011 00       		.byte	0
 428 0012 00       		.byte	0
 429 0013 02       		.uleb128 0x2
 430 0014 24       		.uleb128 0x24
 431 0015 00       		.byte	0
 432 0016 0B       		.uleb128 0xb
 433 0017 0B       		.uleb128 0xb
 434 0018 3E       		.uleb128 0x3e
 435 0019 0B       		.uleb128 0xb
 436 001a 03       		.uleb128 0x3
 437 001b 0E       		.uleb128 0xe
 438 001c 00       		.byte	0
 439 001d 00       		.byte	0
 440 001e 03       		.uleb128 0x3
 441 001f 24       		.uleb128 0x24
 442 0020 00       		.byte	0
 443 0021 0B       		.uleb128 0xb
 444 0022 0B       		.uleb128 0xb
 445 0023 3E       		.uleb128 0x3e
 446 0024 0B       		.uleb128 0xb
 447 0025 03       		.uleb128 0x3
 448 0026 08       		.uleb128 0x8
 449 0027 00       		.byte	0
 450 0028 00       		.byte	0
 451 0029 04       		.uleb128 0x4
 452 002a 16       		.uleb128 0x16
 453 002b 00       		.byte	0
 454 002c 03       		.uleb128 0x3
 455 002d 0E       		.uleb128 0xe
 456 002e 3A       		.uleb128 0x3a
 457 002f 0B       		.uleb128 0xb
 458 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 22


 459 0031 05       		.uleb128 0x5
 460 0032 49       		.uleb128 0x49
 461 0033 13       		.uleb128 0x13
 462 0034 00       		.byte	0
 463 0035 00       		.byte	0
 464 0036 05       		.uleb128 0x5
 465 0037 35       		.uleb128 0x35
 466 0038 00       		.byte	0
 467 0039 49       		.uleb128 0x49
 468 003a 13       		.uleb128 0x13
 469 003b 00       		.byte	0
 470 003c 00       		.byte	0
 471 003d 06       		.uleb128 0x6
 472 003e 13       		.uleb128 0x13
 473 003f 01       		.byte	0x1
 474 0040 0B       		.uleb128 0xb
 475 0041 0B       		.uleb128 0xb
 476 0042 3A       		.uleb128 0x3a
 477 0043 0B       		.uleb128 0xb
 478 0044 3B       		.uleb128 0x3b
 479 0045 0B       		.uleb128 0xb
 480 0046 01       		.uleb128 0x1
 481 0047 13       		.uleb128 0x13
 482 0048 00       		.byte	0
 483 0049 00       		.byte	0
 484 004a 07       		.uleb128 0x7
 485 004b 0D       		.uleb128 0xd
 486 004c 00       		.byte	0
 487 004d 03       		.uleb128 0x3
 488 004e 0E       		.uleb128 0xe
 489 004f 3A       		.uleb128 0x3a
 490 0050 0B       		.uleb128 0xb
 491 0051 3B       		.uleb128 0x3b
 492 0052 0B       		.uleb128 0xb
 493 0053 49       		.uleb128 0x49
 494 0054 13       		.uleb128 0x13
 495 0055 38       		.uleb128 0x38
 496 0056 0B       		.uleb128 0xb
 497 0057 00       		.byte	0
 498 0058 00       		.byte	0
 499 0059 08       		.uleb128 0x8
 500 005a 16       		.uleb128 0x16
 501 005b 00       		.byte	0
 502 005c 03       		.uleb128 0x3
 503 005d 0E       		.uleb128 0xe
 504 005e 3A       		.uleb128 0x3a
 505 005f 0B       		.uleb128 0xb
 506 0060 3B       		.uleb128 0x3b
 507 0061 0B       		.uleb128 0xb
 508 0062 49       		.uleb128 0x49
 509 0063 13       		.uleb128 0x13
 510 0064 00       		.byte	0
 511 0065 00       		.byte	0
 512 0066 09       		.uleb128 0x9
 513 0067 0D       		.uleb128 0xd
 514 0068 00       		.byte	0
 515 0069 03       		.uleb128 0x3
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 23


 516 006a 08       		.uleb128 0x8
 517 006b 3A       		.uleb128 0x3a
 518 006c 0B       		.uleb128 0xb
 519 006d 3B       		.uleb128 0x3b
 520 006e 0B       		.uleb128 0xb
 521 006f 49       		.uleb128 0x49
 522 0070 13       		.uleb128 0x13
 523 0071 38       		.uleb128 0x38
 524 0072 0B       		.uleb128 0xb
 525 0073 00       		.byte	0
 526 0074 00       		.byte	0
 527 0075 0A       		.uleb128 0xa
 528 0076 01       		.uleb128 0x1
 529 0077 01       		.byte	0x1
 530 0078 49       		.uleb128 0x49
 531 0079 13       		.uleb128 0x13
 532 007a 01       		.uleb128 0x1
 533 007b 13       		.uleb128 0x13
 534 007c 00       		.byte	0
 535 007d 00       		.byte	0
 536 007e 0B       		.uleb128 0xb
 537 007f 21       		.uleb128 0x21
 538 0080 00       		.byte	0
 539 0081 49       		.uleb128 0x49
 540 0082 13       		.uleb128 0x13
 541 0083 2F       		.uleb128 0x2f
 542 0084 0B       		.uleb128 0xb
 543 0085 00       		.byte	0
 544 0086 00       		.byte	0
 545 0087 0C       		.uleb128 0xc
 546 0088 13       		.uleb128 0x13
 547 0089 01       		.byte	0x1
 548 008a 0B       		.uleb128 0xb
 549 008b 0B       		.uleb128 0xb
 550 008c 3A       		.uleb128 0x3a
 551 008d 0B       		.uleb128 0xb
 552 008e 3B       		.uleb128 0x3b
 553 008f 05       		.uleb128 0x5
 554 0090 01       		.uleb128 0x1
 555 0091 13       		.uleb128 0x13
 556 0092 00       		.byte	0
 557 0093 00       		.byte	0
 558 0094 0D       		.uleb128 0xd
 559 0095 0D       		.uleb128 0xd
 560 0096 00       		.byte	0
 561 0097 03       		.uleb128 0x3
 562 0098 0E       		.uleb128 0xe
 563 0099 3A       		.uleb128 0x3a
 564 009a 0B       		.uleb128 0xb
 565 009b 3B       		.uleb128 0x3b
 566 009c 05       		.uleb128 0x5
 567 009d 49       		.uleb128 0x49
 568 009e 13       		.uleb128 0x13
 569 009f 38       		.uleb128 0x38
 570 00a0 0B       		.uleb128 0xb
 571 00a1 00       		.byte	0
 572 00a2 00       		.byte	0
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 24


 573 00a3 0E       		.uleb128 0xe
 574 00a4 2E       		.uleb128 0x2e
 575 00a5 00       		.byte	0
 576 00a6 3F       		.uleb128 0x3f
 577 00a7 19       		.uleb128 0x19
 578 00a8 03       		.uleb128 0x3
 579 00a9 0E       		.uleb128 0xe
 580 00aa 3A       		.uleb128 0x3a
 581 00ab 0B       		.uleb128 0xb
 582 00ac 3B       		.uleb128 0x3b
 583 00ad 0B       		.uleb128 0xb
 584 00ae 27       		.uleb128 0x27
 585 00af 19       		.uleb128 0x19
 586 00b0 11       		.uleb128 0x11
 587 00b1 01       		.uleb128 0x1
 588 00b2 12       		.uleb128 0x12
 589 00b3 06       		.uleb128 0x6
 590 00b4 40       		.uleb128 0x40
 591 00b5 18       		.uleb128 0x18
 592 00b6 9742     		.uleb128 0x2117
 593 00b8 19       		.uleb128 0x19
 594 00b9 00       		.byte	0
 595 00ba 00       		.byte	0
 596 00bb 0F       		.uleb128 0xf
 597 00bc 2E       		.uleb128 0x2e
 598 00bd 00       		.byte	0
 599 00be 3F       		.uleb128 0x3f
 600 00bf 19       		.uleb128 0x19
 601 00c0 03       		.uleb128 0x3
 602 00c1 0E       		.uleb128 0xe
 603 00c2 3A       		.uleb128 0x3a
 604 00c3 0B       		.uleb128 0xb
 605 00c4 3B       		.uleb128 0x3b
 606 00c5 05       		.uleb128 0x5
 607 00c6 27       		.uleb128 0x27
 608 00c7 19       		.uleb128 0x19
 609 00c8 11       		.uleb128 0x11
 610 00c9 01       		.uleb128 0x1
 611 00ca 12       		.uleb128 0x12
 612 00cb 06       		.uleb128 0x6
 613 00cc 40       		.uleb128 0x40
 614 00cd 18       		.uleb128 0x18
 615 00ce 9742     		.uleb128 0x2117
 616 00d0 19       		.uleb128 0x19
 617 00d1 00       		.byte	0
 618 00d2 00       		.byte	0
 619 00d3 10       		.uleb128 0x10
 620 00d4 2E       		.uleb128 0x2e
 621 00d5 00       		.byte	0
 622 00d6 3F       		.uleb128 0x3f
 623 00d7 19       		.uleb128 0x19
 624 00d8 03       		.uleb128 0x3
 625 00d9 0E       		.uleb128 0xe
 626 00da 3A       		.uleb128 0x3a
 627 00db 0B       		.uleb128 0xb
 628 00dc 3B       		.uleb128 0x3b
 629 00dd 05       		.uleb128 0x5
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 25


 630 00de 27       		.uleb128 0x27
 631 00df 19       		.uleb128 0x19
 632 00e0 11       		.uleb128 0x11
 633 00e1 01       		.uleb128 0x1
 634 00e2 12       		.uleb128 0x12
 635 00e3 06       		.uleb128 0x6
 636 00e4 40       		.uleb128 0x40
 637 00e5 18       		.uleb128 0x18
 638 00e6 9642     		.uleb128 0x2116
 639 00e8 19       		.uleb128 0x19
 640 00e9 00       		.byte	0
 641 00ea 00       		.byte	0
 642 00eb 11       		.uleb128 0x11
 643 00ec 34       		.uleb128 0x34
 644 00ed 00       		.byte	0
 645 00ee 03       		.uleb128 0x3
 646 00ef 0E       		.uleb128 0xe
 647 00f0 3A       		.uleb128 0x3a
 648 00f1 0B       		.uleb128 0xb
 649 00f2 3B       		.uleb128 0x3b
 650 00f3 0B       		.uleb128 0xb
 651 00f4 49       		.uleb128 0x49
 652 00f5 13       		.uleb128 0x13
 653 00f6 3F       		.uleb128 0x3f
 654 00f7 19       		.uleb128 0x19
 655 00f8 3C       		.uleb128 0x3c
 656 00f9 19       		.uleb128 0x19
 657 00fa 00       		.byte	0
 658 00fb 00       		.byte	0
 659 00fc 00       		.byte	0
 660              		.section	.debug_aranges,"",%progbits
 661 0000 2C000000 		.4byte	0x2c
 662 0004 0200     		.2byte	0x2
 663 0006 00000000 		.4byte	.Ldebug_info0
 664 000a 04       		.byte	0x4
 665 000b 00       		.byte	0
 666 000c 0000     		.2byte	0
 667 000e 0000     		.2byte	0
 668 0010 00000000 		.4byte	.LFB0
 669 0014 48000000 		.4byte	.LFE0-.LFB0
 670 0018 00000000 		.4byte	.LFB1
 671 001c 0C000000 		.4byte	.LFE1-.LFB1
 672 0020 00000000 		.4byte	.LFB2
 673 0024 0C000000 		.4byte	.LFE2-.LFB2
 674 0028 00000000 		.4byte	0
 675 002c 00000000 		.4byte	0
 676              		.section	.debug_ranges,"",%progbits
 677              	.Ldebug_ranges0:
 678 0000 00000000 		.4byte	.LFB0
 679 0004 48000000 		.4byte	.LFE0
 680 0008 00000000 		.4byte	.LFB1
 681 000c 0C000000 		.4byte	.LFE1
 682 0010 00000000 		.4byte	.LFB2
 683 0014 0C000000 		.4byte	.LFE2
 684 0018 00000000 		.4byte	0
 685 001c 00000000 		.4byte	0
 686              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 26


 687              	.Ldebug_line0:
 688 0000 B2000000 		.section	.debug_str,"MS",%progbits,1
 688      02006800 
 688      00000201 
 688      FB0E0D00 
 688      01010101 
 689              	.LASF39:
 690 0000 55534246 		.ascii	"USBFS_1_EP\000"
 690      535F315F 
 690      455000
 691              	.LASF36:
 692 000b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 692      43313120 
 692      352E342E 
 692      31203230 
 692      31363036 
 693 003e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 693      20726576 
 693      6973696F 
 693      6E203233 
 693      37373135 
 694 0071 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 694      66756E63 
 694      74696F6E 
 694      2D736563 
 694      74696F6E 
 695              	.LASF29:
 696 0099 65704372 		.ascii	"epCr0\000"
 696      3000
 697              	.LASF11:
 698 009f 666C6F61 		.ascii	"float\000"
 698      7400
 699              	.LASF3:
 700 00a5 73686F72 		.ascii	"short unsigned int\000"
 700      7420756E 
 700      7369676E 
 700      65642069 
 700      6E7400
 701              	.LASF37:
 702 00b8 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_1_episr.c\000"
 702      72617465 
 702      645F536F 
 702      75726365 
 702      5C50536F 
 703              	.LASF35:
 704 00df 55534246 		.ascii	"USBFS_1_BUS_RESET_ISR\000"
 704      535F315F 
 704      4255535F 
 704      52455345 
 704      545F4953 
 705              	.LASF27:
 706 00f5 6570436E 		.ascii	"epCnt0\000"
 706      743000
 707              	.LASF28:
 708 00fc 6570436E 		.ascii	"epCnt1\000"
 708      743100
 709              	.LASF20:
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 27


 710 0103 6570546F 		.ascii	"epToggle\000"
 710      67676C65 
 710      00
 711              	.LASF1:
 712 010c 756E7369 		.ascii	"unsigned char\000"
 712      676E6564 
 712      20636861 
 712      7200
 713              	.LASF14:
 714 011a 72656738 		.ascii	"reg8\000"
 714      00
 715              	.LASF5:
 716 011f 6C6F6E67 		.ascii	"long unsigned int\000"
 716      20756E73 
 716      69676E65 
 716      6420696E 
 716      7400
 717              	.LASF21:
 718 0131 61646472 		.ascii	"addr\000"
 718      00
 719              	.LASF31:
 720 0136 73696545 		.ascii	"sieEp\000"
 720      7000
 721              	.LASF26:
 722 013c 545F5553 		.ascii	"T_USBFS_1_EP_CTL_BLOCK\000"
 722      4246535F 
 722      315F4550 
 722      5F43544C 
 722      5F424C4F 
 723              	.LASF12:
 724 0153 646F7562 		.ascii	"double\000"
 724      6C6500
 725              	.LASF17:
 726 015a 61747472 		.ascii	"attrib\000"
 726      696200
 727              	.LASF30:
 728 0161 55534246 		.ascii	"USBFS_1_sie_ep_struct\000"
 728      535F315F 
 728      7369655F 
 728      65705F73 
 728      74727563 
 729              	.LASF10:
 730 0177 75696E74 		.ascii	"uint16\000"
 730      313600
 731              	.LASF18:
 732 017e 61706945 		.ascii	"apiEpState\000"
 732      70537461 
 732      746500
 733              	.LASF8:
 734 0189 756E7369 		.ascii	"unsigned int\000"
 734      676E6564 
 734      20696E74 
 734      00
 735              	.LASF33:
 736 0196 55534246 		.ascii	"USBFS_1_EP_1_ISR\000"
 736      535F315F 
 736      45505F31 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 28


 736      5F495352 
 736      00
 737              	.LASF7:
 738 01a7 6C6F6E67 		.ascii	"long long unsigned int\000"
 738      206C6F6E 
 738      6720756E 
 738      7369676E 
 738      65642069 
 739              	.LASF19:
 740 01be 68774570 		.ascii	"hwEpState\000"
 740      53746174 
 740      6500
 741              	.LASF38:
 742 01c8 433A5C55 		.ascii	"C:\\Users\\oars0\\Documents\\GitHub\\Interfacing_La"
 742      73657273 
 742      5C6F6172 
 742      73305C44 
 742      6F63756D 
 743 01f6 625C4C61 		.ascii	"b\\Lab_2-usb-i2c-mouse-reyessanchezo\\PSoC_Creator\\"
 743      625F322D 
 743      7573622D 
 743      6932632D 
 743      6D6F7573 
 744 0227 43453139 		.ascii	"CE195394_HID_Mouse01\\CE195394_HID_Mouse01.cydsn\000"
 744      35333934 
 744      5F484944 
 744      5F4D6F75 
 744      73653031 
 745              	.LASF34:
 746 0257 55534246 		.ascii	"USBFS_1_SOF_ISR\000"
 746      535F315F 
 746      534F465F 
 746      49535200 
 747              	.LASF16:
 748 0267 73697A65 		.ascii	"sizetype\000"
 748      74797065 
 748      00
 749              	.LASF22:
 750 0270 65704D6F 		.ascii	"epMode\000"
 750      646500
 751              	.LASF6:
 752 0277 6C6F6E67 		.ascii	"long long int\000"
 752      206C6F6E 
 752      6720696E 
 752      7400
 753              	.LASF13:
 754 0285 63686172 		.ascii	"char\000"
 754      00
 755              	.LASF24:
 756 028a 62756666 		.ascii	"bufferSize\000"
 756      65725369 
 756      7A6500
 757              	.LASF2:
 758 0295 73686F72 		.ascii	"short int\000"
 758      7420696E 
 758      7400
 759              	.LASF9:
ARM GAS  C:\Users\oars0\AppData\Local\Temp\ccN3zhne.s 			page 29


 760 029f 75696E74 		.ascii	"uint8\000"
 760      3800
 761              	.LASF25:
 762 02a5 696E7465 		.ascii	"interface\000"
 762      72666163 
 762      6500
 763              	.LASF4:
 764 02af 6C6F6E67 		.ascii	"long int\000"
 764      20696E74 
 764      00
 765              	.LASF23:
 766 02b8 62756666 		.ascii	"buffOffset\000"
 766      4F666673 
 766      657400
 767              	.LASF15:
 768 02c3 6C6F6E67 		.ascii	"long double\000"
 768      20646F75 
 768      626C6500 
 769              	.LASF0:
 770 02cf 7369676E 		.ascii	"signed char\000"
 770      65642063 
 770      68617200 
 771              	.LASF32:
 772 02db 55534246 		.ascii	"USBFS_1_sie_eps_struct\000"
 772      535F315F 
 772      7369655F 
 772      6570735F 
 772      73747275 
 773              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
