Loading plugins phase: Elapsed time ==> 0s.140ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2.cyprj -d CY8C5888LTI-LP097 -s C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 1s.505ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.036ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  Mouse_2.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2.cyprj -dcpsoc3 Mouse_2.v -verilog
======================================================================

======================================================================
Compiling:  Mouse_2.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2.cyprj -dcpsoc3 Mouse_2.v -verilog
======================================================================

======================================================================
Compiling:  Mouse_2.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2.cyprj -dcpsoc3 -verilog Mouse_2.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Thu Feb 22 13:44:25 2024


======================================================================
Compiling:  Mouse_2.v
Program  :   vpp
Options  :    -yv2 -q10 Mouse_2.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Thu Feb 22 13:44:25 2024

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'Mouse_2.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
Mouse_2.v (line 1251, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  Mouse_2.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2.cyprj -dcpsoc3 -verilog Mouse_2.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Thu Feb 22 13:44:26 2024

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\codegentemp\Mouse_2.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\codegentemp\Mouse_2.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  Mouse_2.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2.cyprj -dcpsoc3 -verilog Mouse_2.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Thu Feb 22 13:44:26 2024

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\codegentemp\Mouse_2.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\codegentemp\Mouse_2.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\USBFS_1:dma_complete_0\
	\USBFS_1:Net_1922\
	\USBFS_1:dma_complete_1\
	\USBFS_1:Net_1921\
	\USBFS_1:dma_complete_2\
	\USBFS_1:Net_1920\
	\USBFS_1:dma_complete_3\
	\USBFS_1:Net_1919\
	\USBFS_1:dma_complete_4\
	\USBFS_1:Net_1918\
	\USBFS_1:dma_complete_5\
	\USBFS_1:Net_1917\
	\USBFS_1:dma_complete_6\
	\USBFS_1:Net_1916\
	\USBFS_1:dma_complete_7\
	\USBFS_1:Net_1915\
	\UART:BUART:reset_sr\
	Net_53
	Net_48
	\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_44
	\UART:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\UART:BUART:sRX:MODULE_6:g1:a0:xeq\
	\UART:BUART:sRX:MODULE_6:g1:a0:xlt\
	\UART:BUART:sRX:MODULE_6:g1:a0:xlte\
	\UART:BUART:sRX:MODULE_6:g1:a0:xgt\
	\UART:BUART:sRX:MODULE_6:g1:a0:xgte\
	\UART:BUART:sRX:MODULE_6:lt\
	\UART:BUART:sRX:MODULE_6:eq\
	\UART:BUART:sRX:MODULE_6:gt\
	\UART:BUART:sRX:MODULE_6:gte\
	\UART:BUART:sRX:MODULE_6:lte\
	\ADC:SAR:Net_221\
	\ADC:SAR:Net_383\
	\ADC:bSAR_SEQ:sw_soc\
	\ADC:soc_out\
	\ADC:Net_3905\
	\ADC:Net_3867\
	\ADC:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC:MODULE_1:g1:a0:xneq\
	\ADC:MODULE_1:g1:a0:xlt\
	\ADC:MODULE_1:g1:a0:xlte\
	\ADC:MODULE_1:g1:a0:xgt\
	\ADC:MODULE_1:g1:a0:xgte\
	\ADC:MODULE_1:lt\
	\ADC:MODULE_1:gt\
	\ADC:MODULE_1:gte\
	\ADC:MODULE_1:lte\
	\ADC:MODULE_1:neq\


Deleted 65 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \USBFS_1:tmpOE__Dp_net_0\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing tmpOE__SW_net_0 to \USBFS_1:tmpOE__Dm_net_0\
Aliasing tmpOE__VRX_net_0 to \USBFS_1:tmpOE__Dm_net_0\
Aliasing tmpOE__VRY_net_0 to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \UART:BUART:tx_hd_send_break\ to zero
Aliasing \UART:BUART:HalfDuplexSend\ to zero
Aliasing \UART:BUART:FinalParityType_1\ to zero
Aliasing \UART:BUART:FinalParityType_0\ to zero
Aliasing \UART:BUART:FinalAddrMode_2\ to zero
Aliasing \UART:BUART:FinalAddrMode_1\ to zero
Aliasing \UART:BUART:FinalAddrMode_0\ to zero
Aliasing \UART:BUART:tx_ctrl_mark\ to zero
Aliasing \UART:BUART:tx_status_6\ to zero
Aliasing \UART:BUART:tx_status_5\ to zero
Aliasing \UART:BUART:tx_status_4\ to zero
Aliasing \UART:BUART:rx_count7_bit8_wire\ to zero
Aliasing \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \UART:BUART:sRX:s23Poll:MODIN4_1\ to \UART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART:BUART:sRX:s23Poll:MODIN4_0\ to \UART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to zero
Aliasing \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \UART:BUART:sRX:s23Poll:MODIN5_1\ to \UART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART:BUART:sRX:s23Poll:MODIN5_0\ to \UART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to zero
Aliasing \UART:BUART:rx_status_1\ to zero
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_6\ to zero
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_5\ to zero
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newa_4\ to zero
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_6\ to zero
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_5\ to zero
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_4\ to zero
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_3\ to zero
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_2\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_1\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \UART:BUART:sRX:MODULE_5:g2:a0:newb_0\ to zero
Aliasing \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing tmpOE__Tx_1_net_0 to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \ADC:AMuxHw_2_Decoder_enable\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \ADC:SAR:vp_ctl_0\ to zero
Aliasing \ADC:SAR:vp_ctl_2\ to zero
Aliasing \ADC:SAR:vn_ctl_1\ to zero
Aliasing \ADC:SAR:vn_ctl_3\ to zero
Aliasing \ADC:SAR:vp_ctl_1\ to zero
Aliasing \ADC:SAR:vp_ctl_3\ to zero
Aliasing \ADC:SAR:vn_ctl_0\ to zero
Aliasing \ADC:SAR:vn_ctl_2\ to zero
Aliasing \ADC:SAR:soc\ to zero
Aliasing \ADC:SAR:tmpOE__Bypass_net_0\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \ADC:bSAR_SEQ:status_7\ to zero
Aliasing \ADC:bSAR_SEQ:status_6\ to zero
Aliasing \ADC:bSAR_SEQ:status_5\ to zero
Aliasing \ADC:bSAR_SEQ:status_4\ to zero
Aliasing \ADC:bSAR_SEQ:status_3\ to zero
Aliasing \ADC:bSAR_SEQ:status_2\ to zero
Aliasing \ADC:bSAR_SEQ:status_1\ to zero
Aliasing Net_148 to \ADC:bSAR_SEQ:status_0\
Aliasing \ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \USBFS_1:tmpOE__Dm_net_0\
Aliasing tmpOE__Rx_1_net_0 to \USBFS_1:tmpOE__Dm_net_0\
Aliasing \UART:BUART:reset_reg\\D\ to zero
Aliasing \UART:BUART:rx_break_status\\D\ to zero
Aliasing \ADC:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC:MODIN1_5\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC:MODIN1_4\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC:MODIN1_3\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC:MODIN1_2\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC:MODIN1_1\
Aliasing \ADC:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC:MODIN1_0\
Removing Rhs of wire one[9] = \USBFS_1:tmpOE__Dm_net_0\[3]
Removing Lhs of wire \USBFS_1:tmpOE__Dp_net_0\[12] = one[9]
Removing Lhs of wire tmpOE__SW_net_0[63] = one[9]
Removing Lhs of wire tmpOE__VRX_net_0[73] = one[9]
Removing Lhs of wire tmpOE__VRY_net_0[81] = one[9]
Removing Lhs of wire \UART:Net_61\[90] = \UART:Net_9\[89]
Removing Lhs of wire \UART:BUART:tx_hd_send_break\[94] = zero[4]
Removing Lhs of wire \UART:BUART:HalfDuplexSend\[95] = zero[4]
Removing Lhs of wire \UART:BUART:FinalParityType_1\[96] = zero[4]
Removing Lhs of wire \UART:BUART:FinalParityType_0\[97] = zero[4]
Removing Lhs of wire \UART:BUART:FinalAddrMode_2\[98] = zero[4]
Removing Lhs of wire \UART:BUART:FinalAddrMode_1\[99] = zero[4]
Removing Lhs of wire \UART:BUART:FinalAddrMode_0\[100] = zero[4]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark\[101] = zero[4]
Removing Rhs of wire \UART:BUART:tx_bitclk_enable_pre\[113] = \UART:BUART:tx_bitclk_dp\[149]
Removing Lhs of wire \UART:BUART:tx_counter_tc\[159] = \UART:BUART:tx_counter_dp\[150]
Removing Lhs of wire \UART:BUART:tx_status_6\[160] = zero[4]
Removing Lhs of wire \UART:BUART:tx_status_5\[161] = zero[4]
Removing Lhs of wire \UART:BUART:tx_status_4\[162] = zero[4]
Removing Lhs of wire \UART:BUART:tx_status_1\[164] = \UART:BUART:tx_fifo_empty\[127]
Removing Lhs of wire \UART:BUART:tx_status_3\[166] = \UART:BUART:tx_fifo_notfull\[126]
Removing Lhs of wire \UART:BUART:rx_count7_bit8_wire\[226] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\[234] = \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[245]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\[236] = \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[246]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\[237] = \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[262]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[238] = \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[276]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[239] = \UART:BUART:sRX:s23Poll:MODIN3_1\[240]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN3_1\[240] = \UART:BUART:pollcount_1\[232]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[241] = \UART:BUART:sRX:s23Poll:MODIN3_0\[242]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN3_0\[242] = \UART:BUART:pollcount_0\[235]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[248] = one[9]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[249] = one[9]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[250] = \UART:BUART:pollcount_1\[232]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN4_1\[251] = \UART:BUART:pollcount_1\[232]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[252] = \UART:BUART:pollcount_0\[235]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN4_0\[253] = \UART:BUART:pollcount_0\[235]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[254] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[255] = one[9]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[256] = \UART:BUART:pollcount_1\[232]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[257] = \UART:BUART:pollcount_0\[235]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[258] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[259] = one[9]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[264] = \UART:BUART:pollcount_1\[232]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN5_1\[265] = \UART:BUART:pollcount_1\[232]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[266] = \UART:BUART:pollcount_0\[235]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODIN5_0\[267] = \UART:BUART:pollcount_0\[235]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[268] = one[9]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[269] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[270] = \UART:BUART:pollcount_1\[232]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[271] = \UART:BUART:pollcount_0\[235]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[272] = one[9]
Removing Lhs of wire \UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[273] = zero[4]
Removing Lhs of wire \UART:BUART:rx_status_1\[280] = zero[4]
Removing Rhs of wire \UART:BUART:rx_status_2\[281] = \UART:BUART:rx_parity_error_status\[282]
Removing Rhs of wire \UART:BUART:rx_status_3\[283] = \UART:BUART:rx_stop_bit_error\[284]
Removing Lhs of wire \UART:BUART:sRX:cmp_vv_vv_MODGEN_5\[294] = \UART:BUART:sRX:MODULE_5:g2:a0:lta_0\[343]
Removing Lhs of wire \UART:BUART:sRX:cmp_vv_vv_MODGEN_6\[298] = \UART:BUART:sRX:MODULE_6:g1:a0:xneq\[365]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_6\[299] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_5\[300] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_4\[301] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_3\[302] = \UART:BUART:sRX:MODIN6_6\[303]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_6\[303] = \UART:BUART:rx_count_6\[221]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_2\[304] = \UART:BUART:sRX:MODIN6_5\[305]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_5\[305] = \UART:BUART:rx_count_5\[222]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_1\[306] = \UART:BUART:sRX:MODIN6_4\[307]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_4\[307] = \UART:BUART:rx_count_4\[223]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newa_0\[308] = \UART:BUART:sRX:MODIN6_3\[309]
Removing Lhs of wire \UART:BUART:sRX:MODIN6_3\[309] = \UART:BUART:rx_count_3\[224]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_6\[310] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_5\[311] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_4\[312] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_3\[313] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_2\[314] = one[9]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_1\[315] = one[9]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:newb_0\[316] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_6\[317] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_5\[318] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_4\[319] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_3\[320] = \UART:BUART:rx_count_6\[221]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_2\[321] = \UART:BUART:rx_count_5\[222]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_1\[322] = \UART:BUART:rx_count_4\[223]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:dataa_0\[323] = \UART:BUART:rx_count_3\[224]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_6\[324] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_5\[325] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_4\[326] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_3\[327] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_2\[328] = one[9]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_1\[329] = one[9]
Removing Lhs of wire \UART:BUART:sRX:MODULE_5:g2:a0:datab_0\[330] = zero[4]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:newa_0\[345] = \UART:BUART:rx_postpoll\[180]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:newb_0\[346] = \UART:BUART:rx_parity_bit\[297]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:dataa_0\[347] = \UART:BUART:rx_postpoll\[180]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:datab_0\[348] = \UART:BUART:rx_parity_bit\[297]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[349] = \UART:BUART:rx_postpoll\[180]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[350] = \UART:BUART:rx_parity_bit\[297]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[352] = one[9]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[353] = \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[351]
Removing Lhs of wire \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[354] = \UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[351]
Removing Lhs of wire tmpOE__Tx_1_net_0[376] = one[9]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_enable\[381] = one[9]
Removing Lhs of wire \ADC:cmp_vv_vv_MODGEN_1\[383] = \ADC:MODULE_1:g1:a0:xeq\[723]
Removing Rhs of wire \ADC:clock\[384] = \ADC:Net_3874\[623]
Removing Rhs of wire \ADC:ch_addr_5\[386] = \ADC:bSAR_SEQ:count_5\[590]
Removing Rhs of wire \ADC:ch_addr_4\[388] = \ADC:bSAR_SEQ:count_4\[591]
Removing Rhs of wire \ADC:ch_addr_3\[390] = \ADC:bSAR_SEQ:count_3\[592]
Removing Rhs of wire \ADC:ch_addr_2\[392] = \ADC:bSAR_SEQ:count_2\[593]
Removing Rhs of wire \ADC:ch_addr_1\[394] = \ADC:bSAR_SEQ:count_1\[594]
Removing Rhs of wire \ADC:ch_addr_0\[396] = \ADC:bSAR_SEQ:count_0\[595]
Removing Lhs of wire \ADC:SAR:vp_ctl_0\[528] = zero[4]
Removing Lhs of wire \ADC:SAR:vp_ctl_2\[529] = zero[4]
Removing Lhs of wire \ADC:SAR:vn_ctl_1\[530] = zero[4]
Removing Lhs of wire \ADC:SAR:vn_ctl_3\[531] = zero[4]
Removing Lhs of wire \ADC:SAR:vp_ctl_1\[532] = zero[4]
Removing Lhs of wire \ADC:SAR:vp_ctl_3\[533] = zero[4]
Removing Lhs of wire \ADC:SAR:vn_ctl_0\[534] = zero[4]
Removing Lhs of wire \ADC:SAR:vn_ctl_2\[535] = zero[4]
Removing Lhs of wire \ADC:SAR:Net_188\[536] = \ADC:clock\[384]
Removing Lhs of wire \ADC:SAR:soc\[542] = zero[4]
Removing Lhs of wire \ADC:SAR:tmpOE__Bypass_net_0\[561] = one[9]
Removing Rhs of wire \ADC:bSAR_SEQ:enable\[580] = \ADC:bSAR_SEQ:control_0\[581]
Removing Rhs of wire \ADC:bSAR_SEQ:load_period\[582] = \ADC:bSAR_SEQ:control_1\[583]
Removing Lhs of wire \ADC:bSAR_SEQ:status_7\[596] = zero[4]
Removing Lhs of wire \ADC:bSAR_SEQ:status_6\[597] = zero[4]
Removing Lhs of wire \ADC:bSAR_SEQ:status_5\[598] = zero[4]
Removing Lhs of wire \ADC:bSAR_SEQ:status_4\[599] = zero[4]
Removing Lhs of wire \ADC:bSAR_SEQ:status_3\[600] = zero[4]
Removing Lhs of wire \ADC:bSAR_SEQ:status_2\[601] = zero[4]
Removing Lhs of wire \ADC:bSAR_SEQ:status_1\[602] = zero[4]
Removing Rhs of wire \ADC:bSAR_SEQ:status_0\[603] = \ADC:bSAR_SEQ:nrq_edge_detect_reg\[604]
Removing Rhs of wire Net_148[611] = \ADC:bSAR_SEQ:status_0\[603]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_5\[634] = \ADC:MODIN1_5\[635]
Removing Lhs of wire \ADC:MODIN1_5\[635] = \ADC:ch_addr_5\[386]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_4\[636] = \ADC:MODIN1_4\[637]
Removing Lhs of wire \ADC:MODIN1_4\[637] = \ADC:ch_addr_4\[388]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_3\[638] = \ADC:MODIN1_3\[639]
Removing Lhs of wire \ADC:MODIN1_3\[639] = \ADC:ch_addr_3\[390]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_2\[640] = \ADC:MODIN1_2\[641]
Removing Lhs of wire \ADC:MODIN1_2\[641] = \ADC:ch_addr_2\[392]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_1\[642] = \ADC:MODIN1_1\[643]
Removing Lhs of wire \ADC:MODIN1_1\[643] = \ADC:ch_addr_1\[394]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newa_0\[644] = \ADC:MODIN1_0\[645]
Removing Lhs of wire \ADC:MODIN1_0\[645] = \ADC:ch_addr_0\[396]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_5\[646] = \ADC:MODIN2_5\[647]
Removing Lhs of wire \ADC:MODIN2_5\[647] = \ADC:AMuxHw_2_Decoder_old_id_5\[385]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_4\[648] = \ADC:MODIN2_4\[649]
Removing Lhs of wire \ADC:MODIN2_4\[649] = \ADC:AMuxHw_2_Decoder_old_id_4\[387]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_3\[650] = \ADC:MODIN2_3\[651]
Removing Lhs of wire \ADC:MODIN2_3\[651] = \ADC:AMuxHw_2_Decoder_old_id_3\[389]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_2\[652] = \ADC:MODIN2_2\[653]
Removing Lhs of wire \ADC:MODIN2_2\[653] = \ADC:AMuxHw_2_Decoder_old_id_2\[391]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_1\[654] = \ADC:MODIN2_1\[655]
Removing Lhs of wire \ADC:MODIN2_1\[655] = \ADC:AMuxHw_2_Decoder_old_id_1\[393]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:newb_0\[656] = \ADC:MODIN2_0\[657]
Removing Lhs of wire \ADC:MODIN2_0\[657] = \ADC:AMuxHw_2_Decoder_old_id_0\[395]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_5\[658] = \ADC:ch_addr_5\[386]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_4\[659] = \ADC:ch_addr_4\[388]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_3\[660] = \ADC:ch_addr_3\[390]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_2\[661] = \ADC:ch_addr_2\[392]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_1\[662] = \ADC:ch_addr_1\[394]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:dataa_0\[663] = \ADC:ch_addr_0\[396]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_5\[664] = \ADC:AMuxHw_2_Decoder_old_id_5\[385]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_4\[665] = \ADC:AMuxHw_2_Decoder_old_id_4\[387]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_3\[666] = \ADC:AMuxHw_2_Decoder_old_id_3\[389]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_2\[667] = \ADC:AMuxHw_2_Decoder_old_id_2\[391]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_1\[668] = \ADC:AMuxHw_2_Decoder_old_id_1\[393]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:datab_0\[669] = \ADC:AMuxHw_2_Decoder_old_id_0\[395]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_5\[670] = \ADC:ch_addr_5\[386]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_4\[671] = \ADC:ch_addr_4\[388]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_3\[672] = \ADC:ch_addr_3\[390]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_2\[673] = \ADC:ch_addr_2\[392]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_1\[674] = \ADC:ch_addr_1\[394]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:a_0\[675] = \ADC:ch_addr_0\[396]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_5\[676] = \ADC:AMuxHw_2_Decoder_old_id_5\[385]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_4\[677] = \ADC:AMuxHw_2_Decoder_old_id_4\[387]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_3\[678] = \ADC:AMuxHw_2_Decoder_old_id_3\[389]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_2\[679] = \ADC:AMuxHw_2_Decoder_old_id_2\[391]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_1\[680] = \ADC:AMuxHw_2_Decoder_old_id_1\[393]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:b_0\[681] = \ADC:AMuxHw_2_Decoder_old_id_0\[395]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:aeqb_0\[688] = one[9]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:eq_0\[689] = \ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\[687]
Removing Lhs of wire \ADC:MODULE_1:g1:a0:gx:u0:eqi_0\[695] = \ADC:MODULE_1:g1:a0:gx:u0:eq_5\[694]
Removing Rhs of wire \ADC:MODULE_1:g1:a0:xeq\[723] = \ADC:MODULE_1:g1:a0:gx:u0:aeqb_1\[696]
Removing Lhs of wire tmpOE__Rx_1_net_0[735] = one[9]
Removing Lhs of wire \UART:BUART:reset_reg\\D\[739] = zero[4]
Removing Lhs of wire \UART:BUART:rx_bitclk\\D\[754] = \UART:BUART:rx_bitclk_pre\[215]
Removing Lhs of wire \UART:BUART:rx_parity_error_pre\\D\[763] = \UART:BUART:rx_parity_error_pre\[292]
Removing Lhs of wire \UART:BUART:rx_break_status\\D\[764] = zero[4]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_5\\D\[768] = \ADC:ch_addr_5\[386]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_4\\D\[769] = \ADC:ch_addr_4\[388]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_3\\D\[770] = \ADC:ch_addr_3\[390]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_2\\D\[771] = \ADC:ch_addr_2\[392]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_1\\D\[772] = \ADC:ch_addr_1\[394]
Removing Lhs of wire \ADC:AMuxHw_2_Decoder_old_id_0\\D\[773] = \ADC:ch_addr_0\[396]
Removing Lhs of wire \ADC:bSAR_SEQ:nrq_edge_detect_reg\\D\[838] = \ADC:bSAR_SEQ:nrq_edge_detect\[610]
Removing Lhs of wire \ADC:bSAR_SEQ:nrq_reg\\D\[840] = \ADC:bSAR_SEQ:bus_clk_nrq_reg\[607]

------------------------------------------------------
Aliased 0 equations, 195 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:rx_addressmatch\' (cost = 0):
\UART:BUART:rx_addressmatch\ <= (\UART:BUART:rx_addressmatch2\
	OR \UART:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART:BUART:rx_bitclk_pre\' (cost = 1):
\UART:BUART:rx_bitclk_pre\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART:BUART:rx_bitclk_pre16x\ <= ((not \UART:BUART:rx_count_2\ and \UART:BUART:rx_count_1\ and \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_poll_bit1\' (cost = 1):
\UART:BUART:rx_poll_bit1\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:rx_poll_bit2\' (cost = 1):
\UART:BUART:rx_poll_bit2\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\ and not \UART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART:BUART:pollingrange\' (cost = 4):
\UART:BUART:pollingrange\ <= ((not \UART:BUART:rx_count_2\ and not \UART:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ <= (not \UART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (\UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not \UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_3\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 1):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_2\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART:BUART:sRX:MODULE_5:g2:a0:gta_1\ <= (\UART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 8):
\UART:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= ((not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_4\)
	OR (not \UART:BUART:rx_count_6\ and not \UART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC:ch_addr_4\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_4\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC:ch_addr_1\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_1\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\UART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\UART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not \UART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\' (cost = 2):
\UART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ <= ((not \UART:BUART:pollcount_0\ and \UART:BUART:pollcount_1\)
	OR (not \UART:BUART:pollcount_1\ and \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ADC:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC:MODULE_1:g1:a0:xeq\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\UART:BUART:rx_postpoll\' (cost = 72):
\UART:BUART:rx_postpoll\ <= (\UART:BUART:pollcount_1\
	OR (Net_45 and \UART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not \UART:BUART:pollcount_1\ and not Net_45 and not \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and not \UART:BUART:rx_parity_bit\)
	OR (\UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (Net_45 and \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not \UART:BUART:pollcount_1\ and not Net_45 and not \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and not \UART:BUART:rx_parity_bit\)
	OR (\UART:BUART:pollcount_1\ and \UART:BUART:rx_parity_bit\)
	OR (Net_45 and \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\));

Note:  Virtual signal \ADC:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC:AMuxHw_2_Decoder_is_active\ <= ((not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_0\ and not \ADC:ch_addr_0\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_1\ and not \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_2\ and not \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_3\ and not \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_4\ and not \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (not \ADC:AMuxHw_2_Decoder_old_id_5\ and not \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\)
	OR (\ADC:AMuxHw_2_Decoder_old_id_5\ and \ADC:ch_addr_5\ and \ADC:AMuxHw_2_Decoder_old_id_4\ and \ADC:ch_addr_4\ and \ADC:AMuxHw_2_Decoder_old_id_3\ and \ADC:ch_addr_3\ and \ADC:AMuxHw_2_Decoder_old_id_2\ and \ADC:ch_addr_2\ and \ADC:AMuxHw_2_Decoder_old_id_1\ and \ADC:ch_addr_1\ and \ADC:AMuxHw_2_Decoder_old_id_0\ and \ADC:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 53 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART:BUART:rx_status_0\ to zero
Aliasing \UART:BUART:rx_status_6\ to zero
Aliasing \UART:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART:BUART:rx_addr_match_status\\D\ to zero
Removing Rhs of wire \UART:BUART:rx_bitclk_enable\[179] = \UART:BUART:rx_bitclk\[227]
Removing Lhs of wire \UART:BUART:rx_status_0\[278] = zero[4]
Removing Lhs of wire \UART:BUART:rx_status_6\[287] = zero[4]
Removing Lhs of wire \UART:BUART:tx_ctrl_mark_last\\D\[746] = \UART:BUART:tx_ctrl_mark_last\[170]
Removing Lhs of wire \UART:BUART:rx_markspace_status\\D\[758] = zero[4]
Removing Lhs of wire \UART:BUART:rx_parity_error_status\\D\[759] = zero[4]
Removing Lhs of wire \UART:BUART:rx_addr_match_status\\D\[761] = zero[4]
Removing Lhs of wire \UART:BUART:rx_markspace_pre\\D\[762] = \UART:BUART:rx_markspace_pre\[291]
Removing Lhs of wire \UART:BUART:rx_parity_bit\\D\[767] = \UART:BUART:rx_parity_bit\[297]

------------------------------------------------------
Aliased 0 equations, 9 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \UART:BUART:rx_parity_bit\ and Net_45 and \UART:BUART:pollcount_0\)
	OR (not \UART:BUART:pollcount_1\ and not \UART:BUART:pollcount_0\ and \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:pollcount_1\ and not Net_45 and \UART:BUART:rx_parity_bit\)
	OR (not \UART:BUART:rx_parity_bit\ and \UART:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2.cyprj -dcpsoc3 Mouse_2.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 0s.701ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.4.0.80, Family: PSoC3, Started at: Thursday, 22 February 2024 13:44:26
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2.cyprj -d CY8C5888LTI-LP097 Mouse_2.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.015ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \UART:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART:BUART:rx_break_status\ from registered to combinatorial
Assigning clock ADC_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ADC_IntClock'. Fanout=73, Signal=\ADC:clock\
    Digital Clock 1: Automatic-assigning  clock 'UART_IntClock'. Fanout=1, Signal=\UART:Net_9\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \UART:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_IntClock, EnableOut: \ADC:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 1 pin(s) will be assigned a location by the fitter: \ADC:SAR:Bypass(0)\


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART:BUART:rx_parity_bit\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART:BUART:rx_address_detected\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_address_detected\ (fanout=0)

    Removing \UART:BUART:rx_parity_error_pre\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART:BUART:rx_markspace_pre\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART:BUART:rx_state_1\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:rx_state_1\ (fanout=8)

    Removing \UART:BUART:tx_parity_bit\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART:BUART:tx_mark\, Duplicate of \UART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_mark\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = \USBFS_1:Dm(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_MINUS
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBFS_1:Dm(0)\__PA ,
            analog_term => \USBFS_1:Net_597\ ,
            pad => \USBFS_1:Dm(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \USBFS_1:Dp(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: HI_Z_ANALOG
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_PLUS
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBFS_1:Dp(0)\__PA ,
            analog_term => \USBFS_1:Net_1000\ ,
            pad => \USBFS_1:Dp(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = SW(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SW(0)__PA ,
            annotation => Net_25 ,
            pad => SW(0)_PAD );
        Properties:
        {
        }

    Pin : Name = VRX(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => VRX(0)__PA ,
            analog_term => Net_37 ,
            pad => VRX(0)_PAD ,
            pin_input => \ADC:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = VRY(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => VRY(0)__PA ,
            analog_term => Net_39 ,
            pad => VRY(0)_PAD ,
            pin_input => \ADC:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = Tx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Tx_1(0)__PA ,
            pin_input => Net_49 ,
            pad => Tx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \ADC:SAR:Bypass(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \ADC:SAR:Bypass(0)\__PA ,
            analog_term => \ADC:SAR:Net_210\ ,
            pad => \ADC:SAR:Bypass(0)_PAD\ );

    Pin : Name = Rx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx_1(0)__PA ,
            fb => Net_45 ,
            pad => Rx_1(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC:AMuxHw_2_Decoder_old_id_5\ * !\ADC:ch_addr_5\
            + \ADC:AMuxHw_2_Decoder_old_id_4\ * !\ADC:ch_addr_4\
            + \ADC:AMuxHw_2_Decoder_old_id_3\ * !\ADC:ch_addr_3\
            + \ADC:AMuxHw_2_Decoder_old_id_2\ * !\ADC:ch_addr_2\
            + !\ADC:AMuxHw_2_Decoder_old_id_1\ * \ADC:ch_addr_1\
            + \ADC:AMuxHw_2_Decoder_old_id_1\ * !\ADC:ch_addr_1\
            + !\ADC:AMuxHw_2_Decoder_old_id_0\ * \ADC:ch_addr_0\
            + \ADC:AMuxHw_2_Decoder_old_id_0\ * !\ADC:ch_addr_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=Net_49, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_49 (fanout=1)

    MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART:BUART:pollcount_1\
            + \UART:BUART:pollcount_0\ * Net_45_SYNCOUT
        );
        Output = \UART:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_load_fifo\ * \UART:BUART:rx_fifofull\
        );
        Output = \UART:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_fifonotempty\ * \UART:BUART:rx_state_stop1_reg\
        );
        Output = \UART:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * \ADC:ch_addr_5\
            + !\ADC:AMuxHw_2_Decoder_old_id_4\ * \ADC:ch_addr_4\
            + !\ADC:AMuxHw_2_Decoder_old_id_3\ * \ADC:ch_addr_3\
            + !\ADC:AMuxHw_2_Decoder_old_id_2\ * \ADC:ch_addr_2\
            + \ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_149 * !\ADC:bSAR_SEQ:load_period\
        );
        Output = \ADC:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\UART:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !Net_45_SYNCOUT
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              \UART:BUART:rx_last\ * !Net_45_SYNCOUT
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:rx_count_0\
        );
        Output = \UART:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_1\ * \UART:BUART:pollcount_0\ * 
              Net_45_SYNCOUT
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !Net_45_SYNCOUT
        );
        Output = \UART:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_0\ * Net_45_SYNCOUT
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_0\ * !Net_45_SYNCOUT
        );
        Output = \UART:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\UART:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !Net_45_SYNCOUT
        );
        Output = \UART:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_45_SYNCOUT
        );
        Output = \UART:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_5\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_4\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_3\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_2\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_1\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_148, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_148 (fanout=3)

    MacroCell: Name=\ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_148
            + \ADC:Net_3935\
        );
        Output = \ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:tx_state_1\ ,
            cs_addr_1 => \UART:BUART:tx_state_0\ ,
            cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_0 => \UART:BUART:counter_load_not\ ,
            ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART:Net_9\ ,
            cs_addr_2 => \UART:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART:BUART:rx_state_0\ ,
            cs_addr_0 => \UART:BUART:rx_bitclk_enable\ ,
            route_si => \UART:BUART:rx_postpoll\ ,
            f0_load => \UART:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC:clock\ ,
            status_0 => Net_148 ,
            clk_en => \ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_3 => \UART:BUART:tx_fifo_notfull\ ,
            status_2 => \UART:BUART:tx_status_2\ ,
            status_1 => \UART:BUART:tx_fifo_empty\ ,
            status_0 => \UART:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART:Net_9\ ,
            status_5 => \UART:BUART:rx_status_5\ ,
            status_4 => \UART:BUART:rx_status_4\ ,
            status_3 => \UART:BUART:rx_status_3\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =Rx_1(0)_SYNC
        PORT MAP (
            in => Net_45 ,
            out => Net_45_SYNCOUT ,
            clock => ClockBlock_BUS_CLK );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =\ADC:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC:nrq\ ,
            out => \ADC:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC:clock\ ,
            control_7 => \ADC:bSAR_SEQ:control_7\ ,
            control_6 => \ADC:bSAR_SEQ:control_6\ ,
            control_5 => \ADC:bSAR_SEQ:control_5\ ,
            control_4 => \ADC:bSAR_SEQ:control_4\ ,
            control_3 => \ADC:bSAR_SEQ:control_3\ ,
            control_2 => \ADC:bSAR_SEQ:control_2\ ,
            control_1 => \ADC:bSAR_SEQ:load_period\ ,
            control_0 => \ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\UART:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART:Net_9\ ,
            load => \UART:BUART:rx_counter_load\ ,
            count_6 => \UART:BUART:rx_count_6\ ,
            count_5 => \UART:BUART:rx_count_5\ ,
            count_4 => \UART:BUART:rx_count_4\ ,
            count_3 => \UART:BUART:rx_count_3\ ,
            count_2 => \UART:BUART:rx_count_2\ ,
            count_1 => \UART:BUART:rx_count_1\ ,
            count_0 => \UART:BUART:rx_count_0\ ,
            tc => \UART:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC:clock\ ,
            load => \ADC:bSAR_SEQ:load_period\ ,
            enable => \ADC:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC:bSAR_SEQ:count_6\ ,
            count_5 => \ADC:ch_addr_5\ ,
            count_4 => \ADC:ch_addr_4\ ,
            count_3 => \ADC:ch_addr_3\ ,
            count_2 => \ADC:ch_addr_2\ ,
            count_1 => \ADC:ch_addr_1\ ,
            count_0 => \ADC:ch_addr_0\ ,
            tc => \ADC:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000001"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC:TempBuf\
        PORT MAP (
            dmareq => \ADC:Net_3830\ ,
            termin => zero ,
            termout => \ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC:FinalBuf\
        PORT MAP (
            dmareq => \ADC:Net_3698\ ,
            termin => zero ,
            termout => \ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\USBFS_1:dp_int\
        PORT MAP (
            interrupt => \USBFS_1:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBFS_1:ord_int\
        PORT MAP (
            interrupt => \USBFS_1:Net_95\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBFS_1:ep_1\
        PORT MAP (
            interrupt => \USBFS_1:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBFS_1:ep_0\
        PORT MAP (
            interrupt => \USBFS_1:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBFS_1:bus_reset\
        PORT MAP (
            interrupt => \USBFS_1:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBFS_1:arb_int\
        PORT MAP (
            interrupt => \USBFS_1:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBFS_1:sof_int\
        PORT MAP (
            interrupt => Net_34 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC:IRQ\
        PORT MAP (
            interrupt => Net_148 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    2 :    6 :    8 : 25.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    8 :   24 :   32 : 25.00 %
IO                            :   11 :   37 :   48 : 22.92 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    1 :    0 :    1 : 100.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  100 :   92 :  192 : 52.08 %
  Unique P-terms              :  132 :  252 :  384 : 34.38 %
  Total P-terms               :  141 :      :      :        
  Datapath Cells              :    3 :   21 :   24 : 12.50 %
  Status Cells                :    6 :   18 :   24 : 25.00 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x2)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    3 :   21 :   24 : 12.50 %
    Control Registers         :    1 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.188ms
Tech Mapping phase: Elapsed time ==> 0s.235ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_78" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_97" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_127" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_106" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_107" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_130" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_110" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_111" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_146" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_114" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_115" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_147" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_56" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_57" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_117" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_60" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_61" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_118" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_64" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_65" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_119" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_68" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_69" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_120" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_72" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_73" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_121" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_77" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_79" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_122" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_82" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_83" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_123" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_86" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_87" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_124" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_90" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_91" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_125" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_94" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_95" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_126" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_99" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_101" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_128" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_104" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_129" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_131" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_132" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_133" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_134" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_135" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_136" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_137" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_138" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_139" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_140" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_141" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_142" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_143" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_144" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_145" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : SW(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : VRX(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : VRY(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBFS_1:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBFS_1:Dp(0)\ (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC:SAR:ADC_SAR\ (SAR-ExtVref)
IO_2@[IOP=(0)][IoId=(2)] : \ADC:SAR:Bypass(0)\ (SAR-ExtVref)
Vref[13]@[FFB(Vref,13)] : \ADC:SAR:vRef_Vdda_1\
USB[0]@[FFB(USB,0)] : \USBFS_1:USB\
Analog Placement Results:
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : SW(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : VRX(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : VRY(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBFS_1:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBFS_1:Dp(0)\ (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC:SAR:ADC_SAR\ (SAR-ExtVref)
IO_2@[IOP=(0)][IoId=(2)] : \ADC:SAR:Bypass(0)\ (SAR-ExtVref)
Vref[13]@[FFB(Vref,13)] : \ADC:SAR:vRef_Vdda_1\
USB[0]@[FFB(USB,0)] : \USBFS_1:USB\

Analog Placement phase: Elapsed time ==> 0s.015ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_37 {
    p3_0
  }
  Net: Net_39 {
    p3_1
  }
  Net: Net_78 {
  }
  Net: Net_97 {
  }
  Net: Net_127 {
  }
  Net: Net_106 {
  }
  Net: Net_107 {
  }
  Net: Net_130 {
  }
  Net: Net_110 {
  }
  Net: Net_111 {
  }
  Net: Net_146 {
  }
  Net: Net_114 {
  }
  Net: Net_115 {
  }
  Net: Net_147 {
  }
  Net: Net_56 {
  }
  Net: Net_57 {
  }
  Net: Net_117 {
  }
  Net: Net_60 {
  }
  Net: Net_61 {
  }
  Net: Net_118 {
  }
  Net: Net_64 {
  }
  Net: Net_65 {
  }
  Net: Net_119 {
  }
  Net: Net_68 {
  }
  Net: Net_69 {
  }
  Net: Net_120 {
  }
  Net: Net_72 {
  }
  Net: Net_73 {
  }
  Net: Net_121 {
  }
  Net: Net_77 {
  }
  Net: Net_79 {
  }
  Net: Net_122 {
  }
  Net: Net_82 {
  }
  Net: Net_83 {
  }
  Net: Net_123 {
  }
  Net: Net_86 {
  }
  Net: Net_87 {
  }
  Net: Net_124 {
  }
  Net: Net_90 {
  }
  Net: Net_91 {
  }
  Net: Net_125 {
  }
  Net: Net_94 {
  }
  Net: Net_95 {
  }
  Net: Net_126 {
  }
  Net: Net_99 {
  }
  Net: Net_101 {
  }
  Net: Net_128 {
  }
  Net: Net_104 {
  }
  Net: Net_129 {
  }
  Net: Net_131 {
  }
  Net: Net_132 {
  }
  Net: Net_133 {
  }
  Net: Net_134 {
  }
  Net: Net_135 {
  }
  Net: Net_136 {
  }
  Net: Net_137 {
  }
  Net: Net_138 {
  }
  Net: Net_139 {
  }
  Net: Net_140 {
  }
  Net: Net_141 {
  }
  Net: Net_142 {
  }
  Net: Net_143 {
  }
  Net: Net_144 {
  }
  Net: Net_145 {
  }
  Net: \ADC:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC:SAR:Net_210\ {
    p0_2
    p0_2_exvref
  }
  Net: \ADC:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref
  }
  Net: AmuxNet::\ADC:AMuxHw_2\ {
    sar_1_vplus
    agr4_x_sar_1_vplus
    agr4
    agr4_x_p3_0
    agr5_x_sar_1_vplus
    agr5
    agr5_x_p3_1
    p3_0
    p3_1
  }
}
Map of item to net {
  sar_1_vrefhi                                     -> \ADC:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC:SAR:Net_126\
  sar_1_vminus                                     -> \ADC:SAR:Net_126\
  p0_2                                             -> \ADC:SAR:Net_210\
  p0_2_exvref                                      -> \ADC:SAR:Net_210\
  common_sar_vref_vdda/2                           -> \ADC:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \ADC:SAR:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \ADC:SAR:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \ADC:SAR:Net_235\
  sar_1_vref                                       -> \ADC:SAR:Net_235\
  sar_1_vplus                                      -> \ADC:Net_2803\
  p3_0                                             -> Net_37
  p3_1                                             -> Net_39
  agr4_x_sar_1_vplus                               -> AmuxNet::\ADC:AMuxHw_2\
  agr4                                             -> AmuxNet::\ADC:AMuxHw_2\
  agr4_x_p3_0                                      -> AmuxNet::\ADC:AMuxHw_2\
  agr5_x_sar_1_vplus                               -> AmuxNet::\ADC:AMuxHw_2\
  agr5                                             -> AmuxNet::\ADC:AMuxHw_2\
  agr5_x_p3_1                                      -> AmuxNet::\ADC:AMuxHw_2\
}
Mux Info {
  Mux: \ADC:AMuxHw_2\ {
     Mouth: \ADC:Net_2803\
     Guts:  AmuxNet::\ADC:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_37
      Outer: agr4_x_p3_0
      Inner: agr4_x_sar_1_vplus
      Path {
        p3_0
        agr4_x_p3_0
        agr4
        agr4_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_39
      Outer: agr5_x_p3_1
      Inner: agr5_x_sar_1_vplus
      Path {
        p3_1
        agr5_x_p3_1
        agr5
        agr5_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_78
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_97
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_127
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_106
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_107
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_130
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_110
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_111
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_146
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_114
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_115
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_147
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_56
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_57
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_117
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_60
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_61
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_118
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_64
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_65
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_119
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_68
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_69
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_120
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_72
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_73
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_121
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_77
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_79
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_122
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_82
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_83
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_123
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_86
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_87
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_124
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_90
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_91
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_125
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_94
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_95
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_126
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_99
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_101
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_128
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_104
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_129
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_131
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_132
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_133
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_134
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_135
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_136
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_137
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_138
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_139
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_140
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_141
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_142
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_143
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_144
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_145
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.250ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 2.8 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   32 :   16 :   48 :  66.67%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.97
                   Pterms :            4.28
               Macrocells :            3.13
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.062ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         16 :       9.81 :       6.25
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] is empty.
UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=2, #inputs=11, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,1)][LB=1] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_0 => \UART:BUART:counter_load_not\ ,
        ce0_reg => \UART:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=12, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
        );
        Output = \UART:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,3)] is empty.
UDB [UDB=(0,4)] is empty.
UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] is empty.
UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=3, #inputs=9, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * !\UART:BUART:tx_fifo_empty\
            + !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_fifo_empty\ * !\UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_fifo_empty\ * 
              \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:rx_count_0\
        );
        Output = \UART:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=2, #inputs=11, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_1\ * \UART:BUART:pollcount_0\ * 
              Net_45_SYNCOUT
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !\UART:BUART:pollcount_0\
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_1\ * !Net_45_SYNCOUT
        );
        Output = \UART:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=3, #inputs=11, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              !\UART:BUART:pollcount_0\ * Net_45_SYNCOUT
            + !\UART:BUART:rx_count_2\ * !\UART:BUART:rx_count_1\ * 
              \UART:BUART:pollcount_0\ * !Net_45_SYNCOUT
        );
        Output = \UART:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              \UART:BUART:tx_bitclk_enable_pre\ * \UART:BUART:tx_state_2\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_0\ * !\UART:BUART:tx_state_2\ * 
              \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=Net_49, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:txn\
        );
        Output = Net_49 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=2, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:txn\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART:BUART:txn\ * \UART:BUART:tx_state_1\ * 
              !\UART:BUART:tx_bitclk\
            + \UART:BUART:txn\ * \UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\
            + !\UART:BUART:tx_state_1\ * \UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_state_2\ * !\UART:BUART:tx_bitclk\
            + \UART:BUART:tx_state_1\ * !\UART:BUART:tx_state_0\ * 
              !\UART:BUART:tx_shift_out\ * !\UART:BUART:tx_state_2\ * 
              !\UART:BUART:tx_counter_dp\ * \UART:BUART:tx_bitclk\
        );
        Output = \UART:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART:BUART:pollcount_1\
            + \UART:BUART:pollcount_0\ * Net_45_SYNCOUT
        );
        Output = \UART:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,3)] is empty.
UDB [UDB=(1,4)] is empty.
UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=11, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC:clock\ ,
        status_0 => Net_148 ,
        clk_en => \ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=3, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              \UART:BUART:rx_last\ * !Net_45_SYNCOUT
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !Net_45_SYNCOUT
        );
        Output = \UART:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,1)][LB=1] #macrocells=3, #inputs=11, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !\UART:BUART:pollcount_0\
            + !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * !\UART:BUART:rx_state_3\ * 
              \UART:BUART:rx_state_2\ * !\UART:BUART:pollcount_1\ * 
              !Net_45_SYNCOUT
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_bitclk_enable\ * \UART:BUART:rx_state_3\ * 
              !\UART:BUART:rx_state_2\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_5\
            + !\UART:BUART:tx_ctrl_mark_last\ * \UART:BUART:rx_state_0\ * 
              !\UART:BUART:rx_state_3\ * !\UART:BUART:rx_state_2\ * 
              !\UART:BUART:rx_count_6\ * !\UART:BUART:rx_count_4\
        );
        Output = \UART:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART:BUART:tx_ctrl_mark_last\ * !\UART:BUART:rx_state_0\ * 
              \UART:BUART:rx_state_3\ * \UART:BUART:rx_state_2\
        );
        Output = \UART:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

count7cell: Name =\UART:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART:Net_9\ ,
        load => \UART:BUART:rx_counter_load\ ,
        count_6 => \UART:BUART:rx_count_6\ ,
        count_5 => \UART:BUART:rx_count_5\ ,
        count_4 => \UART:BUART:rx_count_4\ ,
        count_3 => \UART:BUART:rx_count_3\ ,
        count_2 => \UART:BUART:rx_count_2\ ,
        count_1 => \UART:BUART:rx_count_1\ ,
        count_0 => \UART:BUART:rx_count_0\ ,
        tc => \UART:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=3, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_148
            + \ADC:Net_3935\
        );
        Output = \ADC:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_load_fifo\ * \UART:BUART:rx_fifofull\
        );
        Output = \UART:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART:BUART:rx_fifonotempty\ * \UART:BUART:rx_state_stop1_reg\
        );
        Output = \UART:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART:BUART:rx_state_0\ ,
        cs_addr_0 => \UART:BUART:rx_bitclk_enable\ ,
        route_si => \UART:BUART:rx_postpoll\ ,
        f0_load => \UART:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_5 => \UART:BUART:rx_status_5\ ,
        status_4 => \UART:BUART:rx_status_4\ ,
        status_3 => \UART:BUART:rx_status_3\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=3, #inputs=3, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_4\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_3\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=Net_148, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\ * !\ADC:bSAR_SEQ:nrq_reg\
        );
        Output = Net_148 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART:Net_9\ ,
        cs_addr_2 => \UART:BUART:tx_state_1\ ,
        cs_addr_1 => \UART:BUART:tx_state_0\ ,
        cs_addr_0 => \UART:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\UART:BUART:rx_last\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_45_SYNCOUT
        );
        Output = \UART:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART:BUART:tx_fifo_notfull\
        );
        Output = \UART:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\UART:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART:Net_9\ ,
        status_3 => \UART:BUART:tx_fifo_notfull\ ,
        status_2 => \UART:BUART:tx_status_2\ ,
        status_1 => \UART:BUART:tx_fifo_empty\ ,
        status_0 => \UART:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =Rx_1(0)_SYNC
    PORT MAP (
        in => Net_45 ,
        out => Net_45_SYNCOUT ,
        clock => ClockBlock_BUS_CLK );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =\ADC:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC:nrq\ ,
        out => \ADC:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * \ADC:ch_addr_5\
            + !\ADC:AMuxHw_2_Decoder_old_id_4\ * \ADC:ch_addr_4\
            + !\ADC:AMuxHw_2_Decoder_old_id_3\ * \ADC:ch_addr_3\
            + !\ADC:AMuxHw_2_Decoder_old_id_2\ * \ADC:ch_addr_2\
            + \ADC:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_1\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_2\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:ch_addr_5\
        );
        Output = \ADC:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC:AMuxHw_2_Decoder_old_id_5\ * !\ADC:ch_addr_5\
            + \ADC:AMuxHw_2_Decoder_old_id_4\ * !\ADC:ch_addr_4\
            + \ADC:AMuxHw_2_Decoder_old_id_3\ * !\ADC:ch_addr_3\
            + \ADC:AMuxHw_2_Decoder_old_id_2\ * !\ADC:ch_addr_2\
            + !\ADC:AMuxHw_2_Decoder_old_id_1\ * \ADC:ch_addr_1\
            + \ADC:AMuxHw_2_Decoder_old_id_1\ * !\ADC:ch_addr_1\
            + !\ADC:AMuxHw_2_Decoder_old_id_0\ * \ADC:ch_addr_0\
            + \ADC:AMuxHw_2_Decoder_old_id_0\ * !\ADC:ch_addr_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\ADC:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC:clock\ ,
        control_7 => \ADC:bSAR_SEQ:control_7\ ,
        control_6 => \ADC:bSAR_SEQ:control_6\ ,
        control_5 => \ADC:bSAR_SEQ:control_5\ ,
        control_4 => \ADC:bSAR_SEQ:control_4\ ,
        control_3 => \ADC:bSAR_SEQ:control_3\ ,
        control_2 => \ADC:bSAR_SEQ:control_2\ ,
        control_1 => \ADC:bSAR_SEQ:load_period\ ,
        control_0 => \ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC:clock\ ,
        load => \ADC:bSAR_SEQ:load_period\ ,
        enable => \ADC:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC:bSAR_SEQ:count_6\ ,
        count_5 => \ADC:ch_addr_5\ ,
        count_4 => \ADC:ch_addr_4\ ,
        count_3 => \ADC:ch_addr_3\ ,
        count_2 => \ADC:ch_addr_2\ ,
        count_1 => \ADC:ch_addr_1\ ,
        count_0 => \ADC:ch_addr_0\ ,
        tc => \ADC:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000001"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC:bSAR_SEQ:enable\)

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              \ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(3,5)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_149 * !\ADC:bSAR_SEQ:load_period\
        );
        Output = \ADC:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,5)][LB=1] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC:AMuxHw_2_Decoder_is_active\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC:IRQ\
        PORT MAP (
            interrupt => Net_148 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\USBFS_1:ep_1\
        PORT MAP (
            interrupt => \USBFS_1:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(12)] 
    interrupt: Name =\USBFS_1:dp_int\
        PORT MAP (
            interrupt => \USBFS_1:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(21)] 
    interrupt: Name =\USBFS_1:sof_int\
        PORT MAP (
            interrupt => Net_34 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(22)] 
    interrupt: Name =\USBFS_1:arb_int\
        PORT MAP (
            interrupt => \USBFS_1:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(23)] 
    interrupt: Name =\USBFS_1:bus_reset\
        PORT MAP (
            interrupt => \USBFS_1:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(24)] 
    interrupt: Name =\USBFS_1:ep_0\
        PORT MAP (
            interrupt => \USBFS_1:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(25)] 
    interrupt: Name =\USBFS_1:ord_int\
        PORT MAP (
            interrupt => \USBFS_1:Net_95\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC:FinalBuf\
        PORT MAP (
            dmareq => \ADC:Net_3698\ ,
            termin => zero ,
            termout => \ADC:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC:TempBuf\
        PORT MAP (
            dmareq => \ADC:Net_3830\ ,
            termin => zero ,
            termout => \ADC:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=2]: 
Pin : Name = \ADC:SAR:Bypass(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \ADC:SAR:Bypass(0)\__PA ,
        analog_term => \ADC:SAR:Net_210\ ,
        pad => \ADC:SAR:Bypass(0)_PAD\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
Port 2 contains the following IO cells:
Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = VRX(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => VRX(0)__PA ,
        analog_term => Net_37 ,
        pad => VRX(0)_PAD ,
        pin_input => \ADC:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = VRY(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => VRY(0)__PA ,
        analog_term => Net_39 ,
        pad => VRY(0)_PAD ,
        pin_input => \ADC:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = SW(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SW(0)__PA ,
        annotation => Net_25 ,
        pad => SW(0)_PAD );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=6]: 
Pin : Name = Rx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx_1(0)__PA ,
        fb => Net_45 ,
        pad => Rx_1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Tx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Tx_1(0)__PA ,
        pin_input => Net_49 ,
        pad => Tx_1(0)_PAD );
    Properties:
    {
    }

Port 15 generates interrupt for logical port:
    logicalport: Name =\USBFS_1:Dp\
        PORT MAP (
            in_clock_en => one ,
            in_reset => zero ,
            out_clock_en => one ,
            out_reset => zero ,
            interrupt => \USBFS_1:Net_1010\ ,
            in_clock => ClockBlock_BUS_CLK );
        Properties:
        {
            drive_mode = "000"
            ibuf_enabled = "0"
            id = "7385a6d8-5ecd-4df9-9245-7245542ab636/618a72fc-5ddd-4df5-958f-a3d55102db42"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "1"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=6]: 
Pin : Name = \USBFS_1:Dp(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: HI_Z_ANALOG
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_PLUS
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBFS_1:Dp(0)\__PA ,
        analog_term => \USBFS_1:Net_1000\ ,
        pad => \USBFS_1:Dp(0)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = \USBFS_1:Dm(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_MINUS
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBFS_1:Dm(0)\__PA ,
        analog_term => \USBFS_1:Net_597\ ,
        pad => \USBFS_1:Dm(0)_PAD\ );
    Properties:
    {
    }

ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL 32kHz ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \ADC:clock\ ,
            dclk_0 => \ADC:clock_local\ ,
            dclk_glb_1 => \UART:Net_9\ ,
            dclk_1 => \UART:Net_9_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: 
    USB Block @ F(USB,0): 
    usbcell: Name =\USBFS_1:USB\
        PORT MAP (
            dp => \USBFS_1:Net_1000\ ,
            dm => \USBFS_1:Net_597\ ,
            sof_int => Net_34 ,
            arb_int => \USBFS_1:Net_1889\ ,
            usb_int => \USBFS_1:Net_1876\ ,
            ept_int_8 => \USBFS_1:ep_int_8\ ,
            ept_int_7 => \USBFS_1:ep_int_7\ ,
            ept_int_6 => \USBFS_1:ep_int_6\ ,
            ept_int_5 => \USBFS_1:ep_int_5\ ,
            ept_int_4 => \USBFS_1:ep_int_4\ ,
            ept_int_3 => \USBFS_1:ep_int_3\ ,
            ept_int_2 => \USBFS_1:ep_int_2\ ,
            ept_int_1 => \USBFS_1:ep_int_1\ ,
            ept_int_0 => \USBFS_1:ep_int_0\ ,
            ord_int => \USBFS_1:Net_95\ ,
            dma_req_7 => \USBFS_1:dma_request_7\ ,
            dma_req_6 => \USBFS_1:dma_request_6\ ,
            dma_req_5 => \USBFS_1:dma_request_5\ ,
            dma_req_4 => \USBFS_1:dma_request_4\ ,
            dma_req_3 => \USBFS_1:dma_request_3\ ,
            dma_req_2 => \USBFS_1:dma_request_2\ ,
            dma_req_1 => \USBFS_1:dma_request_1\ ,
            dma_req_0 => \USBFS_1:dma_request_0\ ,
            dma_termin => \USBFS_1:dma_terminate\ );
        Properties:
        {
            cy_registers = ""
        }
VIDAC group 0: empty
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC:Net_2803\ ,
            vminus => \ADC:SAR:Net_126\ ,
            ext_pin => \ADC:SAR:Net_210\ ,
            vrefhi_out => \ADC:SAR:Net_126\ ,
            vref => \ADC:SAR:Net_235\ ,
            clk_udb => \ADC:clock_local\ ,
            irq => \ADC:SAR:Net_252\ ,
            next => Net_149 ,
            data_out_udb_11 => \ADC:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC:SAR:Net_207_0\ ,
            eof_udb => \ADC:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_145 ,
            muxin_62 => Net_144 ,
            muxin_61 => Net_143 ,
            muxin_60 => Net_142 ,
            muxin_59 => Net_141 ,
            muxin_58 => Net_140 ,
            muxin_57 => Net_139 ,
            muxin_56 => Net_138 ,
            muxin_55 => Net_137 ,
            muxin_54 => Net_136 ,
            muxin_53 => Net_135 ,
            muxin_52 => Net_134 ,
            muxin_51 => Net_133 ,
            muxin_50 => Net_132 ,
            muxin_49 => Net_131 ,
            muxin_48 => Net_129 ,
            muxin_47 => Net_104 ,
            muxin_46 => Net_128 ,
            muxin_45 => Net_101 ,
            muxin_44 => Net_99 ,
            muxin_43 => Net_126 ,
            muxin_42 => Net_95 ,
            muxin_41 => Net_94 ,
            muxin_40 => Net_125 ,
            muxin_39 => Net_91 ,
            muxin_38 => Net_90 ,
            muxin_37 => Net_124 ,
            muxin_36 => Net_87 ,
            muxin_35 => Net_86 ,
            muxin_34 => Net_123 ,
            muxin_33 => Net_83 ,
            muxin_32 => Net_82 ,
            muxin_31 => Net_122 ,
            muxin_30 => Net_79 ,
            muxin_29 => Net_77 ,
            muxin_28 => Net_121 ,
            muxin_27 => Net_73 ,
            muxin_26 => Net_72 ,
            muxin_25 => Net_120 ,
            muxin_24 => Net_69 ,
            muxin_23 => Net_68 ,
            muxin_22 => Net_119 ,
            muxin_21 => Net_65 ,
            muxin_20 => Net_64 ,
            muxin_19 => Net_118 ,
            muxin_18 => Net_61 ,
            muxin_17 => Net_60 ,
            muxin_16 => Net_117 ,
            muxin_15 => Net_57 ,
            muxin_14 => Net_56 ,
            muxin_13 => Net_147 ,
            muxin_12 => Net_115 ,
            muxin_11 => Net_114 ,
            muxin_10 => Net_146 ,
            muxin_9 => Net_111 ,
            muxin_8 => Net_110 ,
            muxin_7 => Net_130 ,
            muxin_6 => Net_107 ,
            muxin_5 => Net_106 ,
            muxin_4 => Net_127 ,
            muxin_3 => Net_97 ,
            muxin_2 => Net_78 ,
            muxin_1 => Net_39 ,
            muxin_0 => Net_37 ,
            hw_ctrl_en_63 => \ADC:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \ADC:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \ADC:AMuxHw_2_Decoder_one_hot_2\ ,
            vout => \ADC:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                     | 
Port | Pin | Fixed |      Type |       Drive Mode |                Name | Connections
-----+-----+-------+-----------+------------------+---------------------+-----------------------------------------------------
   0 |   2 |       |      NONE |      HI_Z_ANALOG | \ADC:SAR:Bypass(0)\ | Analog(\ADC:SAR:Net_210\)
-----+-----+-------+-----------+------------------+---------------------+-----------------------------------------------------
   3 |   0 |     * |      NONE |      HI_Z_ANALOG |              VRX(0) | In(\ADC:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_37)
     |   1 |     * |      NONE |      HI_Z_ANALOG |              VRY(0) | In(\ADC:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_39)
     |   2 |     * |      NONE |      RES_PULL_UP |               SW(0) | 
-----+-----+-------+-----------+------------------+---------------------+-----------------------------------------------------
  12 |   6 |     * |      NONE |     HI_Z_DIGITAL |             Rx_1(0) | FB(Net_45)
     |   7 |     * |      NONE |         CMOS_OUT |             Tx_1(0) | In(Net_49)
-----+-----+-------+-----------+------------------+---------------------+-----------------------------------------------------
  15 |   6 |     * |   FALLING |      HI_Z_ANALOG |     \USBFS_1:Dp(0)\ | Analog(\USBFS_1:Net_1000\)
     |   7 |     * |      NONE |      HI_Z_ANALOG |     \USBFS_1:Dm(0)\ | Analog(\USBFS_1:Net_597\)
------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.078ms
Digital Placement phase: Elapsed time ==> 3s.153ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "Mouse_2_r.vh2" --pcf-path "Mouse_2.pco" --des-name "Mouse_2" --dsf-path "Mouse_2.dsf" --sdc-path "Mouse_2.sdc" --lib-path "Mouse_2_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 3s.752ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.125ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.031ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Warning: sta.M0021: Mouse_2_timing.html: Warning-1350: Asynchronous path(s) exist from "ClockBlock/clk_bus_glb" to "ClockBlock/dclk_glb_0". See the timing report for details. (File=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2_timing.html)
Warning: sta.M0021: Mouse_2_timing.html: Warning-1350: Asynchronous path(s) exist from "ClockBlock/clk_bus_glb" to "ClockBlock/dclk_glb_1". See the timing report for details. (File=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2_timing.html)
Warning: sta.M0021: Mouse_2_timing.html: Warning-1350: Asynchronous path(s) exist from "ClockBlock/dclk_glb_0" to "ClockBlock/clk_bus_glb". See the timing report for details. (File=C:\Users\oars0\Documents\GitHub\Interfacing_Lab\Lab_2-usb-i2c-mouse-reyessanchezo\PSoC_Creator\Mouse_2\Mouse_2\Mouse_2.cydsn\Mouse_2_timing.html)
Timing report is in Mouse_2_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.328ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.188ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 8s.144ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 8s.144ms
API generation phase: Elapsed time ==> 1s.651ms
Dependency generation phase: Elapsed time ==> 0s.015ms
Cleanup phase: Elapsed time ==> 0s.000ms
