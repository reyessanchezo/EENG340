ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_Stepper.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_Stepper_initVar
  20              		.bss
  21              		.type	PWM_Stepper_initVar, %object
  22              		.size	PWM_Stepper_initVar, 1
  23              	PWM_Stepper_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_Stepper_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_Stepper_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM_Stepper_Start, %function
  31              	PWM_Stepper_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM_Stepper.c"
   1:Generated_Source\PSoC5/PWM_Stepper.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_Stepper.c **** * File Name: PWM_Stepper.c
   3:Generated_Source\PSoC5/PWM_Stepper.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_Stepper.c **** *
   5:Generated_Source\PSoC5/PWM_Stepper.c **** * Description:
   6:Generated_Source\PSoC5/PWM_Stepper.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_Stepper.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_Stepper.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_Stepper.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_Stepper.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_Stepper.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_Stepper.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_Stepper.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_Stepper.c **** *
  15:Generated_Source\PSoC5/PWM_Stepper.c **** * Note:
  16:Generated_Source\PSoC5/PWM_Stepper.c **** *
  17:Generated_Source\PSoC5/PWM_Stepper.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_Stepper.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_Stepper.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_Stepper.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_Stepper.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_Stepper.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_Stepper.c **** 
  24:Generated_Source\PSoC5/PWM_Stepper.c **** #include "PWM_Stepper.h"
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 2


  25:Generated_Source\PSoC5/PWM_Stepper.c **** 
  26:Generated_Source\PSoC5/PWM_Stepper.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_Stepper.c **** #ifdef PWM_Stepper_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_Stepper.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_Stepper.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* PWM_Stepper_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_Stepper.c **** 
  32:Generated_Source\PSoC5/PWM_Stepper.c **** uint8 PWM_Stepper_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_Stepper.c **** 
  34:Generated_Source\PSoC5/PWM_Stepper.c **** 
  35:Generated_Source\PSoC5/PWM_Stepper.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_Stepper.c **** * Function Name: PWM_Stepper_Start
  37:Generated_Source\PSoC5/PWM_Stepper.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_Stepper.c **** *
  39:Generated_Source\PSoC5/PWM_Stepper.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_Stepper.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_Stepper.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_Stepper.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_Stepper.c **** *
  44:Generated_Source\PSoC5/PWM_Stepper.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
  46:Generated_Source\PSoC5/PWM_Stepper.c **** *
  47:Generated_Source\PSoC5/PWM_Stepper.c **** * Return:
  48:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
  49:Generated_Source\PSoC5/PWM_Stepper.c **** *
  50:Generated_Source\PSoC5/PWM_Stepper.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_Stepper.c **** *  PWM_Stepper_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_Stepper.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_Stepper.c **** *
  54:Generated_Source\PSoC5/PWM_Stepper.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_Stepper.c **** void PWM_Stepper_Start(void) 
  56:Generated_Source\PSoC5/PWM_Stepper.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_Stepper.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_Stepper.c ****     if(PWM_Stepper_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_Stepper.c ****     {
  60:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_Stepper_Init
  61:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM_Stepper.c ****     }
  63:Generated_Source\PSoC5/PWM_Stepper.c ****     PWM_Stepper_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_Stepper_Enable
  64:Generated_Source\PSoC5/PWM_Stepper.c **** 
  65:Generated_Source\PSoC5/PWM_Stepper.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM_Stepper_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM_Stepper_Start, .-PWM_Stepper_Start
  68              		.section	.text.PWM_Stepper_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM_Stepper_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM_Stepper_Init, %function
  74              	PWM_Stepper_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM_Stepper.c **** 
  67:Generated_Source\PSoC5/PWM_Stepper.c **** 
  68:Generated_Source\PSoC5/PWM_Stepper.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_Stepper.c **** * Function Name: PWM_Stepper_Init
  70:Generated_Source\PSoC5/PWM_Stepper.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_Stepper.c **** *
  72:Generated_Source\PSoC5/PWM_Stepper.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_Stepper.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_Stepper.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_Stepper.c **** *  PWM_Stepper_Start().
  76:Generated_Source\PSoC5/PWM_Stepper.c **** *
  77:Generated_Source\PSoC5/PWM_Stepper.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
  79:Generated_Source\PSoC5/PWM_Stepper.c **** *
  80:Generated_Source\PSoC5/PWM_Stepper.c **** * Return:
  81:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
  82:Generated_Source\PSoC5/PWM_Stepper.c **** *
  83:Generated_Source\PSoC5/PWM_Stepper.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_Stepper.c **** void PWM_Stepper_Init(void) 
  85:Generated_Source\PSoC5/PWM_Stepper.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UsingFixedFunction || PWM_Stepper_UseControl)
  87:Generated_Source\PSoC5/PWM_Stepper.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UsingFixedFunction || PWM_Stepper_UseControl) */
  89:Generated_Source\PSoC5/PWM_Stepper.c **** 
  90:Generated_Source\PSoC5/PWM_Stepper.c ****     #if(!PWM_Stepper_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(PWM_Stepper_UseStatus)
  92:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_Stepper.c ****             uint8 PWM_Stepper_interruptState;
  94:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_UseStatus) */
  95:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (!PWM_Stepper_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_Stepper.c **** 
  97:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_Stepper.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_CONTROL |= PWM_Stepper_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_Stepper.c ****         #if (PWM_Stepper_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_CONTROL |= PWM_Stepper_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_Stepper.c **** 
 104:Generated_Source\PSoC5/PWM_Stepper.c ****         ctrl = PWM_Stepper_CONTROL3 & ((uint8 )(~PWM_Stepper_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_CONTROL3 = ctrl | PWM_Stepper_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_Stepper.c **** 
 107:Generated_Source\PSoC5/PWM_Stepper.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_RT1 &= ((uint8)(~PWM_Stepper_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_RT1 |= PWM_Stepper_SYNC;
 110:Generated_Source\PSoC5/PWM_Stepper.c **** 
 111:Generated_Source\PSoC5/PWM_Stepper.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_RT1 &= ((uint8)(~PWM_Stepper_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_RT1 |= PWM_Stepper_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_Stepper.c **** 
 115:Generated_Source\PSoC5/PWM_Stepper.c ****     #elif (PWM_Stepper_UseControl)
 116:Generated_Source\PSoC5/PWM_Stepper.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_Stepper.c ****         ctrl = PWM_Stepper_CONTROL & ((uint8)(~PWM_Stepper_CTRL_CMPMODE2_MASK)) &
  88              		.loc 1 117 0
  89 0006 204B     		ldr	r3, .L6
  90 0008 1B78     		ldrb	r3, [r3]
  91 000a DBB2     		uxtb	r3, r3
  92 000c 23F03F03 		bic	r3, r3, #63
  93 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/PWM_Stepper.c ****                 ((uint8)(~PWM_Stepper_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_CONTROL = ctrl | PWM_Stepper_DEFAULT_COMPARE2_MODE |
  94              		.loc 1 119 0
  95 0012 1D4A     		ldr	r2, .L6
  96 0014 FB79     		ldrb	r3, [r7, #7]
  97 0016 43F00903 		orr	r3, r3, #9
  98 001a DBB2     		uxtb	r3, r3
  99 001c 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/PWM_Stepper.c ****                                    PWM_Stepper_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_Stepper.c **** 
 123:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (!PWM_Stepper_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_Stepper.c ****         #if (PWM_Stepper_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_AUX_CONTROLDP0 |= (PWM_Stepper_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_Stepper.c ****         #else /* (PWM_Stepper_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_AUX_CONTROLDP0 |= (PWM_Stepper_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 5


 100              		.loc 1 129 0
 101 001e 1B4A     		ldr	r2, .L6+4
 102 0020 1A4B     		ldr	r3, .L6+4
 103 0022 1B78     		ldrb	r3, [r3]
 104 0024 DBB2     		uxtb	r3, r3
 105 0026 43F00103 		orr	r3, r3, #1
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 130:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_AUX_CONTROLDP1 |= (PWM_Stepper_AUX_CTRL_FIFO0_CLR);
 108              		.loc 1 130 0
 109 002e 184A     		ldr	r2, .L6+8
 110 0030 174B     		ldr	r3, .L6+8
 111 0032 1B78     		ldrb	r3, [r3]
 112 0034 DBB2     		uxtb	r3, r3
 113 0036 43F00103 		orr	r3, r3, #1
 114 003a DBB2     		uxtb	r3, r3
 115 003c 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_Stepper.c **** 
 133:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_WriteCounter(PWM_Stepper_INIT_PERIOD_VALUE);
 116              		.loc 1 133 0
 117 003e 42F6E060 		movw	r0, #12000
 118 0042 FFF7FEFF 		bl	PWM_Stepper_WriteCounter
 134:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (!PWM_Stepper_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_Stepper.c **** 
 136:Generated_Source\PSoC5/PWM_Stepper.c ****     PWM_Stepper_WritePeriod(PWM_Stepper_INIT_PERIOD_VALUE);
 119              		.loc 1 136 0
 120 0046 42F6E060 		movw	r0, #12000
 121 004a FFF7FEFF 		bl	PWM_Stepper_WritePeriod
 137:Generated_Source\PSoC5/PWM_Stepper.c **** 
 138:Generated_Source\PSoC5/PWM_Stepper.c ****         #if (PWM_Stepper_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_WriteCompare(PWM_Stepper_INIT_COMPARE_VALUE1);
 122              		.loc 1 139 0
 123 004e 4FF47A60 		mov	r0, #4000
 124 0052 FFF7FEFF 		bl	PWM_Stepper_WriteCompare
 140:Generated_Source\PSoC5/PWM_Stepper.c ****         #else
 141:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_WriteCompare1(PWM_Stepper_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_WriteCompare2(PWM_Stepper_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_Stepper.c **** 
 145:Generated_Source\PSoC5/PWM_Stepper.c ****         #if (PWM_Stepper_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_WriteKillTime(PWM_Stepper_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_Stepper.c **** 
 149:Generated_Source\PSoC5/PWM_Stepper.c ****         #if (PWM_Stepper_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_WriteDeadTime(PWM_Stepper_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_Stepper.c **** 
 153:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UseStatus || PWM_Stepper_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_SetInterruptMode(PWM_Stepper_INIT_INTERRUPTS_MODE);
 125              		.loc 1 154 0
 126 0056 0020     		movs	r0, #0
 127 0058 FFF7FEFF 		bl	PWM_Stepper_SetInterruptMode
 155:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UseStatus || PWM_Stepper_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_Stepper.c **** 
 157:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_Stepper.c ****         /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 6


 159:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_GLOBAL_ENABLE |= PWM_Stepper_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_Stepper.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_CONTROL2 |= PWM_Stepper_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_Stepper.c ****     #else
 163:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(PWM_Stepper_UseStatus)
 164:Generated_Source\PSoC5/PWM_Stepper.c **** 
 165:Generated_Source\PSoC5/PWM_Stepper.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_interruptState = CyEnterCriticalSection();
 128              		.loc 1 167 0
 129 005c FFF7FEFF 		bl	CyEnterCriticalSection
 130 0060 0346     		mov	r3, r0
 131 0062 BB71     		strb	r3, [r7, #6]
 168:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_STATUS_AUX_CTRL |= PWM_Stepper_STATUS_ACTL_INT_EN_MASK;
 132              		.loc 1 169 0
 133 0064 0B4A     		ldr	r2, .L6+12
 134 0066 0B4B     		ldr	r3, .L6+12
 135 0068 1B78     		ldrb	r3, [r3]
 136 006a DBB2     		uxtb	r3, r3
 137 006c 43F01003 		orr	r3, r3, #16
 138 0070 DBB2     		uxtb	r3, r3
 139 0072 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/PWM_Stepper.c **** 
 171:Generated_Source\PSoC5/PWM_Stepper.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_Stepper.c ****             CyExitCriticalSection(PWM_Stepper_interruptState);
 140              		.loc 1 172 0
 141 0074 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 142 0076 1846     		mov	r0, r3
 143 0078 FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC5/PWM_Stepper.c **** 
 174:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Clear the FIFO to enable the PWM_Stepper_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_Stepper.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_ClearFIFO();
 144              		.loc 1 176 0
 145 007c FFF7FEFF 		bl	PWM_Stepper_ClearFIFO
 177:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_UseStatus) */
 178:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_Stepper.c **** }
 146              		.loc 1 179 0
 147 0080 00BF     		nop
 148 0082 0837     		adds	r7, r7, #8
 149              		.cfi_def_cfa_offset 8
 150 0084 BD46     		mov	sp, r7
 151              		.cfi_def_cfa_register 13
 152              		@ sp needed
 153 0086 80BD     		pop	{r7, pc}
 154              	.L7:
 155              		.align	2
 156              	.L6:
 157 0088 7A650040 		.word	1073767802
 158 008c 98650040 		.word	1073767832
 159 0090 99650040 		.word	1073767833
 160 0094 9A650040 		.word	1073767834
 161              		.cfi_endproc
 162              	.LFE1:
 163              		.size	PWM_Stepper_Init, .-PWM_Stepper_Init
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 7


 164              		.section	.text.PWM_Stepper_Enable,"ax",%progbits
 165              		.align	2
 166              		.global	PWM_Stepper_Enable
 167              		.thumb
 168              		.thumb_func
 169              		.type	PWM_Stepper_Enable, %function
 170              	PWM_Stepper_Enable:
 171              	.LFB2:
 180:Generated_Source\PSoC5/PWM_Stepper.c **** 
 181:Generated_Source\PSoC5/PWM_Stepper.c **** 
 182:Generated_Source\PSoC5/PWM_Stepper.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_Stepper.c **** * Function Name: PWM_Stepper_Enable
 184:Generated_Source\PSoC5/PWM_Stepper.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_Stepper.c **** *
 186:Generated_Source\PSoC5/PWM_Stepper.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_Stepper.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_Stepper.c **** *
 189:Generated_Source\PSoC5/PWM_Stepper.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
 191:Generated_Source\PSoC5/PWM_Stepper.c **** *
 192:Generated_Source\PSoC5/PWM_Stepper.c **** * Return:
 193:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
 194:Generated_Source\PSoC5/PWM_Stepper.c **** *
 195:Generated_Source\PSoC5/PWM_Stepper.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_Stepper.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_Stepper.c **** *
 198:Generated_Source\PSoC5/PWM_Stepper.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_Stepper.c **** void PWM_Stepper_Enable(void) 
 200:Generated_Source\PSoC5/PWM_Stepper.c **** {
 172              		.loc 1 200 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 80B4     		push	{r7}
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 7, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_Stepper.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_GLOBAL_ENABLE |= PWM_Stepper_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_GLOBAL_STBY_ENABLE |= PWM_Stepper_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_Stepper.c **** 
 207:Generated_Source\PSoC5/PWM_Stepper.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UseControl || PWM_Stepper_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_CONTROL |= PWM_Stepper_CTRL_ENABLE;
 182              		.loc 1 209 0
 183 0004 054A     		ldr	r2, .L9
 184 0006 054B     		ldr	r3, .L9
 185 0008 1B78     		ldrb	r3, [r3]
 186 000a DBB2     		uxtb	r3, r3
 187 000c 63F07F03 		orn	r3, r3, #127
 188 0010 DBB2     		uxtb	r3, r3
 189 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UseControl || PWM_Stepper_UsingFixedFunction) */
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 8


 211:Generated_Source\PSoC5/PWM_Stepper.c **** }
 190              		.loc 1 211 0
 191 0014 00BF     		nop
 192 0016 BD46     		mov	sp, r7
 193              		.cfi_def_cfa_register 13
 194              		@ sp needed
 195 0018 80BC     		pop	{r7}
 196              		.cfi_restore 7
 197              		.cfi_def_cfa_offset 0
 198 001a 7047     		bx	lr
 199              	.L10:
 200              		.align	2
 201              	.L9:
 202 001c 7A650040 		.word	1073767802
 203              		.cfi_endproc
 204              	.LFE2:
 205              		.size	PWM_Stepper_Enable, .-PWM_Stepper_Enable
 206              		.section	.text.PWM_Stepper_Stop,"ax",%progbits
 207              		.align	2
 208              		.global	PWM_Stepper_Stop
 209              		.thumb
 210              		.thumb_func
 211              		.type	PWM_Stepper_Stop, %function
 212              	PWM_Stepper_Stop:
 213              	.LFB3:
 212:Generated_Source\PSoC5/PWM_Stepper.c **** 
 213:Generated_Source\PSoC5/PWM_Stepper.c **** 
 214:Generated_Source\PSoC5/PWM_Stepper.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_Stepper.c **** * Function Name: PWM_Stepper_Stop
 216:Generated_Source\PSoC5/PWM_Stepper.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_Stepper.c **** *
 218:Generated_Source\PSoC5/PWM_Stepper.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_Stepper.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_Stepper.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_Stepper.c **** *
 222:Generated_Source\PSoC5/PWM_Stepper.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
 224:Generated_Source\PSoC5/PWM_Stepper.c **** *
 225:Generated_Source\PSoC5/PWM_Stepper.c **** * Return:
 226:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
 227:Generated_Source\PSoC5/PWM_Stepper.c **** *
 228:Generated_Source\PSoC5/PWM_Stepper.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_Stepper.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_Stepper.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_Stepper.c **** *
 232:Generated_Source\PSoC5/PWM_Stepper.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_Stepper.c **** void PWM_Stepper_Stop(void) 
 234:Generated_Source\PSoC5/PWM_Stepper.c **** {
 214              		.loc 1 234 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 1, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219 0000 80B4     		push	{r7}
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 9


 223              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UseControl || PWM_Stepper_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_CONTROL &= ((uint8)(~PWM_Stepper_CTRL_ENABLE));
 224              		.loc 1 236 0
 225 0004 054A     		ldr	r2, .L12
 226 0006 054B     		ldr	r3, .L12
 227 0008 1B78     		ldrb	r3, [r3]
 228 000a DBB2     		uxtb	r3, r3
 229 000c 03F07F03 		and	r3, r3, #127
 230 0010 DBB2     		uxtb	r3, r3
 231 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UseControl || PWM_Stepper_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_Stepper.c **** 
 239:Generated_Source\PSoC5/PWM_Stepper.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_GLOBAL_ENABLE &= ((uint8)(~PWM_Stepper_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_Stepper.c ****         PWM_Stepper_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Stepper_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_Stepper.c **** }
 232              		.loc 1 244 0
 233 0014 00BF     		nop
 234 0016 BD46     		mov	sp, r7
 235              		.cfi_def_cfa_register 13
 236              		@ sp needed
 237 0018 80BC     		pop	{r7}
 238              		.cfi_restore 7
 239              		.cfi_def_cfa_offset 0
 240 001a 7047     		bx	lr
 241              	.L13:
 242              		.align	2
 243              	.L12:
 244 001c 7A650040 		.word	1073767802
 245              		.cfi_endproc
 246              	.LFE3:
 247              		.size	PWM_Stepper_Stop, .-PWM_Stepper_Stop
 248              		.section	.text.PWM_Stepper_WriteCounter,"ax",%progbits
 249              		.align	2
 250              		.global	PWM_Stepper_WriteCounter
 251              		.thumb
 252              		.thumb_func
 253              		.type	PWM_Stepper_WriteCounter, %function
 254              	PWM_Stepper_WriteCounter:
 255              	.LFB4:
 245:Generated_Source\PSoC5/PWM_Stepper.c **** 
 246:Generated_Source\PSoC5/PWM_Stepper.c **** #if (PWM_Stepper_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_Stepper.c **** 
 249:Generated_Source\PSoC5/PWM_Stepper.c **** 
 250:Generated_Source\PSoC5/PWM_Stepper.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_Stepper.c ****         * Function Name: PWM_Stepper_SetCompareMode
 252:Generated_Source\PSoC5/PWM_Stepper.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 254:Generated_Source\PSoC5/PWM_Stepper.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_Stepper.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_Stepper.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 258:Generated_Source\PSoC5/PWM_Stepper.c ****         * Parameters:
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 10


 259:Generated_Source\PSoC5/PWM_Stepper.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_Stepper.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 262:Generated_Source\PSoC5/PWM_Stepper.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_Stepper.c ****         *  None
 264:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 265:Generated_Source\PSoC5/PWM_Stepper.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_Stepper.c ****         void PWM_Stepper_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_Stepper.c ****         {
 268:Generated_Source\PSoC5/PWM_Stepper.c ****             #if(PWM_Stepper_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_Stepper.c **** 
 270:Generated_Source\PSoC5/PWM_Stepper.c ****                 #if(0 != PWM_Stepper_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_Stepper.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Stepper_CTRL_CMPMO
 272:Generated_Source\PSoC5/PWM_Stepper.c ****                 #else
 273:Generated_Source\PSoC5/PWM_Stepper.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_Stepper.c ****                 #endif /* (0 != PWM_Stepper_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_Stepper.c **** 
 276:Generated_Source\PSoC5/PWM_Stepper.c ****                 PWM_Stepper_CONTROL3 &= ((uint8)(~PWM_Stepper_CTRL_CMPMODE1_MASK)); /*Clear Existin
 277:Generated_Source\PSoC5/PWM_Stepper.c ****                 PWM_Stepper_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_Stepper.c **** 
 279:Generated_Source\PSoC5/PWM_Stepper.c ****             #elif (PWM_Stepper_UseControl)
 280:Generated_Source\PSoC5/PWM_Stepper.c **** 
 281:Generated_Source\PSoC5/PWM_Stepper.c ****                 #if(0 != PWM_Stepper_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_Stepper.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Stepper_CTRL_CMPM
 283:Generated_Source\PSoC5/PWM_Stepper.c ****                                                 PWM_Stepper_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_Stepper.c ****                 #else
 285:Generated_Source\PSoC5/PWM_Stepper.c ****                     uint8 comparemode1masked = comparemode & PWM_Stepper_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_Stepper.c ****                 #endif /* (0 != PWM_Stepper_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_Stepper.c **** 
 288:Generated_Source\PSoC5/PWM_Stepper.c ****                 #if(0 != PWM_Stepper_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_Stepper.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Stepper_CTRL_CMPM
 290:Generated_Source\PSoC5/PWM_Stepper.c ****                                                PWM_Stepper_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_Stepper.c ****                 #else
 292:Generated_Source\PSoC5/PWM_Stepper.c ****                     uint8 comparemode2masked = comparemode & PWM_Stepper_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_Stepper.c ****                 #endif /* (0 != PWM_Stepper_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_Stepper.c **** 
 295:Generated_Source\PSoC5/PWM_Stepper.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_Stepper.c ****                 PWM_Stepper_CONTROL &= ((uint8)(~(PWM_Stepper_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_Stepper.c ****                                             PWM_Stepper_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_Stepper.c ****                 PWM_Stepper_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_Stepper.c **** 
 300:Generated_Source\PSoC5/PWM_Stepper.c ****             #else
 301:Generated_Source\PSoC5/PWM_Stepper.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_Stepper.c ****             #endif /* (PWM_Stepper_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_Stepper.c ****         }
 304:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* PWM_Stepper_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_Stepper.c **** 
 306:Generated_Source\PSoC5/PWM_Stepper.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_Stepper.c **** 
 308:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_Stepper.c **** 
 310:Generated_Source\PSoC5/PWM_Stepper.c **** 
 311:Generated_Source\PSoC5/PWM_Stepper.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_Stepper.c ****         * Function Name: PWM_Stepper_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_Stepper.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 315:Generated_Source\PSoC5/PWM_Stepper.c ****         * Summary:
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 11


 316:Generated_Source\PSoC5/PWM_Stepper.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 318:Generated_Source\PSoC5/PWM_Stepper.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_Stepper.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_Stepper.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 322:Generated_Source\PSoC5/PWM_Stepper.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_Stepper.c ****         *  None
 324:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 325:Generated_Source\PSoC5/PWM_Stepper.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_Stepper.c ****         void PWM_Stepper_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_Stepper.c ****         {
 328:Generated_Source\PSoC5/PWM_Stepper.c ****             #if(0 != PWM_Stepper_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_Stepper.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Stepper_CTRL_CMPMODE1_
 330:Generated_Source\PSoC5/PWM_Stepper.c ****                                            PWM_Stepper_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_Stepper.c ****             #else
 332:Generated_Source\PSoC5/PWM_Stepper.c ****                 uint8 comparemodemasked = comparemode & PWM_Stepper_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_Stepper.c ****             #endif /* (0 != PWM_Stepper_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_Stepper.c **** 
 335:Generated_Source\PSoC5/PWM_Stepper.c ****             #if (PWM_Stepper_UseControl)
 336:Generated_Source\PSoC5/PWM_Stepper.c ****                 PWM_Stepper_CONTROL &= ((uint8)(~PWM_Stepper_CTRL_CMPMODE1_MASK)); /*Clear existing
 337:Generated_Source\PSoC5/PWM_Stepper.c ****                 PWM_Stepper_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_Stepper.c ****             #endif /* (PWM_Stepper_UseControl) */
 339:Generated_Source\PSoC5/PWM_Stepper.c ****         }
 340:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* PWM_Stepper_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_Stepper.c **** 
 342:Generated_Source\PSoC5/PWM_Stepper.c **** #if (PWM_Stepper_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_Stepper.c **** 
 344:Generated_Source\PSoC5/PWM_Stepper.c **** 
 345:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 349:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 352:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_Stepper.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_Stepper.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 356:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 358:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 359:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_Stepper.c ****     void PWM_Stepper_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 362:Generated_Source\PSoC5/PWM_Stepper.c **** 
 363:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(0 != PWM_Stepper_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_Stepper.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Stepper_CTRL_CMPMODE2_SHIF
 365:Generated_Source\PSoC5/PWM_Stepper.c ****                                                  PWM_Stepper_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_Stepper.c ****         #else
 367:Generated_Source\PSoC5/PWM_Stepper.c ****             uint8 comparemodemasked = comparemode & PWM_Stepper_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (0 != PWM_Stepper_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_Stepper.c **** 
 370:Generated_Source\PSoC5/PWM_Stepper.c ****         #if (PWM_Stepper_UseControl)
 371:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_CONTROL &= ((uint8)(~PWM_Stepper_CTRL_CMPMODE2_MASK)); /*Clear existing mod
 372:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_CONTROL |= comparemodemasked;
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 12


 373:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_UseControl) */
 374:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 375:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /*PWM_Stepper_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_Stepper.c **** 
 377:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_Stepper.c **** 
 379:Generated_Source\PSoC5/PWM_Stepper.c **** 
 380:Generated_Source\PSoC5/PWM_Stepper.c **** #if (!PWM_Stepper_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_Stepper.c **** 
 382:Generated_Source\PSoC5/PWM_Stepper.c **** 
 383:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_WriteCounter
 385:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 387:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_Stepper.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_Stepper.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_Stepper.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 393:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_Stepper.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 396:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 398:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 399:Generated_Source\PSoC5/PWM_Stepper.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_Stepper.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 402:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_Stepper.c ****     void PWM_Stepper_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_Stepper.c ****                                        
 405:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 256              		.loc 1 405 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 8
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261 0000 80B4     		push	{r7}
 262              		.cfi_def_cfa_offset 4
 263              		.cfi_offset 7, -4
 264 0002 83B0     		sub	sp, sp, #12
 265              		.cfi_def_cfa_offset 16
 266 0004 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 268 0006 0346     		mov	r3, r0
 269 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 406:Generated_Source\PSoC5/PWM_Stepper.c ****         CY_SET_REG16(PWM_Stepper_COUNTER_LSB_PTR, counter);
 270              		.loc 1 406 0
 271 000a 044A     		ldr	r2, .L15
 272 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 273 000e 1380     		strh	r3, [r2]	@ movhi
 407:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 274              		.loc 1 407 0
 275 0010 00BF     		nop
 276 0012 0C37     		adds	r7, r7, #12
 277              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 13


 278 0014 BD46     		mov	sp, r7
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 0016 80BC     		pop	{r7}
 282              		.cfi_restore 7
 283              		.cfi_def_cfa_offset 0
 284 0018 7047     		bx	lr
 285              	.L16:
 286 001a 00BF     		.align	2
 287              	.L15:
 288 001c 106A0040 		.word	1073768976
 289              		.cfi_endproc
 290              	.LFE4:
 291              		.size	PWM_Stepper_WriteCounter, .-PWM_Stepper_WriteCounter
 292              		.section	.text.PWM_Stepper_ReadCounter,"ax",%progbits
 293              		.align	2
 294              		.global	PWM_Stepper_ReadCounter
 295              		.thumb
 296              		.thumb_func
 297              		.type	PWM_Stepper_ReadCounter, %function
 298              	PWM_Stepper_ReadCounter:
 299              	.LFB5:
 408:Generated_Source\PSoC5/PWM_Stepper.c **** 
 409:Generated_Source\PSoC5/PWM_Stepper.c **** 
 410:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_ReadCounter
 412:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 414:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_Stepper.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 418:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 420:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 421:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_Stepper.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 424:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_Stepper.c ****     uint16 PWM_Stepper_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 300              		.loc 1 426 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305 0000 80B4     		push	{r7}
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWM_Stepper.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_Stepper.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_Stepper.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_Stepper.c ****           (void)CY_GET_REG8(PWM_Stepper_COUNTERCAP_LSB_PTR_8BIT);
 310              		.loc 1 430 0
 311 0004 044B     		ldr	r3, .L19
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 14


 312 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/PWM_Stepper.c **** 
 432:Generated_Source\PSoC5/PWM_Stepper.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_Stepper.c ****         return (CY_GET_REG16(PWM_Stepper_CAPTURE_LSB_PTR));
 313              		.loc 1 433 0
 314 0008 044B     		ldr	r3, .L19+4
 315 000a 1B88     		ldrh	r3, [r3]	@ movhi
 316 000c 9BB2     		uxth	r3, r3
 434:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 317              		.loc 1 434 0
 318 000e 1846     		mov	r0, r3
 319 0010 BD46     		mov	sp, r7
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 0012 80BC     		pop	{r7}
 323              		.cfi_restore 7
 324              		.cfi_def_cfa_offset 0
 325 0014 7047     		bx	lr
 326              	.L20:
 327 0016 00BF     		.align	2
 328              	.L19:
 329 0018 18650040 		.word	1073767704
 330 001c B06A0040 		.word	1073769136
 331              		.cfi_endproc
 332              	.LFE5:
 333              		.size	PWM_Stepper_ReadCounter, .-PWM_Stepper_ReadCounter
 334              		.section	.text.PWM_Stepper_ClearFIFO,"ax",%progbits
 335              		.align	2
 336              		.global	PWM_Stepper_ClearFIFO
 337              		.thumb
 338              		.thumb_func
 339              		.type	PWM_Stepper_ClearFIFO, %function
 340              	PWM_Stepper_ClearFIFO:
 341              	.LFB6:
 435:Generated_Source\PSoC5/PWM_Stepper.c **** 
 436:Generated_Source\PSoC5/PWM_Stepper.c ****     #if (PWM_Stepper_UseStatus)
 437:Generated_Source\PSoC5/PWM_Stepper.c **** 
 438:Generated_Source\PSoC5/PWM_Stepper.c **** 
 439:Generated_Source\PSoC5/PWM_Stepper.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_Stepper.c ****         * Function Name: PWM_Stepper_ClearFIFO
 441:Generated_Source\PSoC5/PWM_Stepper.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 443:Generated_Source\PSoC5/PWM_Stepper.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_Stepper.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 446:Generated_Source\PSoC5/PWM_Stepper.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_Stepper.c ****         *  None
 448:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 449:Generated_Source\PSoC5/PWM_Stepper.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_Stepper.c ****         *  None
 451:Generated_Source\PSoC5/PWM_Stepper.c ****         *
 452:Generated_Source\PSoC5/PWM_Stepper.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_Stepper.c ****         void PWM_Stepper_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_Stepper.c ****         {
 342              		.loc 1 454 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 15


 345              		@ frame_needed = 1, uses_anonymous_args = 0
 346 0000 80B5     		push	{r7, lr}
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC5/PWM_Stepper.c ****             while(0u != (PWM_Stepper_ReadStatusRegister() & PWM_Stepper_STATUS_FIFONEMPTY))
 352              		.loc 1 455 0
 353 0004 01E0     		b	.L22
 354              	.L23:
 456:Generated_Source\PSoC5/PWM_Stepper.c ****             {
 457:Generated_Source\PSoC5/PWM_Stepper.c ****                 (void)PWM_Stepper_ReadCapture();
 355              		.loc 1 457 0
 356 0006 FFF7FEFF 		bl	PWM_Stepper_ReadCapture
 357              	.L22:
 455:Generated_Source\PSoC5/PWM_Stepper.c ****             while(0u != (PWM_Stepper_ReadStatusRegister() & PWM_Stepper_STATUS_FIFONEMPTY))
 358              		.loc 1 455 0
 359 000a FFF7FEFF 		bl	PWM_Stepper_ReadStatusRegister
 360 000e 0346     		mov	r3, r0
 361 0010 03F01003 		and	r3, r3, #16
 362 0014 002B     		cmp	r3, #0
 363 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC5/PWM_Stepper.c ****             }
 459:Generated_Source\PSoC5/PWM_Stepper.c ****         }
 364              		.loc 1 459 0
 365 0018 00BF     		nop
 366 001a 80BD     		pop	{r7, pc}
 367              		.cfi_endproc
 368              	.LFE6:
 369              		.size	PWM_Stepper_ClearFIFO, .-PWM_Stepper_ClearFIFO
 370              		.section	.text.PWM_Stepper_WritePeriod,"ax",%progbits
 371              		.align	2
 372              		.global	PWM_Stepper_WritePeriod
 373              		.thumb
 374              		.thumb_func
 375              		.type	PWM_Stepper_WritePeriod, %function
 376              	PWM_Stepper_WritePeriod:
 377              	.LFB7:
 460:Generated_Source\PSoC5/PWM_Stepper.c **** 
 461:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* PWM_Stepper_UseStatus */
 462:Generated_Source\PSoC5/PWM_Stepper.c **** 
 463:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* !PWM_Stepper_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_Stepper.c **** 
 465:Generated_Source\PSoC5/PWM_Stepper.c **** 
 466:Generated_Source\PSoC5/PWM_Stepper.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_Stepper.c **** * Function Name: PWM_Stepper_WritePeriod
 468:Generated_Source\PSoC5/PWM_Stepper.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_Stepper.c **** *
 470:Generated_Source\PSoC5/PWM_Stepper.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_Stepper.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_Stepper.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_Stepper.c **** *
 474:Generated_Source\PSoC5/PWM_Stepper.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_Stepper.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_Stepper.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_Stepper.c **** *
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 16


 478:Generated_Source\PSoC5/PWM_Stepper.c **** * Return:
 479:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
 480:Generated_Source\PSoC5/PWM_Stepper.c **** *
 481:Generated_Source\PSoC5/PWM_Stepper.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_Stepper.c **** void PWM_Stepper_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_Stepper.c **** {
 378              		.loc 1 483 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 8
 381              		@ frame_needed = 1, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383 0000 80B4     		push	{r7}
 384              		.cfi_def_cfa_offset 4
 385              		.cfi_offset 7, -4
 386 0002 83B0     		sub	sp, sp, #12
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              		.cfi_def_cfa_register 7
 390 0006 0346     		mov	r3, r0
 391 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 484:Generated_Source\PSoC5/PWM_Stepper.c ****     #if(PWM_Stepper_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_Stepper.c ****         CY_SET_REG16(PWM_Stepper_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_Stepper.c ****     #else
 487:Generated_Source\PSoC5/PWM_Stepper.c ****         CY_SET_REG16(PWM_Stepper_PERIOD_LSB_PTR, period);
 392              		.loc 1 487 0
 393 000a 044A     		ldr	r2, .L25
 394 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 395 000e 1380     		strh	r3, [r2]	@ movhi
 488:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_Stepper.c **** }
 396              		.loc 1 489 0
 397 0010 00BF     		nop
 398 0012 0C37     		adds	r7, r7, #12
 399              		.cfi_def_cfa_offset 4
 400 0014 BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0016 80BC     		pop	{r7}
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 0018 7047     		bx	lr
 407              	.L26:
 408 001a 00BF     		.align	2
 409              	.L25:
 410 001c 906A0040 		.word	1073769104
 411              		.cfi_endproc
 412              	.LFE7:
 413              		.size	PWM_Stepper_WritePeriod, .-PWM_Stepper_WritePeriod
 414              		.section	.text.PWM_Stepper_WriteCompare,"ax",%progbits
 415              		.align	2
 416              		.global	PWM_Stepper_WriteCompare
 417              		.thumb
 418              		.thumb_func
 419              		.type	PWM_Stepper_WriteCompare, %function
 420              	PWM_Stepper_WriteCompare:
 421              	.LFB8:
 490:Generated_Source\PSoC5/PWM_Stepper.c **** 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 17


 491:Generated_Source\PSoC5/PWM_Stepper.c **** #if (PWM_Stepper_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_Stepper.c **** 
 493:Generated_Source\PSoC5/PWM_Stepper.c **** 
 494:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_WriteCompare
 496:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 498:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_Stepper.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_Stepper.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_Stepper.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 505:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_Stepper.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 508:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 510:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 511:Generated_Source\PSoC5/PWM_Stepper.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 515:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_Stepper.c ****     void PWM_Stepper_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_Stepper.c ****                                        
 518:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 422              		.loc 1 518 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 8
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427 0000 80B4     		push	{r7}
 428              		.cfi_def_cfa_offset 4
 429              		.cfi_offset 7, -4
 430 0002 83B0     		sub	sp, sp, #12
 431              		.cfi_def_cfa_offset 16
 432 0004 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
 434 0006 0346     		mov	r3, r0
 435 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 519:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(PWM_Stepper_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_Stepper.c ****             CY_SET_REG16(PWM_Stepper_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_Stepper.c ****         #else
 522:Generated_Source\PSoC5/PWM_Stepper.c ****             CY_SET_REG16(PWM_Stepper_COMPARE1_LSB_PTR, compare);
 436              		.loc 1 522 0
 437 000a 044A     		ldr	r2, .L28
 438 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 439 000e 1380     		strh	r3, [r2]	@ movhi
 523:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_Stepper.c **** 
 525:Generated_Source\PSoC5/PWM_Stepper.c ****         #if (PWM_Stepper_PWMMode == PWM_Stepper__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_Stepper.c ****             #if(PWM_Stepper_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_Stepper.c ****                 CY_SET_REG16(PWM_Stepper_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_Stepper.c ****             #else
 529:Generated_Source\PSoC5/PWM_Stepper.c ****                 CY_SET_REG16(PWM_Stepper_COMPARE2_LSB_PTR, (compare + 1u));
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 18


 530:Generated_Source\PSoC5/PWM_Stepper.c ****             #endif /* (PWM_Stepper_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_PWMMode == PWM_Stepper__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 440              		.loc 1 532 0
 441 0010 00BF     		nop
 442 0012 0C37     		adds	r7, r7, #12
 443              		.cfi_def_cfa_offset 4
 444 0014 BD46     		mov	sp, r7
 445              		.cfi_def_cfa_register 13
 446              		@ sp needed
 447 0016 80BC     		pop	{r7}
 448              		.cfi_restore 7
 449              		.cfi_def_cfa_offset 0
 450 0018 7047     		bx	lr
 451              	.L29:
 452 001a 00BF     		.align	2
 453              	.L28:
 454 001c 506A0040 		.word	1073769040
 455              		.cfi_endproc
 456              	.LFE8:
 457              		.size	PWM_Stepper_WriteCompare, .-PWM_Stepper_WriteCompare
 458              		.section	.text.PWM_Stepper_SetInterruptMode,"ax",%progbits
 459              		.align	2
 460              		.global	PWM_Stepper_SetInterruptMode
 461              		.thumb
 462              		.thumb_func
 463              		.type	PWM_Stepper_SetInterruptMode, %function
 464              	PWM_Stepper_SetInterruptMode:
 465              	.LFB9:
 533:Generated_Source\PSoC5/PWM_Stepper.c **** 
 534:Generated_Source\PSoC5/PWM_Stepper.c **** 
 535:Generated_Source\PSoC5/PWM_Stepper.c **** #else
 536:Generated_Source\PSoC5/PWM_Stepper.c **** 
 537:Generated_Source\PSoC5/PWM_Stepper.c **** 
 538:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_WriteCompare1
 540:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 542:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_Stepper.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_Stepper.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_Stepper.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 548:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_Stepper.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 551:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 553:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 554:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_Stepper.c ****     void PWM_Stepper_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_Stepper.c ****                                         
 557:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 558:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(PWM_Stepper_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_Stepper.c ****             CY_SET_REG16(PWM_Stepper_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_Stepper.c ****         #else
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 19


 561:Generated_Source\PSoC5/PWM_Stepper.c ****             CY_SET_REG16(PWM_Stepper_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 564:Generated_Source\PSoC5/PWM_Stepper.c **** 
 565:Generated_Source\PSoC5/PWM_Stepper.c **** 
 566:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_WriteCompare2
 568:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 570:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_Stepper.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_Stepper.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_Stepper.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_Stepper.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 577:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_Stepper.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 580:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 582:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 583:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_Stepper.c ****     void PWM_Stepper_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_Stepper.c ****                                         
 586:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 587:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(PWM_Stepper_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_Stepper.c ****             CY_SET_REG16(PWM_Stepper_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_Stepper.c ****         #else
 590:Generated_Source\PSoC5/PWM_Stepper.c ****             CY_SET_REG16(PWM_Stepper_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 593:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_Stepper.c **** 
 595:Generated_Source\PSoC5/PWM_Stepper.c **** #if (PWM_Stepper_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_Stepper.c **** 
 597:Generated_Source\PSoC5/PWM_Stepper.c **** 
 598:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 602:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 605:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_Stepper.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 608:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 610:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 611:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_Stepper.c ****     void PWM_Stepper_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 614:Generated_Source\PSoC5/PWM_Stepper.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(!PWM_Stepper_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_Stepper.c ****             CY_SET_REG8(PWM_Stepper_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_Stepper.c ****         #else
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 20


 618:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_Stepper.c ****             PWM_Stepper_DEADBAND_COUNT &= ((uint8)(~PWM_Stepper_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_Stepper.c **** 
 622:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_Stepper.c ****             #if(PWM_Stepper_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_Stepper.c ****                 PWM_Stepper_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Stepper_DEADBAND_COUN
 625:Generated_Source\PSoC5/PWM_Stepper.c ****                                                     PWM_Stepper_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_Stepper.c ****             #else
 627:Generated_Source\PSoC5/PWM_Stepper.c ****                 PWM_Stepper_DEADBAND_COUNT |= deadtime & PWM_Stepper_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_Stepper.c ****             #endif /* (PWM_Stepper_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_Stepper.c **** 
 630:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (!PWM_Stepper_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 632:Generated_Source\PSoC5/PWM_Stepper.c **** 
 633:Generated_Source\PSoC5/PWM_Stepper.c **** 
 634:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 638:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 641:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 643:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 644:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 647:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_Stepper.c ****     uint8 PWM_Stepper_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 650:Generated_Source\PSoC5/PWM_Stepper.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(!PWM_Stepper_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_Stepper.c ****             return (CY_GET_REG8(PWM_Stepper_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_Stepper.c ****         #else
 654:Generated_Source\PSoC5/PWM_Stepper.c **** 
 655:Generated_Source\PSoC5/PWM_Stepper.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_Stepper.c ****             #if(PWM_Stepper_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_Stepper.c ****                 return ((uint8)(((uint8)(PWM_Stepper_DEADBAND_COUNT & PWM_Stepper_DEADBAND_COUNT_MA
 658:Generated_Source\PSoC5/PWM_Stepper.c ****                                                                            PWM_Stepper_DEADBAND_COU
 659:Generated_Source\PSoC5/PWM_Stepper.c ****             #else
 660:Generated_Source\PSoC5/PWM_Stepper.c ****                 return (PWM_Stepper_DEADBAND_COUNT & PWM_Stepper_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_Stepper.c ****             #endif /* (PWM_Stepper_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (!PWM_Stepper_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 664:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_Stepper.c **** 
 666:Generated_Source\PSoC5/PWM_Stepper.c **** #if (PWM_Stepper_UseStatus || PWM_Stepper_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_Stepper.c **** 
 668:Generated_Source\PSoC5/PWM_Stepper.c **** 
 669:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 673:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This function configures the interrupts mask control of theinterrupt
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 21


 675:Generated_Source\PSoC5/PWM_Stepper.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 677:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_Stepper.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 680:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 682:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 683:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_Stepper.c ****     void PWM_Stepper_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 466              		.loc 1 685 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471 0000 80B4     		push	{r7}
 472              		.cfi_def_cfa_offset 4
 473              		.cfi_offset 7, -4
 474 0002 83B0     		sub	sp, sp, #12
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 478 0006 0346     		mov	r3, r0
 479 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWM_Stepper.c ****         CY_SET_REG8(PWM_Stepper_STATUS_MASK_PTR, interruptMode);
 480              		.loc 1 686 0
 481 000a 044A     		ldr	r2, .L31
 482 000c FB79     		ldrb	r3, [r7, #7]
 483 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 484              		.loc 1 687 0
 485 0010 00BF     		nop
 486 0012 0C37     		adds	r7, r7, #12
 487              		.cfi_def_cfa_offset 4
 488 0014 BD46     		mov	sp, r7
 489              		.cfi_def_cfa_register 13
 490              		@ sp needed
 491 0016 80BC     		pop	{r7}
 492              		.cfi_restore 7
 493              		.cfi_def_cfa_offset 0
 494 0018 7047     		bx	lr
 495              	.L32:
 496 001a 00BF     		.align	2
 497              	.L31:
 498 001c 8A650040 		.word	1073767818
 499              		.cfi_endproc
 500              	.LFE9:
 501              		.size	PWM_Stepper_SetInterruptMode, .-PWM_Stepper_SetInterruptMode
 502              		.section	.text.PWM_Stepper_ReadStatusRegister,"ax",%progbits
 503              		.align	2
 504              		.global	PWM_Stepper_ReadStatusRegister
 505              		.thumb
 506              		.thumb_func
 507              		.type	PWM_Stepper_ReadStatusRegister, %function
 508              	PWM_Stepper_ReadStatusRegister:
 509              	.LFB10:
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 22


 688:Generated_Source\PSoC5/PWM_Stepper.c **** 
 689:Generated_Source\PSoC5/PWM_Stepper.c **** 
 690:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 694:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_Stepper.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 697:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 699:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 700:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_Stepper.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 710:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_Stepper.c ****     uint8 PWM_Stepper_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 510              		.loc 1 712 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515 0000 80B4     		push	{r7}
 516              		.cfi_def_cfa_offset 4
 517              		.cfi_offset 7, -4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWM_Stepper.c ****         return (CY_GET_REG8(PWM_Stepper_STATUS_PTR));
 520              		.loc 1 713 0
 521 0004 034B     		ldr	r3, .L35
 522 0006 1B78     		ldrb	r3, [r3]
 523 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 524              		.loc 1 714 0
 525 000a 1846     		mov	r0, r3
 526 000c BD46     		mov	sp, r7
 527              		.cfi_def_cfa_register 13
 528              		@ sp needed
 529 000e 80BC     		pop	{r7}
 530              		.cfi_restore 7
 531              		.cfi_def_cfa_offset 0
 532 0010 7047     		bx	lr
 533              	.L36:
 534 0012 00BF     		.align	2
 535              	.L35:
 536 0014 6A650040 		.word	1073767786
 537              		.cfi_endproc
 538              	.LFE10:
 539              		.size	PWM_Stepper_ReadStatusRegister, .-PWM_Stepper_ReadStatusRegister
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 23


 540              		.section	.text.PWM_Stepper_ReadControlRegister,"ax",%progbits
 541              		.align	2
 542              		.global	PWM_Stepper_ReadControlRegister
 543              		.thumb
 544              		.thumb_func
 545              		.type	PWM_Stepper_ReadControlRegister, %function
 546              	PWM_Stepper_ReadControlRegister:
 547              	.LFB11:
 715:Generated_Source\PSoC5/PWM_Stepper.c **** 
 716:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* (PWM_Stepper_UseStatus || PWM_Stepper_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_Stepper.c **** 
 718:Generated_Source\PSoC5/PWM_Stepper.c **** 
 719:Generated_Source\PSoC5/PWM_Stepper.c **** #if (PWM_Stepper_UseControl)
 720:Generated_Source\PSoC5/PWM_Stepper.c **** 
 721:Generated_Source\PSoC5/PWM_Stepper.c **** 
 722:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 726:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_Stepper.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 730:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 732:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 733:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_Stepper.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 736:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_Stepper.c ****     uint8 PWM_Stepper_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 548              		.loc 1 738 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 8
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553 0000 80B4     		push	{r7}
 554              		.cfi_def_cfa_offset 4
 555              		.cfi_offset 7, -4
 556 0002 83B0     		sub	sp, sp, #12
 557              		.cfi_def_cfa_offset 16
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_Stepper.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_Stepper.c **** 
 741:Generated_Source\PSoC5/PWM_Stepper.c ****         result = CY_GET_REG8(PWM_Stepper_CONTROL_PTR);
 560              		.loc 1 741 0
 561 0006 044B     		ldr	r3, .L39
 562 0008 1B78     		ldrb	r3, [r3]
 563 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_Stepper.c ****         return (result);
 564              		.loc 1 742 0
 565 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 566              		.loc 1 743 0
 567 000e 1846     		mov	r0, r3
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 24


 568 0010 0C37     		adds	r7, r7, #12
 569              		.cfi_def_cfa_offset 4
 570 0012 BD46     		mov	sp, r7
 571              		.cfi_def_cfa_register 13
 572              		@ sp needed
 573 0014 80BC     		pop	{r7}
 574              		.cfi_restore 7
 575              		.cfi_def_cfa_offset 0
 576 0016 7047     		bx	lr
 577              	.L40:
 578              		.align	2
 579              	.L39:
 580 0018 7A650040 		.word	1073767802
 581              		.cfi_endproc
 582              	.LFE11:
 583              		.size	PWM_Stepper_ReadControlRegister, .-PWM_Stepper_ReadControlRegister
 584              		.section	.text.PWM_Stepper_WriteControlRegister,"ax",%progbits
 585              		.align	2
 586              		.global	PWM_Stepper_WriteControlRegister
 587              		.thumb
 588              		.thumb_func
 589              		.type	PWM_Stepper_WriteControlRegister, %function
 590              	PWM_Stepper_WriteControlRegister:
 591              	.LFB12:
 744:Generated_Source\PSoC5/PWM_Stepper.c **** 
 745:Generated_Source\PSoC5/PWM_Stepper.c **** 
 746:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 750:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_Stepper.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 754:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_Stepper.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_Stepper.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 761:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 763:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 764:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_Stepper.c ****     void PWM_Stepper_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 592              		.loc 1 766 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 8
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597 0000 80B4     		push	{r7}
 598              		.cfi_def_cfa_offset 4
 599              		.cfi_offset 7, -4
 600 0002 83B0     		sub	sp, sp, #12
 601              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 25


 602 0004 00AF     		add	r7, sp, #0
 603              		.cfi_def_cfa_register 7
 604 0006 0346     		mov	r3, r0
 605 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_Stepper.c ****         CY_SET_REG8(PWM_Stepper_CONTROL_PTR, control);
 606              		.loc 1 767 0
 607 000a 044A     		ldr	r2, .L42
 608 000c FB79     		ldrb	r3, [r7, #7]
 609 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 610              		.loc 1 768 0
 611 0010 00BF     		nop
 612 0012 0C37     		adds	r7, r7, #12
 613              		.cfi_def_cfa_offset 4
 614 0014 BD46     		mov	sp, r7
 615              		.cfi_def_cfa_register 13
 616              		@ sp needed
 617 0016 80BC     		pop	{r7}
 618              		.cfi_restore 7
 619              		.cfi_def_cfa_offset 0
 620 0018 7047     		bx	lr
 621              	.L43:
 622 001a 00BF     		.align	2
 623              	.L42:
 624 001c 7A650040 		.word	1073767802
 625              		.cfi_endproc
 626              	.LFE12:
 627              		.size	PWM_Stepper_WriteControlRegister, .-PWM_Stepper_WriteControlRegister
 628              		.section	.text.PWM_Stepper_ReadCapture,"ax",%progbits
 629              		.align	2
 630              		.global	PWM_Stepper_ReadCapture
 631              		.thumb
 632              		.thumb_func
 633              		.type	PWM_Stepper_ReadCapture, %function
 634              	PWM_Stepper_ReadCapture:
 635              	.LFB13:
 769:Generated_Source\PSoC5/PWM_Stepper.c **** 
 770:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* (PWM_Stepper_UseControl) */
 771:Generated_Source\PSoC5/PWM_Stepper.c **** 
 772:Generated_Source\PSoC5/PWM_Stepper.c **** 
 773:Generated_Source\PSoC5/PWM_Stepper.c **** #if (!PWM_Stepper_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_Stepper.c **** 
 775:Generated_Source\PSoC5/PWM_Stepper.c **** 
 776:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_ReadCapture
 778:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 780:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 783:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 785:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 786:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_Stepper.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 789:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 26


 790:Generated_Source\PSoC5/PWM_Stepper.c ****     uint16 PWM_Stepper_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 636              		.loc 1 791 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641 0000 80B4     		push	{r7}
 642              		.cfi_def_cfa_offset 4
 643              		.cfi_offset 7, -4
 644 0002 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWM_Stepper.c ****         return (CY_GET_REG16(PWM_Stepper_CAPTURE_LSB_PTR));
 646              		.loc 1 792 0
 647 0004 034B     		ldr	r3, .L46
 648 0006 1B88     		ldrh	r3, [r3]	@ movhi
 649 0008 9BB2     		uxth	r3, r3
 793:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 650              		.loc 1 793 0
 651 000a 1846     		mov	r0, r3
 652 000c BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 000e 80BC     		pop	{r7}
 656              		.cfi_restore 7
 657              		.cfi_def_cfa_offset 0
 658 0010 7047     		bx	lr
 659              	.L47:
 660 0012 00BF     		.align	2
 661              	.L46:
 662 0014 B06A0040 		.word	1073769136
 663              		.cfi_endproc
 664              	.LFE13:
 665              		.size	PWM_Stepper_ReadCapture, .-PWM_Stepper_ReadCapture
 666              		.section	.text.PWM_Stepper_ReadCompare,"ax",%progbits
 667              		.align	2
 668              		.global	PWM_Stepper_ReadCompare
 669              		.thumb
 670              		.thumb_func
 671              		.type	PWM_Stepper_ReadCompare, %function
 672              	PWM_Stepper_ReadCompare:
 673              	.LFB14:
 794:Generated_Source\PSoC5/PWM_Stepper.c **** 
 795:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* (!PWM_Stepper_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_Stepper.c **** 
 797:Generated_Source\PSoC5/PWM_Stepper.c **** 
 798:Generated_Source\PSoC5/PWM_Stepper.c **** #if (PWM_Stepper_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_Stepper.c **** 
 800:Generated_Source\PSoC5/PWM_Stepper.c **** 
 801:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_ReadCompare
 803:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 805:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_Stepper.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_Stepper.c ****     *
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 27


 809:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 811:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 812:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_Stepper.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 815:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_Stepper.c ****     uint16 PWM_Stepper_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 674              		.loc 1 817 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 1, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679 0000 80B4     		push	{r7}
 680              		.cfi_def_cfa_offset 4
 681              		.cfi_offset 7, -4
 682 0002 00AF     		add	r7, sp, #0
 683              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC5/PWM_Stepper.c ****         #if(PWM_Stepper_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_Stepper.c ****             return ((uint16)CY_GET_REG16(PWM_Stepper_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_Stepper.c ****         #else
 821:Generated_Source\PSoC5/PWM_Stepper.c ****             return (CY_GET_REG16(PWM_Stepper_COMPARE1_LSB_PTR));
 684              		.loc 1 821 0
 685 0004 034B     		ldr	r3, .L50
 686 0006 1B88     		ldrh	r3, [r3]	@ movhi
 687 0008 9BB2     		uxth	r3, r3
 822:Generated_Source\PSoC5/PWM_Stepper.c ****         #endif /* (PWM_Stepper_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 688              		.loc 1 823 0
 689 000a 1846     		mov	r0, r3
 690 000c BD46     		mov	sp, r7
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 000e 80BC     		pop	{r7}
 694              		.cfi_restore 7
 695              		.cfi_def_cfa_offset 0
 696 0010 7047     		bx	lr
 697              	.L51:
 698 0012 00BF     		.align	2
 699              	.L50:
 700 0014 506A0040 		.word	1073769040
 701              		.cfi_endproc
 702              	.LFE14:
 703              		.size	PWM_Stepper_ReadCompare, .-PWM_Stepper_ReadCompare
 704              		.section	.text.PWM_Stepper_ReadPeriod,"ax",%progbits
 705              		.align	2
 706              		.global	PWM_Stepper_ReadPeriod
 707              		.thumb
 708              		.thumb_func
 709              		.type	PWM_Stepper_ReadPeriod, %function
 710              	PWM_Stepper_ReadPeriod:
 711              	.LFB15:
 824:Generated_Source\PSoC5/PWM_Stepper.c **** 
 825:Generated_Source\PSoC5/PWM_Stepper.c **** #else
 826:Generated_Source\PSoC5/PWM_Stepper.c **** 
 827:Generated_Source\PSoC5/PWM_Stepper.c **** 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 28


 828:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_ReadCompare1
 830:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 832:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 835:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 837:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 838:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_Stepper.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 841:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_Stepper.c ****     uint16 PWM_Stepper_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 844:Generated_Source\PSoC5/PWM_Stepper.c ****         return (CY_GET_REG16(PWM_Stepper_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 846:Generated_Source\PSoC5/PWM_Stepper.c **** 
 847:Generated_Source\PSoC5/PWM_Stepper.c **** 
 848:Generated_Source\PSoC5/PWM_Stepper.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_Stepper.c ****     * Function Name: PWM_Stepper_ReadCompare2
 850:Generated_Source\PSoC5/PWM_Stepper.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 852:Generated_Source\PSoC5/PWM_Stepper.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_Stepper.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 855:Generated_Source\PSoC5/PWM_Stepper.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_Stepper.c ****     *  None
 857:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 858:Generated_Source\PSoC5/PWM_Stepper.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_Stepper.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_Stepper.c ****     *
 861:Generated_Source\PSoC5/PWM_Stepper.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_Stepper.c ****     uint16 PWM_Stepper_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_Stepper.c ****     {
 864:Generated_Source\PSoC5/PWM_Stepper.c ****         return (CY_GET_REG16(PWM_Stepper_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_Stepper.c ****     }
 866:Generated_Source\PSoC5/PWM_Stepper.c **** 
 867:Generated_Source\PSoC5/PWM_Stepper.c **** #endif /* (PWM_Stepper_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_Stepper.c **** 
 869:Generated_Source\PSoC5/PWM_Stepper.c **** 
 870:Generated_Source\PSoC5/PWM_Stepper.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_Stepper.c **** * Function Name: PWM_Stepper_ReadPeriod
 872:Generated_Source\PSoC5/PWM_Stepper.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_Stepper.c **** *
 874:Generated_Source\PSoC5/PWM_Stepper.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_Stepper.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_Stepper.c **** *
 877:Generated_Source\PSoC5/PWM_Stepper.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_Stepper.c **** *  None
 879:Generated_Source\PSoC5/PWM_Stepper.c **** *
 880:Generated_Source\PSoC5/PWM_Stepper.c **** * Return:
 881:Generated_Source\PSoC5/PWM_Stepper.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_Stepper.c **** *
 883:Generated_Source\PSoC5/PWM_Stepper.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_Stepper.c **** uint16 PWM_Stepper_ReadPeriod(void) 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 29


 885:Generated_Source\PSoC5/PWM_Stepper.c **** {
 712              		.loc 1 885 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 80B4     		push	{r7}
 718              		.cfi_def_cfa_offset 4
 719              		.cfi_offset 7, -4
 720 0002 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_Stepper.c ****     #if(PWM_Stepper_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_Stepper.c ****         return ((uint16)CY_GET_REG16(PWM_Stepper_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_Stepper.c ****     #else
 889:Generated_Source\PSoC5/PWM_Stepper.c ****         return (CY_GET_REG16(PWM_Stepper_PERIOD_LSB_PTR));
 722              		.loc 1 889 0
 723 0004 034B     		ldr	r3, .L54
 724 0006 1B88     		ldrh	r3, [r3]	@ movhi
 725 0008 9BB2     		uxth	r3, r3
 890:Generated_Source\PSoC5/PWM_Stepper.c ****     #endif /* (PWM_Stepper_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_Stepper.c **** }
 726              		.loc 1 891 0
 727 000a 1846     		mov	r0, r3
 728 000c BD46     		mov	sp, r7
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 000e 80BC     		pop	{r7}
 732              		.cfi_restore 7
 733              		.cfi_def_cfa_offset 0
 734 0010 7047     		bx	lr
 735              	.L55:
 736 0012 00BF     		.align	2
 737              	.L54:
 738 0014 906A0040 		.word	1073769104
 739              		.cfi_endproc
 740              	.LFE15:
 741              		.size	PWM_Stepper_ReadPeriod, .-PWM_Stepper_ReadPeriod
 742              		.text
 743              	.Letext0:
 744              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 745              		.section	.debug_info,"",%progbits
 746              	.Ldebug_info0:
 747 0000 A3020000 		.4byte	0x2a3
 748 0004 0400     		.2byte	0x4
 749 0006 00000000 		.4byte	.Ldebug_abbrev0
 750 000a 04       		.byte	0x4
 751 000b 01       		.uleb128 0x1
 752 000c 1D000000 		.4byte	.LASF41
 753 0010 0C       		.byte	0xc
 754 0011 11020000 		.4byte	.LASF42
 755 0015 09010000 		.4byte	.LASF43
 756 0019 00000000 		.4byte	.Ldebug_ranges0+0
 757 001d 00000000 		.4byte	0
 758 0021 00000000 		.4byte	.Ldebug_line0
 759 0025 02       		.uleb128 0x2
 760 0026 01       		.byte	0x1
 761 0027 06       		.byte	0x6
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 30


 762 0028 8C030000 		.4byte	.LASF0
 763 002c 02       		.uleb128 0x2
 764 002d 01       		.byte	0x1
 765 002e 08       		.byte	0x8
 766 002f 55020000 		.4byte	.LASF1
 767 0033 02       		.uleb128 0x2
 768 0034 02       		.byte	0x2
 769 0035 05       		.byte	0x5
 770 0036 68030000 		.4byte	.LASF2
 771 003a 02       		.uleb128 0x2
 772 003b 02       		.byte	0x2
 773 003c 07       		.byte	0x7
 774 003d F6000000 		.4byte	.LASF3
 775 0041 02       		.uleb128 0x2
 776 0042 04       		.byte	0x4
 777 0043 05       		.byte	0x5
 778 0044 72030000 		.4byte	.LASF4
 779 0048 02       		.uleb128 0x2
 780 0049 04       		.byte	0x4
 781 004a 07       		.byte	0x7
 782 004b F1010000 		.4byte	.LASF5
 783 004f 02       		.uleb128 0x2
 784 0050 08       		.byte	0x8
 785 0051 05       		.byte	0x5
 786 0052 22030000 		.4byte	.LASF6
 787 0056 02       		.uleb128 0x2
 788 0057 08       		.byte	0x8
 789 0058 07       		.byte	0x7
 790 0059 AA020000 		.4byte	.LASF7
 791 005d 03       		.uleb128 0x3
 792 005e 04       		.byte	0x4
 793 005f 05       		.byte	0x5
 794 0060 696E7400 		.ascii	"int\000"
 795 0064 02       		.uleb128 0x2
 796 0065 04       		.byte	0x4
 797 0066 07       		.byte	0x7
 798 0067 9D020000 		.4byte	.LASF8
 799 006b 04       		.uleb128 0x4
 800 006c 03020000 		.4byte	.LASF9
 801 0070 02       		.byte	0x2
 802 0071 E401     		.2byte	0x1e4
 803 0073 2C000000 		.4byte	0x2c
 804 0077 04       		.uleb128 0x4
 805 0078 96020000 		.4byte	.LASF10
 806 007c 02       		.byte	0x2
 807 007d E501     		.2byte	0x1e5
 808 007f 3A000000 		.4byte	0x3a
 809 0083 02       		.uleb128 0x2
 810 0084 04       		.byte	0x4
 811 0085 04       		.byte	0x4
 812 0086 AD010000 		.4byte	.LASF11
 813 008a 02       		.uleb128 0x2
 814 008b 08       		.byte	0x8
 815 008c 04       		.byte	0x4
 816 008d 74020000 		.4byte	.LASF12
 817 0091 02       		.uleb128 0x2
 818 0092 01       		.byte	0x1
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 31


 819 0093 08       		.byte	0x8
 820 0094 7B030000 		.4byte	.LASF13
 821 0098 04       		.uleb128 0x4
 822 0099 EC010000 		.4byte	.LASF14
 823 009d 02       		.byte	0x2
 824 009e 8E02     		.2byte	0x28e
 825 00a0 A4000000 		.4byte	0xa4
 826 00a4 05       		.uleb128 0x5
 827 00a5 6B000000 		.4byte	0x6b
 828 00a9 04       		.uleb128 0x4
 829 00aa 00000000 		.4byte	.LASF15
 830 00ae 02       		.byte	0x2
 831 00af 8F02     		.2byte	0x28f
 832 00b1 B5000000 		.4byte	0xb5
 833 00b5 05       		.uleb128 0x5
 834 00b6 77000000 		.4byte	0x77
 835 00ba 02       		.uleb128 0x2
 836 00bb 08       		.byte	0x8
 837 00bc 04       		.byte	0x4
 838 00bd 80030000 		.4byte	.LASF16
 839 00c1 02       		.uleb128 0x2
 840 00c2 04       		.byte	0x4
 841 00c3 07       		.byte	0x7
 842 00c4 19030000 		.4byte	.LASF17
 843 00c8 06       		.uleb128 0x6
 844 00c9 30030000 		.4byte	.LASF20
 845 00cd 01       		.byte	0x1
 846 00ce 37       		.byte	0x37
 847 00cf 00000000 		.4byte	.LFB0
 848 00d3 24000000 		.4byte	.LFE0-.LFB0
 849 00d7 01       		.uleb128 0x1
 850 00d8 9C       		.byte	0x9c
 851 00d9 07       		.uleb128 0x7
 852 00da C1000000 		.4byte	.LASF23
 853 00de 01       		.byte	0x1
 854 00df 54       		.byte	0x54
 855 00e0 00000000 		.4byte	.LFB1
 856 00e4 98000000 		.4byte	.LFE1-.LFB1
 857 00e8 01       		.uleb128 0x1
 858 00e9 9C       		.byte	0x9c
 859 00ea 0B010000 		.4byte	0x10b
 860 00ee 08       		.uleb128 0x8
 861 00ef 00030000 		.4byte	.LASF18
 862 00f3 01       		.byte	0x1
 863 00f4 57       		.byte	0x57
 864 00f5 6B000000 		.4byte	0x6b
 865 00f9 02       		.uleb128 0x2
 866 00fa 91       		.byte	0x91
 867 00fb 77       		.sleb128 -9
 868 00fc 08       		.uleb128 0x8
 869 00fd 7B020000 		.4byte	.LASF19
 870 0101 01       		.byte	0x1
 871 0102 5D       		.byte	0x5d
 872 0103 6B000000 		.4byte	0x6b
 873 0107 02       		.uleb128 0x2
 874 0108 91       		.byte	0x91
 875 0109 76       		.sleb128 -10
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 32


 876 010a 00       		.byte	0
 877 010b 09       		.uleb128 0x9
 878 010c 79010000 		.4byte	.LASF21
 879 0110 01       		.byte	0x1
 880 0111 C7       		.byte	0xc7
 881 0112 00000000 		.4byte	.LFB2
 882 0116 20000000 		.4byte	.LFE2-.LFB2
 883 011a 01       		.uleb128 0x1
 884 011b 9C       		.byte	0x9c
 885 011c 09       		.uleb128 0x9
 886 011d 63020000 		.4byte	.LASF22
 887 0121 01       		.byte	0x1
 888 0122 E9       		.byte	0xe9
 889 0123 00000000 		.4byte	.LFB3
 890 0127 20000000 		.4byte	.LFE3-.LFB3
 891 012b 01       		.uleb128 0x1
 892 012c 9C       		.byte	0x9c
 893 012d 0A       		.uleb128 0xa
 894 012e D3010000 		.4byte	.LASF24
 895 0132 01       		.byte	0x1
 896 0133 9301     		.2byte	0x193
 897 0135 00000000 		.4byte	.LFB4
 898 0139 20000000 		.4byte	.LFE4-.LFB4
 899 013d 01       		.uleb128 0x1
 900 013e 9C       		.byte	0x9c
 901 013f 53010000 		.4byte	0x153
 902 0143 0B       		.uleb128 0xb
 903 0144 B3010000 		.4byte	.LASF27
 904 0148 01       		.byte	0x1
 905 0149 9301     		.2byte	0x193
 906 014b 77000000 		.4byte	0x77
 907 014f 02       		.uleb128 0x2
 908 0150 91       		.byte	0x91
 909 0151 76       		.sleb128 -10
 910 0152 00       		.byte	0
 911 0153 0C       		.uleb128 0xc
 912 0154 B9030000 		.4byte	.LASF33
 913 0158 01       		.byte	0x1
 914 0159 A901     		.2byte	0x1a9
 915 015b 77000000 		.4byte	0x77
 916 015f 00000000 		.4byte	.LFB5
 917 0163 20000000 		.4byte	.LFE5-.LFB5
 918 0167 01       		.uleb128 0x1
 919 0168 9C       		.byte	0x9c
 920 0169 0D       		.uleb128 0xd
 921 016a AB000000 		.4byte	.LASF25
 922 016e 01       		.byte	0x1
 923 016f C501     		.2byte	0x1c5
 924 0171 00000000 		.4byte	.LFB6
 925 0175 1C000000 		.4byte	.LFE6-.LFB6
 926 0179 01       		.uleb128 0x1
 927 017a 9C       		.byte	0x9c
 928 017b 0A       		.uleb128 0xa
 929 017c BB010000 		.4byte	.LASF26
 930 0180 01       		.byte	0x1
 931 0181 E201     		.2byte	0x1e2
 932 0183 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 33


 933 0187 20000000 		.4byte	.LFE7-.LFB7
 934 018b 01       		.uleb128 0x1
 935 018c 9C       		.byte	0x9c
 936 018d A1010000 		.4byte	0x1a1
 937 0191 0B       		.uleb128 0xb
 938 0192 D2000000 		.4byte	.LASF28
 939 0196 01       		.byte	0x1
 940 0197 E201     		.2byte	0x1e2
 941 0199 77000000 		.4byte	0x77
 942 019d 02       		.uleb128 0x2
 943 019e 91       		.byte	0x91
 944 019f 76       		.sleb128 -10
 945 01a0 00       		.byte	0
 946 01a1 0A       		.uleb128 0xa
 947 01a2 A0030000 		.4byte	.LASF29
 948 01a6 01       		.byte	0x1
 949 01a7 0402     		.2byte	0x204
 950 01a9 00000000 		.4byte	.LFB8
 951 01ad 20000000 		.4byte	.LFE8-.LFB8
 952 01b1 01       		.uleb128 0x1
 953 01b2 9C       		.byte	0x9c
 954 01b3 C7010000 		.4byte	0x1c7
 955 01b7 0B       		.uleb128 0xb
 956 01b8 98030000 		.4byte	.LASF30
 957 01bc 01       		.byte	0x1
 958 01bd 0402     		.2byte	0x204
 959 01bf 77000000 		.4byte	0x77
 960 01c3 02       		.uleb128 0x2
 961 01c4 91       		.byte	0x91
 962 01c5 76       		.sleb128 -10
 963 01c6 00       		.byte	0
 964 01c7 0A       		.uleb128 0xa
 965 01c8 D9000000 		.4byte	.LASF31
 966 01cc 01       		.byte	0x1
 967 01cd AC02     		.2byte	0x2ac
 968 01cf 00000000 		.4byte	.LFB9
 969 01d3 20000000 		.4byte	.LFE9-.LFB9
 970 01d7 01       		.uleb128 0x1
 971 01d8 9C       		.byte	0x9c
 972 01d9 ED010000 		.4byte	0x1ed
 973 01dd 0B       		.uleb128 0xb
 974 01de 42030000 		.4byte	.LASF32
 975 01e2 01       		.byte	0x1
 976 01e3 AC02     		.2byte	0x2ac
 977 01e5 6B000000 		.4byte	0x6b
 978 01e9 02       		.uleb128 0x2
 979 01ea 91       		.byte	0x91
 980 01eb 77       		.sleb128 -9
 981 01ec 00       		.byte	0
 982 01ed 0C       		.uleb128 0xc
 983 01ee 36020000 		.4byte	.LASF34
 984 01f2 01       		.byte	0x1
 985 01f3 C702     		.2byte	0x2c7
 986 01f5 6B000000 		.4byte	0x6b
 987 01f9 00000000 		.4byte	.LFB10
 988 01fd 18000000 		.4byte	.LFE10-.LFB10
 989 0201 01       		.uleb128 0x1
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 34


 990 0202 9C       		.byte	0x9c
 991 0203 0E       		.uleb128 0xe
 992 0204 E0020000 		.4byte	.LASF44
 993 0208 01       		.byte	0x1
 994 0209 E102     		.2byte	0x2e1
 995 020b 6B000000 		.4byte	0x6b
 996 020f 00000000 		.4byte	.LFB11
 997 0213 1C000000 		.4byte	.LFE11-.LFB11
 998 0217 01       		.uleb128 0x1
 999 0218 9C       		.byte	0x9c
 1000 0219 2D020000 		.4byte	0x22d
 1001 021d 0F       		.uleb128 0xf
 1002 021e D9020000 		.4byte	.LASF35
 1003 0222 01       		.byte	0x1
 1004 0223 E302     		.2byte	0x2e3
 1005 0225 6B000000 		.4byte	0x6b
 1006 0229 02       		.uleb128 0x2
 1007 022a 91       		.byte	0x91
 1008 022b 77       		.sleb128 -9
 1009 022c 00       		.byte	0
 1010 022d 0A       		.uleb128 0xa
 1011 022e 8C010000 		.4byte	.LASF36
 1012 0232 01       		.byte	0x1
 1013 0233 FD02     		.2byte	0x2fd
 1014 0235 00000000 		.4byte	.LFB12
 1015 0239 20000000 		.4byte	.LFE12-.LFB12
 1016 023d 01       		.uleb128 0x1
 1017 023e 9C       		.byte	0x9c
 1018 023f 53020000 		.4byte	0x253
 1019 0243 0B       		.uleb128 0xb
 1020 0244 09020000 		.4byte	.LASF37
 1021 0248 01       		.byte	0x1
 1022 0249 FD02     		.2byte	0x2fd
 1023 024b 6B000000 		.4byte	0x6b
 1024 024f 02       		.uleb128 0x2
 1025 0250 91       		.byte	0x91
 1026 0251 77       		.sleb128 -9
 1027 0252 00       		.byte	0
 1028 0253 0C       		.uleb128 0xc
 1029 0254 50030000 		.4byte	.LASF38
 1030 0258 01       		.byte	0x1
 1031 0259 1603     		.2byte	0x316
 1032 025b 77000000 		.4byte	0x77
 1033 025f 00000000 		.4byte	.LFB13
 1034 0263 18000000 		.4byte	.LFE13-.LFB13
 1035 0267 01       		.uleb128 0x1
 1036 0268 9C       		.byte	0x9c
 1037 0269 0C       		.uleb128 0xc
 1038 026a C1020000 		.4byte	.LASF39
 1039 026e 01       		.byte	0x1
 1040 026f 3003     		.2byte	0x330
 1041 0271 77000000 		.4byte	0x77
 1042 0275 00000000 		.4byte	.LFB14
 1043 0279 18000000 		.4byte	.LFE14-.LFB14
 1044 027d 01       		.uleb128 0x1
 1045 027e 9C       		.byte	0x9c
 1046 027f 0C       		.uleb128 0xc
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 35


 1047 0280 06000000 		.4byte	.LASF40
 1048 0284 01       		.byte	0x1
 1049 0285 7403     		.2byte	0x374
 1050 0287 77000000 		.4byte	0x77
 1051 028b 00000000 		.4byte	.LFB15
 1052 028f 18000000 		.4byte	.LFE15-.LFB15
 1053 0293 01       		.uleb128 0x1
 1054 0294 9C       		.byte	0x9c
 1055 0295 10       		.uleb128 0x10
 1056 0296 05030000 		.4byte	.LASF45
 1057 029a 01       		.byte	0x1
 1058 029b 20       		.byte	0x20
 1059 029c 6B000000 		.4byte	0x6b
 1060 02a0 05       		.uleb128 0x5
 1061 02a1 03       		.byte	0x3
 1062 02a2 00000000 		.4byte	PWM_Stepper_initVar
 1063 02a6 00       		.byte	0
 1064              		.section	.debug_abbrev,"",%progbits
 1065              	.Ldebug_abbrev0:
 1066 0000 01       		.uleb128 0x1
 1067 0001 11       		.uleb128 0x11
 1068 0002 01       		.byte	0x1
 1069 0003 25       		.uleb128 0x25
 1070 0004 0E       		.uleb128 0xe
 1071 0005 13       		.uleb128 0x13
 1072 0006 0B       		.uleb128 0xb
 1073 0007 03       		.uleb128 0x3
 1074 0008 0E       		.uleb128 0xe
 1075 0009 1B       		.uleb128 0x1b
 1076 000a 0E       		.uleb128 0xe
 1077 000b 55       		.uleb128 0x55
 1078 000c 17       		.uleb128 0x17
 1079 000d 11       		.uleb128 0x11
 1080 000e 01       		.uleb128 0x1
 1081 000f 10       		.uleb128 0x10
 1082 0010 17       		.uleb128 0x17
 1083 0011 00       		.byte	0
 1084 0012 00       		.byte	0
 1085 0013 02       		.uleb128 0x2
 1086 0014 24       		.uleb128 0x24
 1087 0015 00       		.byte	0
 1088 0016 0B       		.uleb128 0xb
 1089 0017 0B       		.uleb128 0xb
 1090 0018 3E       		.uleb128 0x3e
 1091 0019 0B       		.uleb128 0xb
 1092 001a 03       		.uleb128 0x3
 1093 001b 0E       		.uleb128 0xe
 1094 001c 00       		.byte	0
 1095 001d 00       		.byte	0
 1096 001e 03       		.uleb128 0x3
 1097 001f 24       		.uleb128 0x24
 1098 0020 00       		.byte	0
 1099 0021 0B       		.uleb128 0xb
 1100 0022 0B       		.uleb128 0xb
 1101 0023 3E       		.uleb128 0x3e
 1102 0024 0B       		.uleb128 0xb
 1103 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 36


 1104 0026 08       		.uleb128 0x8
 1105 0027 00       		.byte	0
 1106 0028 00       		.byte	0
 1107 0029 04       		.uleb128 0x4
 1108 002a 16       		.uleb128 0x16
 1109 002b 00       		.byte	0
 1110 002c 03       		.uleb128 0x3
 1111 002d 0E       		.uleb128 0xe
 1112 002e 3A       		.uleb128 0x3a
 1113 002f 0B       		.uleb128 0xb
 1114 0030 3B       		.uleb128 0x3b
 1115 0031 05       		.uleb128 0x5
 1116 0032 49       		.uleb128 0x49
 1117 0033 13       		.uleb128 0x13
 1118 0034 00       		.byte	0
 1119 0035 00       		.byte	0
 1120 0036 05       		.uleb128 0x5
 1121 0037 35       		.uleb128 0x35
 1122 0038 00       		.byte	0
 1123 0039 49       		.uleb128 0x49
 1124 003a 13       		.uleb128 0x13
 1125 003b 00       		.byte	0
 1126 003c 00       		.byte	0
 1127 003d 06       		.uleb128 0x6
 1128 003e 2E       		.uleb128 0x2e
 1129 003f 00       		.byte	0
 1130 0040 3F       		.uleb128 0x3f
 1131 0041 19       		.uleb128 0x19
 1132 0042 03       		.uleb128 0x3
 1133 0043 0E       		.uleb128 0xe
 1134 0044 3A       		.uleb128 0x3a
 1135 0045 0B       		.uleb128 0xb
 1136 0046 3B       		.uleb128 0x3b
 1137 0047 0B       		.uleb128 0xb
 1138 0048 27       		.uleb128 0x27
 1139 0049 19       		.uleb128 0x19
 1140 004a 11       		.uleb128 0x11
 1141 004b 01       		.uleb128 0x1
 1142 004c 12       		.uleb128 0x12
 1143 004d 06       		.uleb128 0x6
 1144 004e 40       		.uleb128 0x40
 1145 004f 18       		.uleb128 0x18
 1146 0050 9642     		.uleb128 0x2116
 1147 0052 19       		.uleb128 0x19
 1148 0053 00       		.byte	0
 1149 0054 00       		.byte	0
 1150 0055 07       		.uleb128 0x7
 1151 0056 2E       		.uleb128 0x2e
 1152 0057 01       		.byte	0x1
 1153 0058 3F       		.uleb128 0x3f
 1154 0059 19       		.uleb128 0x19
 1155 005a 03       		.uleb128 0x3
 1156 005b 0E       		.uleb128 0xe
 1157 005c 3A       		.uleb128 0x3a
 1158 005d 0B       		.uleb128 0xb
 1159 005e 3B       		.uleb128 0x3b
 1160 005f 0B       		.uleb128 0xb
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 37


 1161 0060 27       		.uleb128 0x27
 1162 0061 19       		.uleb128 0x19
 1163 0062 11       		.uleb128 0x11
 1164 0063 01       		.uleb128 0x1
 1165 0064 12       		.uleb128 0x12
 1166 0065 06       		.uleb128 0x6
 1167 0066 40       		.uleb128 0x40
 1168 0067 18       		.uleb128 0x18
 1169 0068 9642     		.uleb128 0x2116
 1170 006a 19       		.uleb128 0x19
 1171 006b 01       		.uleb128 0x1
 1172 006c 13       		.uleb128 0x13
 1173 006d 00       		.byte	0
 1174 006e 00       		.byte	0
 1175 006f 08       		.uleb128 0x8
 1176 0070 34       		.uleb128 0x34
 1177 0071 00       		.byte	0
 1178 0072 03       		.uleb128 0x3
 1179 0073 0E       		.uleb128 0xe
 1180 0074 3A       		.uleb128 0x3a
 1181 0075 0B       		.uleb128 0xb
 1182 0076 3B       		.uleb128 0x3b
 1183 0077 0B       		.uleb128 0xb
 1184 0078 49       		.uleb128 0x49
 1185 0079 13       		.uleb128 0x13
 1186 007a 02       		.uleb128 0x2
 1187 007b 18       		.uleb128 0x18
 1188 007c 00       		.byte	0
 1189 007d 00       		.byte	0
 1190 007e 09       		.uleb128 0x9
 1191 007f 2E       		.uleb128 0x2e
 1192 0080 00       		.byte	0
 1193 0081 3F       		.uleb128 0x3f
 1194 0082 19       		.uleb128 0x19
 1195 0083 03       		.uleb128 0x3
 1196 0084 0E       		.uleb128 0xe
 1197 0085 3A       		.uleb128 0x3a
 1198 0086 0B       		.uleb128 0xb
 1199 0087 3B       		.uleb128 0x3b
 1200 0088 0B       		.uleb128 0xb
 1201 0089 27       		.uleb128 0x27
 1202 008a 19       		.uleb128 0x19
 1203 008b 11       		.uleb128 0x11
 1204 008c 01       		.uleb128 0x1
 1205 008d 12       		.uleb128 0x12
 1206 008e 06       		.uleb128 0x6
 1207 008f 40       		.uleb128 0x40
 1208 0090 18       		.uleb128 0x18
 1209 0091 9742     		.uleb128 0x2117
 1210 0093 19       		.uleb128 0x19
 1211 0094 00       		.byte	0
 1212 0095 00       		.byte	0
 1213 0096 0A       		.uleb128 0xa
 1214 0097 2E       		.uleb128 0x2e
 1215 0098 01       		.byte	0x1
 1216 0099 3F       		.uleb128 0x3f
 1217 009a 19       		.uleb128 0x19
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 38


 1218 009b 03       		.uleb128 0x3
 1219 009c 0E       		.uleb128 0xe
 1220 009d 3A       		.uleb128 0x3a
 1221 009e 0B       		.uleb128 0xb
 1222 009f 3B       		.uleb128 0x3b
 1223 00a0 05       		.uleb128 0x5
 1224 00a1 27       		.uleb128 0x27
 1225 00a2 19       		.uleb128 0x19
 1226 00a3 11       		.uleb128 0x11
 1227 00a4 01       		.uleb128 0x1
 1228 00a5 12       		.uleb128 0x12
 1229 00a6 06       		.uleb128 0x6
 1230 00a7 40       		.uleb128 0x40
 1231 00a8 18       		.uleb128 0x18
 1232 00a9 9742     		.uleb128 0x2117
 1233 00ab 19       		.uleb128 0x19
 1234 00ac 01       		.uleb128 0x1
 1235 00ad 13       		.uleb128 0x13
 1236 00ae 00       		.byte	0
 1237 00af 00       		.byte	0
 1238 00b0 0B       		.uleb128 0xb
 1239 00b1 05       		.uleb128 0x5
 1240 00b2 00       		.byte	0
 1241 00b3 03       		.uleb128 0x3
 1242 00b4 0E       		.uleb128 0xe
 1243 00b5 3A       		.uleb128 0x3a
 1244 00b6 0B       		.uleb128 0xb
 1245 00b7 3B       		.uleb128 0x3b
 1246 00b8 05       		.uleb128 0x5
 1247 00b9 49       		.uleb128 0x49
 1248 00ba 13       		.uleb128 0x13
 1249 00bb 02       		.uleb128 0x2
 1250 00bc 18       		.uleb128 0x18
 1251 00bd 00       		.byte	0
 1252 00be 00       		.byte	0
 1253 00bf 0C       		.uleb128 0xc
 1254 00c0 2E       		.uleb128 0x2e
 1255 00c1 00       		.byte	0
 1256 00c2 3F       		.uleb128 0x3f
 1257 00c3 19       		.uleb128 0x19
 1258 00c4 03       		.uleb128 0x3
 1259 00c5 0E       		.uleb128 0xe
 1260 00c6 3A       		.uleb128 0x3a
 1261 00c7 0B       		.uleb128 0xb
 1262 00c8 3B       		.uleb128 0x3b
 1263 00c9 05       		.uleb128 0x5
 1264 00ca 27       		.uleb128 0x27
 1265 00cb 19       		.uleb128 0x19
 1266 00cc 49       		.uleb128 0x49
 1267 00cd 13       		.uleb128 0x13
 1268 00ce 11       		.uleb128 0x11
 1269 00cf 01       		.uleb128 0x1
 1270 00d0 12       		.uleb128 0x12
 1271 00d1 06       		.uleb128 0x6
 1272 00d2 40       		.uleb128 0x40
 1273 00d3 18       		.uleb128 0x18
 1274 00d4 9742     		.uleb128 0x2117
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 39


 1275 00d6 19       		.uleb128 0x19
 1276 00d7 00       		.byte	0
 1277 00d8 00       		.byte	0
 1278 00d9 0D       		.uleb128 0xd
 1279 00da 2E       		.uleb128 0x2e
 1280 00db 00       		.byte	0
 1281 00dc 3F       		.uleb128 0x3f
 1282 00dd 19       		.uleb128 0x19
 1283 00de 03       		.uleb128 0x3
 1284 00df 0E       		.uleb128 0xe
 1285 00e0 3A       		.uleb128 0x3a
 1286 00e1 0B       		.uleb128 0xb
 1287 00e2 3B       		.uleb128 0x3b
 1288 00e3 05       		.uleb128 0x5
 1289 00e4 27       		.uleb128 0x27
 1290 00e5 19       		.uleb128 0x19
 1291 00e6 11       		.uleb128 0x11
 1292 00e7 01       		.uleb128 0x1
 1293 00e8 12       		.uleb128 0x12
 1294 00e9 06       		.uleb128 0x6
 1295 00ea 40       		.uleb128 0x40
 1296 00eb 18       		.uleb128 0x18
 1297 00ec 9642     		.uleb128 0x2116
 1298 00ee 19       		.uleb128 0x19
 1299 00ef 00       		.byte	0
 1300 00f0 00       		.byte	0
 1301 00f1 0E       		.uleb128 0xe
 1302 00f2 2E       		.uleb128 0x2e
 1303 00f3 01       		.byte	0x1
 1304 00f4 3F       		.uleb128 0x3f
 1305 00f5 19       		.uleb128 0x19
 1306 00f6 03       		.uleb128 0x3
 1307 00f7 0E       		.uleb128 0xe
 1308 00f8 3A       		.uleb128 0x3a
 1309 00f9 0B       		.uleb128 0xb
 1310 00fa 3B       		.uleb128 0x3b
 1311 00fb 05       		.uleb128 0x5
 1312 00fc 27       		.uleb128 0x27
 1313 00fd 19       		.uleb128 0x19
 1314 00fe 49       		.uleb128 0x49
 1315 00ff 13       		.uleb128 0x13
 1316 0100 11       		.uleb128 0x11
 1317 0101 01       		.uleb128 0x1
 1318 0102 12       		.uleb128 0x12
 1319 0103 06       		.uleb128 0x6
 1320 0104 40       		.uleb128 0x40
 1321 0105 18       		.uleb128 0x18
 1322 0106 9742     		.uleb128 0x2117
 1323 0108 19       		.uleb128 0x19
 1324 0109 01       		.uleb128 0x1
 1325 010a 13       		.uleb128 0x13
 1326 010b 00       		.byte	0
 1327 010c 00       		.byte	0
 1328 010d 0F       		.uleb128 0xf
 1329 010e 34       		.uleb128 0x34
 1330 010f 00       		.byte	0
 1331 0110 03       		.uleb128 0x3
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 40


 1332 0111 0E       		.uleb128 0xe
 1333 0112 3A       		.uleb128 0x3a
 1334 0113 0B       		.uleb128 0xb
 1335 0114 3B       		.uleb128 0x3b
 1336 0115 05       		.uleb128 0x5
 1337 0116 49       		.uleb128 0x49
 1338 0117 13       		.uleb128 0x13
 1339 0118 02       		.uleb128 0x2
 1340 0119 18       		.uleb128 0x18
 1341 011a 00       		.byte	0
 1342 011b 00       		.byte	0
 1343 011c 10       		.uleb128 0x10
 1344 011d 34       		.uleb128 0x34
 1345 011e 00       		.byte	0
 1346 011f 03       		.uleb128 0x3
 1347 0120 0E       		.uleb128 0xe
 1348 0121 3A       		.uleb128 0x3a
 1349 0122 0B       		.uleb128 0xb
 1350 0123 3B       		.uleb128 0x3b
 1351 0124 0B       		.uleb128 0xb
 1352 0125 49       		.uleb128 0x49
 1353 0126 13       		.uleb128 0x13
 1354 0127 3F       		.uleb128 0x3f
 1355 0128 19       		.uleb128 0x19
 1356 0129 02       		.uleb128 0x2
 1357 012a 18       		.uleb128 0x18
 1358 012b 00       		.byte	0
 1359 012c 00       		.byte	0
 1360 012d 00       		.byte	0
 1361              		.section	.debug_aranges,"",%progbits
 1362 0000 94000000 		.4byte	0x94
 1363 0004 0200     		.2byte	0x2
 1364 0006 00000000 		.4byte	.Ldebug_info0
 1365 000a 04       		.byte	0x4
 1366 000b 00       		.byte	0
 1367 000c 0000     		.2byte	0
 1368 000e 0000     		.2byte	0
 1369 0010 00000000 		.4byte	.LFB0
 1370 0014 24000000 		.4byte	.LFE0-.LFB0
 1371 0018 00000000 		.4byte	.LFB1
 1372 001c 98000000 		.4byte	.LFE1-.LFB1
 1373 0020 00000000 		.4byte	.LFB2
 1374 0024 20000000 		.4byte	.LFE2-.LFB2
 1375 0028 00000000 		.4byte	.LFB3
 1376 002c 20000000 		.4byte	.LFE3-.LFB3
 1377 0030 00000000 		.4byte	.LFB4
 1378 0034 20000000 		.4byte	.LFE4-.LFB4
 1379 0038 00000000 		.4byte	.LFB5
 1380 003c 20000000 		.4byte	.LFE5-.LFB5
 1381 0040 00000000 		.4byte	.LFB6
 1382 0044 1C000000 		.4byte	.LFE6-.LFB6
 1383 0048 00000000 		.4byte	.LFB7
 1384 004c 20000000 		.4byte	.LFE7-.LFB7
 1385 0050 00000000 		.4byte	.LFB8
 1386 0054 20000000 		.4byte	.LFE8-.LFB8
 1387 0058 00000000 		.4byte	.LFB9
 1388 005c 20000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 41


 1389 0060 00000000 		.4byte	.LFB10
 1390 0064 18000000 		.4byte	.LFE10-.LFB10
 1391 0068 00000000 		.4byte	.LFB11
 1392 006c 1C000000 		.4byte	.LFE11-.LFB11
 1393 0070 00000000 		.4byte	.LFB12
 1394 0074 20000000 		.4byte	.LFE12-.LFB12
 1395 0078 00000000 		.4byte	.LFB13
 1396 007c 18000000 		.4byte	.LFE13-.LFB13
 1397 0080 00000000 		.4byte	.LFB14
 1398 0084 18000000 		.4byte	.LFE14-.LFB14
 1399 0088 00000000 		.4byte	.LFB15
 1400 008c 18000000 		.4byte	.LFE15-.LFB15
 1401 0090 00000000 		.4byte	0
 1402 0094 00000000 		.4byte	0
 1403              		.section	.debug_ranges,"",%progbits
 1404              	.Ldebug_ranges0:
 1405 0000 00000000 		.4byte	.LFB0
 1406 0004 24000000 		.4byte	.LFE0
 1407 0008 00000000 		.4byte	.LFB1
 1408 000c 98000000 		.4byte	.LFE1
 1409 0010 00000000 		.4byte	.LFB2
 1410 0014 20000000 		.4byte	.LFE2
 1411 0018 00000000 		.4byte	.LFB3
 1412 001c 20000000 		.4byte	.LFE3
 1413 0020 00000000 		.4byte	.LFB4
 1414 0024 20000000 		.4byte	.LFE4
 1415 0028 00000000 		.4byte	.LFB5
 1416 002c 20000000 		.4byte	.LFE5
 1417 0030 00000000 		.4byte	.LFB6
 1418 0034 1C000000 		.4byte	.LFE6
 1419 0038 00000000 		.4byte	.LFB7
 1420 003c 20000000 		.4byte	.LFE7
 1421 0040 00000000 		.4byte	.LFB8
 1422 0044 20000000 		.4byte	.LFE8
 1423 0048 00000000 		.4byte	.LFB9
 1424 004c 20000000 		.4byte	.LFE9
 1425 0050 00000000 		.4byte	.LFB10
 1426 0054 18000000 		.4byte	.LFE10
 1427 0058 00000000 		.4byte	.LFB11
 1428 005c 1C000000 		.4byte	.LFE11
 1429 0060 00000000 		.4byte	.LFB12
 1430 0064 20000000 		.4byte	.LFE12
 1431 0068 00000000 		.4byte	.LFB13
 1432 006c 18000000 		.4byte	.LFE13
 1433 0070 00000000 		.4byte	.LFB14
 1434 0074 18000000 		.4byte	.LFE14
 1435 0078 00000000 		.4byte	.LFB15
 1436 007c 18000000 		.4byte	.LFE15
 1437 0080 00000000 		.4byte	0
 1438 0084 00000000 		.4byte	0
 1439              		.section	.debug_line,"",%progbits
 1440              	.Ldebug_line0:
 1441 0000 8B010000 		.section	.debug_str,"MS",%progbits,1
 1441      02004800 
 1441      00000201 
 1441      FB0E0D00 
 1441      01010101 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 42


 1442              	.LASF15:
 1443 0000 72656731 		.ascii	"reg16\000"
 1443      3600
 1444              	.LASF40:
 1445 0006 50574D5F 		.ascii	"PWM_Stepper_ReadPeriod\000"
 1445      53746570 
 1445      7065725F 
 1445      52656164 
 1445      50657269 
 1446              	.LASF41:
 1447 001d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1447      43313120 
 1447      352E342E 
 1447      31203230 
 1447      31363036 
 1448 0050 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1448      20726576 
 1448      6973696F 
 1448      6E203233 
 1448      37373135 
 1449 0083 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1449      66756E63 
 1449      74696F6E 
 1449      2D736563 
 1449      74696F6E 
 1450              	.LASF25:
 1451 00ab 50574D5F 		.ascii	"PWM_Stepper_ClearFIFO\000"
 1451      53746570 
 1451      7065725F 
 1451      436C6561 
 1451      72464946 
 1452              	.LASF23:
 1453 00c1 50574D5F 		.ascii	"PWM_Stepper_Init\000"
 1453      53746570 
 1453      7065725F 
 1453      496E6974 
 1453      00
 1454              	.LASF28:
 1455 00d2 70657269 		.ascii	"period\000"
 1455      6F6400
 1456              	.LASF31:
 1457 00d9 50574D5F 		.ascii	"PWM_Stepper_SetInterruptMode\000"
 1457      53746570 
 1457      7065725F 
 1457      53657449 
 1457      6E746572 
 1458              	.LASF3:
 1459 00f6 73686F72 		.ascii	"short unsigned int\000"
 1459      7420756E 
 1459      7369676E 
 1459      65642069 
 1459      6E7400
 1460              	.LASF43:
 1461 0109 433A5C55 		.ascii	"C:\\Users\\oars0\\Documents\\GitHub\\Interfacing_La"
 1461      73657273 
 1461      5C6F6172 
 1461      73305C44 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 43


 1461      6F63756D 
 1462 0137 625C4C61 		.ascii	"b\\Lab_3_motors\\PSOC_Creator\\ServoAndStepper\\Ser"
 1462      625F335F 
 1462      6D6F746F 
 1462      72735C50 
 1462      534F435F 
 1463 0166 766F416E 		.ascii	"voAndStepper.cydsn\000"
 1463      64537465 
 1463      70706572 
 1463      2E637964 
 1463      736E00
 1464              	.LASF21:
 1465 0179 50574D5F 		.ascii	"PWM_Stepper_Enable\000"
 1465      53746570 
 1465      7065725F 
 1465      456E6162 
 1465      6C6500
 1466              	.LASF36:
 1467 018c 50574D5F 		.ascii	"PWM_Stepper_WriteControlRegister\000"
 1467      53746570 
 1467      7065725F 
 1467      57726974 
 1467      65436F6E 
 1468              	.LASF11:
 1469 01ad 666C6F61 		.ascii	"float\000"
 1469      7400
 1470              	.LASF27:
 1471 01b3 636F756E 		.ascii	"counter\000"
 1471      74657200 
 1472              	.LASF26:
 1473 01bb 50574D5F 		.ascii	"PWM_Stepper_WritePeriod\000"
 1473      53746570 
 1473      7065725F 
 1473      57726974 
 1473      65506572 
 1474              	.LASF24:
 1475 01d3 50574D5F 		.ascii	"PWM_Stepper_WriteCounter\000"
 1475      53746570 
 1475      7065725F 
 1475      57726974 
 1475      65436F75 
 1476              	.LASF14:
 1477 01ec 72656738 		.ascii	"reg8\000"
 1477      00
 1478              	.LASF5:
 1479 01f1 6C6F6E67 		.ascii	"long unsigned int\000"
 1479      20756E73 
 1479      69676E65 
 1479      6420696E 
 1479      7400
 1480              	.LASF9:
 1481 0203 75696E74 		.ascii	"uint8\000"
 1481      3800
 1482              	.LASF37:
 1483 0209 636F6E74 		.ascii	"control\000"
 1483      726F6C00 
 1484              	.LASF42:
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 44


 1485 0211 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_Stepper.c\000"
 1485      72617465 
 1485      645F536F 
 1485      75726365 
 1485      5C50536F 
 1486              	.LASF34:
 1487 0236 50574D5F 		.ascii	"PWM_Stepper_ReadStatusRegister\000"
 1487      53746570 
 1487      7065725F 
 1487      52656164 
 1487      53746174 
 1488              	.LASF1:
 1489 0255 756E7369 		.ascii	"unsigned char\000"
 1489      676E6564 
 1489      20636861 
 1489      7200
 1490              	.LASF22:
 1491 0263 50574D5F 		.ascii	"PWM_Stepper_Stop\000"
 1491      53746570 
 1491      7065725F 
 1491      53746F70 
 1491      00
 1492              	.LASF12:
 1493 0274 646F7562 		.ascii	"double\000"
 1493      6C6500
 1494              	.LASF19:
 1495 027b 50574D5F 		.ascii	"PWM_Stepper_interruptState\000"
 1495      53746570 
 1495      7065725F 
 1495      696E7465 
 1495      72727570 
 1496              	.LASF10:
 1497 0296 75696E74 		.ascii	"uint16\000"
 1497      313600
 1498              	.LASF8:
 1499 029d 756E7369 		.ascii	"unsigned int\000"
 1499      676E6564 
 1499      20696E74 
 1499      00
 1500              	.LASF7:
 1501 02aa 6C6F6E67 		.ascii	"long long unsigned int\000"
 1501      206C6F6E 
 1501      6720756E 
 1501      7369676E 
 1501      65642069 
 1502              	.LASF39:
 1503 02c1 50574D5F 		.ascii	"PWM_Stepper_ReadCompare\000"
 1503      53746570 
 1503      7065725F 
 1503      52656164 
 1503      436F6D70 
 1504              	.LASF35:
 1505 02d9 72657375 		.ascii	"result\000"
 1505      6C7400
 1506              	.LASF44:
 1507 02e0 50574D5F 		.ascii	"PWM_Stepper_ReadControlRegister\000"
 1507      53746570 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 45


 1507      7065725F 
 1507      52656164 
 1507      436F6E74 
 1508              	.LASF18:
 1509 0300 6374726C 		.ascii	"ctrl\000"
 1509      00
 1510              	.LASF45:
 1511 0305 50574D5F 		.ascii	"PWM_Stepper_initVar\000"
 1511      53746570 
 1511      7065725F 
 1511      696E6974 
 1511      56617200 
 1512              	.LASF17:
 1513 0319 73697A65 		.ascii	"sizetype\000"
 1513      74797065 
 1513      00
 1514              	.LASF6:
 1515 0322 6C6F6E67 		.ascii	"long long int\000"
 1515      206C6F6E 
 1515      6720696E 
 1515      7400
 1516              	.LASF20:
 1517 0330 50574D5F 		.ascii	"PWM_Stepper_Start\000"
 1517      53746570 
 1517      7065725F 
 1517      53746172 
 1517      7400
 1518              	.LASF32:
 1519 0342 696E7465 		.ascii	"interruptMode\000"
 1519      72727570 
 1519      744D6F64 
 1519      6500
 1520              	.LASF38:
 1521 0350 50574D5F 		.ascii	"PWM_Stepper_ReadCapture\000"
 1521      53746570 
 1521      7065725F 
 1521      52656164 
 1521      43617074 
 1522              	.LASF2:
 1523 0368 73686F72 		.ascii	"short int\000"
 1523      7420696E 
 1523      7400
 1524              	.LASF4:
 1525 0372 6C6F6E67 		.ascii	"long int\000"
 1525      20696E74 
 1525      00
 1526              	.LASF13:
 1527 037b 63686172 		.ascii	"char\000"
 1527      00
 1528              	.LASF16:
 1529 0380 6C6F6E67 		.ascii	"long double\000"
 1529      20646F75 
 1529      626C6500 
 1530              	.LASF0:
 1531 038c 7369676E 		.ascii	"signed char\000"
 1531      65642063 
 1531      68617200 
ARM GAS  C:\Users\oars0\AppData\Local\Temp\cccD4JDO.s 			page 46


 1532              	.LASF30:
 1533 0398 636F6D70 		.ascii	"compare\000"
 1533      61726500 
 1534              	.LASF29:
 1535 03a0 50574D5F 		.ascii	"PWM_Stepper_WriteCompare\000"
 1535      53746570 
 1535      7065725F 
 1535      57726974 
 1535      65436F6D 
 1536              	.LASF33:
 1537 03b9 50574D5F 		.ascii	"PWM_Stepper_ReadCounter\000"
 1537      53746570 
 1537      7065725F 
 1537      52656164 
 1537      436F756E 
 1538              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
